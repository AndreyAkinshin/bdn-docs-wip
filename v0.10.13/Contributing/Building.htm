<!DOCTYPE html>
<!--[if IE 8]><html class="no-js lt-ie9" lang="en" > <![endif]-->
<!--[if gt IE 8]><!-->
<html class="no-js" lang="en">
<!--<![endif]-->
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>Building - BenchmarkDotNet Documentation</title>
    <link rel="shortcut icon" href="../favicon.ico">
    <link rel="stylesheet" href="../css/theme.css" type="text/css" />
    <link rel="stylesheet" href="../css/theme_colors.css" type="text/css" />
    <link rel="stylesheet" href="../css/styles/vs.css">
    <link rel="stylesheet" href="../css/font-awesome.4.5.0.min.css">

    <!-- Google Analytics -->
    <script>
      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
      })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

      ga('create', 'UA-41419012-6', 'auto');
      ga('send', 'pageview');

    </script>
    <!-- /Google Analytics -->
    <!-- Yandex.Metrika counter -->
    <script type="text/javascript">
        (function (d, w, c) {
            (w[c] = w[c] || []).push(function() {
                try {
                    w.yaCounter40812449 = new Ya.Metrika({
                        id:40812449,
                        clickmap:true,
                        trackLinks:true,
                        accurateTrackBounce:true
                    });
                } catch(e) { }
            });

            var n = d.getElementsByTagName("script")[0],
                s = d.createElement("script"),
                f = function () { n.parentNode.insertBefore(s, n); };
            s.type = "text/javascript";
            s.async = true;
            s.src = "https://mc.yandex.ru/metrika/watch.js";

            if (w.opera == "[object Opera]") {
                d.addEventListener("DOMContentLoaded", f, false);
            } else { f(); }
        })(document, window, "yandex_metrika_callbacks");
    </script>
    <noscript><div><img src="https://mc.yandex.ru/watch/40812449" style="position:absolute; left:-9999px;" alt="" /></div></noscript>
    <!-- /Yandex.Metrika counter -->
</head>
<body role="document">
    <div class="grid-for-nav">
        <nav data-toggle="nav-shift" class="nav-side stickynav">
            <div class="side-nav-search">
                <a href="../index.htm"><i class="fa fa-home"></i> BenchmarkDotNet Documentation</a>
                <div role="search">
                    <form id="search-form" class="form" action="../Docnet_search.htm" method="get">
                        <input type="text" name="q" placeholder="Search docs" />
                    </form>
                </div>
            </div>
            <div class="menu menu-vertical" data-spy="affix" role="navigation" aria-label="main navigation">
<ul>
<li class="tocentry"><a href="../index.htm">Home</a>
</li>

<li class="tocentry"><a href="../Overview.htm">Overview</a>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../Guides.htm">Guides</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../Configs.htm">Configs</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../Advancedfeatures.htm">Advanced features</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../Internals.htm">Internals</a></span>
</li>
<li class="tocentry">
<ul>
<li><span class="navigationgroup"><i class="fa fa-caret-down"></i> <a href="../Contributing.htm">Contributing</a></span></li>
<li class="tocentry current"><a class="current" href="../Contributing/Building.htm">Building</a>
<ul class="currentrelative">
<li class="tocentry"><a href="#option-a-windows-only---visual-studio">Option A (Windows only) - Visual Studio</a></li>
<li class="tocentry"><a href="#option-b-windows-linux-macos---cake-c-make">Option B (Windows, Linux, macOS) - Cake (C# Make)</a></li>
</ul>
<li class="tocentry"><a href="../Contributing/Debugging.htm">Debugging</a>
</li>
<li class="tocentry"><a href="../Contributing/RunningTests.htm">Running tests</a>
</li>
<li class="tocentry"><a href="../Contributing/Development.htm">Development</a>
</li>
<li class="tocentry"><a href="../Contributing/Miscellaneous.htm">Miscellaneous topics</a>
</li>
<li class="tocentry"><a href="../Contributing/Disassembler.htm">Disassembler</a>
</li>

</ul>
</li>
<li class="tocentry"><a href="../FAQ.htm">FAQ</a>
</li>
<li class="tocentry"><a href="../Team.htm">Team</a>
</li>
<li class="tocentry"><a href="../license.htm">License</a>
</li>
</ul>
				<div class="toc-footer">
					<span class="text-small">
						<hr/>
						<a href="https://github.com/FransBouma/DocNet" target="_blank">Made with <i class="fa fa-github"></i> DocNet</a>
					</span>
				</div>	
			</div>
            &nbsp;
        </nav>
        <section data-toggle="nav-shift" class="nav-content-wrap">
            <nav class="nav-top" role="navigation" aria-label="top navigation">
                <i data-toggle="nav-top" class="fa fa-bars"></i>
                <a href="../index.htm">BenchmarkDotNet Documentation</a>
            </nav>
            <div class="nav-content">
                <div role="navigation" aria-label="breadcrumbs navigation">
                    <div class="breadcrumbs">
<ul><li><a href="../index.htm">Home</a></li> / <li><a href="../Contributing.htm">Contributing</a></li> / <li><a href="../Contributing/Building.htm">Building</a></li></ul>
					
                    </div>
                    <hr />
                </div>
                <div role="main">
                    <div class="section">
<h1 id="building">Building<a class="headerlink" href="#building" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h1>
<p>There are two recommended options to build BenchmarkDotNet from source:</p>
<h2 id="option-a-windows-only---visual-studio">Option A (Windows only) - Visual Studio<a class="headerlink" href="#option-a-windows-only---visual-studio" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<ul>
<li>
<p><a href="https://www.visualstudio.com/downloads/" target="_blank">Visual Studio 2017 version 15.5 Preview 4 or higher</a> (Community, Professional, Enterprise).</p>
</li>
<li>
<p>Visual Studio 2017 should have installed the .NET Core SDK, but in case it did not you can get it from the <a href="https://www.microsoft.com/net/core" target="_blank">Installing the .Net Core SDK page</a>.</p>
</li>
<li>
<p>Visual Studio 2017 should have installed “F# language support” feature. You can also install the support <a href="https://www.microsoft.com/en-us/download/details.aspx?id=48179" target="_blank">directly as a separate download</a>.</p>
</li>
</ul>
<p>Once all the necessary tools are in place, building is trivial. Simply open solution file <strong>BenchmarkDotNet.sln</strong> that lives at the base of the repository and run Build action.</p>
<h2 id="option-b-windows-linux-macos---cake-c-make">Option B (Windows, Linux, macOS) - Cake (C# Make)<a class="headerlink" href="#option-b-windows-linux-macos---cake-c-make" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p><a href="http://cakebuild.net/" target="_blank">Cake (C# Make)</a> is a cross platform build automation system with a C# DSL to do things like compiling code, copy files/folders, running unit tests, compress files and build NuGet packages.</p>
<p>The build currently depends on the following prerequisites:</p>
<ul>
<li>
<p>Windows:</p>
<ul>
<li>PowerShell version 5 or higher</li>
<li>MSBuild version 15.1 or higher</li>
<li>.NET Framework 4.6 or higher</li>
</ul>
</li>
<li>
<p>Linux:</p>
<ul>
<li>Install <a href="http://www.mono-project.com/download/#download-lin" target="_blank">Mono version 5 or higher</a></li>
<li>Install <a href="http://fsharp.org/use/linux/" target="_blank">fsharp package</a></li>
<li>Install packages required to .NET Core SDK</li>
<li>gettext</li>
<li>libcurl4-openssl-dev</li>
<li>libicu-dev</li>
<li>libssl-dev</li>
<li>libunwind8</li>
</ul>
</li>
<li>
<p>macOS</p>
<ul>
<li>Install <a href="http://www.mono-project.com/download/#download-mac" target="_blank">Mono version 5 or higher</a></li>
<li>Install <a href="http://fsharp.org/use/mac/" target="_blank">fsharp package</a></li>
<li>Install the latest version of <a href="https://www.microsoft.com/net/core#macos" target="_blank">OpenSSL</a>.</li>
</ul>
</li>
</ul>
<p>After you have installed these pre-requisites, you can build the BenchmarkDotNet by invoking the build script (<code>build.ps1</code> on Windows, or <code>build.sh</code> on Linux and macOS) at the base of the BenchmarkDotNet repository. By default the build process also run all the tests. There are quite a few tests, taking a significant amount of time that is not necessary if you just want to experiment with changes. You can skip the tests phase by adding the <code>skiptests</code> argument to the build script, e.g. <code>.\build.ps1 --SkipTests=True</code> or <code>./build.sh --skiptests=true</code>.</p>
<p>Build has a number of options that you use. Some of the more important options are</p>
<ul>
<li>
<p><strong>skiptests</strong> - do not run the tests. This can shorten build times quite a bit. On Windows: <code>.\build.ps1 --SkipTests=True</code> or <code>./build.sh --skiptests=true</code> on Linux/macOS.</p>
</li>
<li>
<p><strong>configuration</strong> - build the 'Release' or 'Debug' build type. Default value is 'Release'. On Windows: <code>.\build.ps1 -Configuration Debug</code> or <code>./build.sh --configuration debug</code> on Linux/macOS.</p>
</li>
<li>
<p><strong>target</strong> - with this parameter you can run a specific target from build pipeline. Default value is 'Default' target. On Windows: <code>.\build.ps1 -Target Default</code> or <code>./build.sh --target default</code> on Linux/macOS. Available targets:</p>
<ul>
<li><strong>Default</strong> - run all actions one by one.</li>
<li><strong>Clean</strong> - clean all <code>obj</code>, <code>bin</code> and <code>artifacts</code> directories.</li>
<li><strong>Restore</strong> - automatically execute <code>Clean</code> action and after that restore all NuGet dependencies.</li>
<li><strong>Build</strong> - automatically execute <code>Restore</code> action, then run MSBuild for the solution file.</li>
<li><strong>FastTests</strong> - automatically execute <code>Build</code> action, then run all tests from the BenchmarkDotNet.Tests project.</li>
<li><strong>SlowTests</strong> - automatically execute <code>Build</code> action, then run all tests from the BenchmarkDotNet.IntegrationTests project.</li>
<li><strong>Pack</strong> - automatically execute <code>Build</code> action and after that creates local NuGet packages.</li>
</ul>
</li>
</ul>

                    </div>
                </div>
                <footer>
                    <hr />
                    <div role="contentinfo">
BenchmarkDotNet Documentation. &copy;2013-2018. <a href='https://github.com/dotnet/BenchmarkDotNet' target='_blank'>GitHub</a> | <a href='https://www.nuget.org/packages/BenchmarkDotNet/' target='_blank'>NuGet</a>.
                    </div>
                </footer>
            </div>
        </section>
    </div>
    <script src="../js/jquery-2.1.1.min.js"></script>
    <script src="../js/modernizr-2.8.3.min.js"></script>
    <script src="../js/highlight.pack.js"></script>
    <script src="../js/theme.js"></script>

</body>
</html>
