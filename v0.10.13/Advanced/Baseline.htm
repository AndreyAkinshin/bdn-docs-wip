<!DOCTYPE html>
<!--[if IE 8]><html class="no-js lt-ie9" lang="en" > <![endif]-->
<!--[if gt IE 8]><!-->
<html class="no-js" lang="en">
<!--<![endif]-->
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>Baseline - BenchmarkDotNet Documentation</title>
    <link rel="shortcut icon" href="../favicon.ico">
    <link rel="stylesheet" href="../css/theme.css" type="text/css" />
    <link rel="stylesheet" href="../css/theme_colors.css" type="text/css" />
    <link rel="stylesheet" href="../css/styles/vs.css">
    <link rel="stylesheet" href="../css/font-awesome.4.5.0.min.css">

    <!-- Google Analytics -->
    <script>
      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
      })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

      ga('create', 'UA-41419012-6', 'auto');
      ga('send', 'pageview');

    </script>
    <!-- /Google Analytics -->
    <!-- Yandex.Metrika counter -->
    <script type="text/javascript">
        (function (d, w, c) {
            (w[c] = w[c] || []).push(function() {
                try {
                    w.yaCounter40812449 = new Ya.Metrika({
                        id:40812449,
                        clickmap:true,
                        trackLinks:true,
                        accurateTrackBounce:true
                    });
                } catch(e) { }
            });

            var n = d.getElementsByTagName("script")[0],
                s = d.createElement("script"),
                f = function () { n.parentNode.insertBefore(s, n); };
            s.type = "text/javascript";
            s.async = true;
            s.src = "https://mc.yandex.ru/metrika/watch.js";

            if (w.opera == "[object Opera]") {
                d.addEventListener("DOMContentLoaded", f, false);
            } else { f(); }
        })(document, window, "yandex_metrika_callbacks");
    </script>
    <noscript><div><img src="https://mc.yandex.ru/watch/40812449" style="position:absolute; left:-9999px;" alt="" /></div></noscript>
    <!-- /Yandex.Metrika counter -->
</head>
<body role="document">
    <div class="grid-for-nav">
        <nav data-toggle="nav-shift" class="nav-side stickynav">
            <div class="side-nav-search">
                <a href="../index.htm"><i class="fa fa-home"></i> BenchmarkDotNet Documentation</a>
                <div role="search">
                    <form id="search-form" class="form" action="../Docnet_search.htm" method="get">
                        <input type="text" name="q" placeholder="Search docs" />
                    </form>
                </div>
            </div>
            <div class="menu menu-vertical" data-spy="affix" role="navigation" aria-label="main navigation">
<ul>
<li class="tocentry"><a href="../index.htm">Home</a>
</li>

<li class="tocentry"><a href="../Overview.htm">Overview</a>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../Guides.htm">Guides</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../Configs.htm">Configs</a></span>
</li>
<li class="tocentry">
<ul>
<li><span class="navigationgroup"><i class="fa fa-caret-down"></i> <a href="../Advancedfeatures.htm">Advanced features</a></span></li>
<li class="tocentry"><a href="../Advanced/Params.htm">Params</a>
</li>
<li class="tocentry"><a href="../Advanced/SetupAndCleanup.htm">Setup And Cleanup</a>
</li>
<li class="tocentry current"><a class="current" href="../Advanced/Baseline.htm">Baseline</a>
<ul class="currentrelative">
<li class="tocentry"><a href="#example-1-methods">Example 1: Methods</a></li>
<li class="tocentry"><a href="#example-2-methods-with-categories">Example 2: Methods with categories</a></li>
<li class="tocentry"><a href="#example-3-jobs">Example 3: Jobs</a></li>
</ul>
<li class="tocentry"><a href="../Advanced/Percentiles.htm">Percentiles</a>
</li>
<li class="tocentry"><a href="../Advanced/STAThread.htm">STAThread</a>
</li>
<li class="tocentry"><a href="../Advanced/CustomizingMono.htm">Customizing Mono</a>
</li>
<li class="tocentry"><a href="../Advanced/EnvironmentVariables.htm">Environment Variables</a>
</li>

</ul>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../Internals.htm">Internals</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../Contributing.htm">Contributing</a></span>
</li>
<li class="tocentry"><a href="../FAQ.htm">FAQ</a>
</li>
<li class="tocentry"><a href="../Team.htm">Team</a>
</li>
<li class="tocentry"><a href="../license.htm">License</a>
</li>
</ul>
				<div class="toc-footer">
					<span class="text-small">
						<hr/>
						<a href="https://github.com/FransBouma/DocNet" target="_blank">Made with <i class="fa fa-github"></i> DocNet</a>
					</span>
				</div>	
			</div>
            &nbsp;
        </nav>
        <section data-toggle="nav-shift" class="nav-content-wrap">
            <nav class="nav-top" role="navigation" aria-label="top navigation">
                <i data-toggle="nav-top" class="fa fa-bars"></i>
                <a href="../index.htm">BenchmarkDotNet Documentation</a>
            </nav>
            <div class="nav-content">
                <div role="navigation" aria-label="breadcrumbs navigation">
                    <div class="breadcrumbs">
<ul><li><a href="../index.htm">Home</a></li> / <li><a href="../Advancedfeatures.htm">Advanced features</a></li> / <li><a href="../Advanced/Baseline.htm">Baseline</a></li></ul>
					
                    </div>
                    <hr />
                </div>
                <div role="main">
                    <div class="section">
<h1 id="baseline">Baseline<a class="headerlink" href="#baseline" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h1>
<p>In order to scale your results, you can mark a benchmark method or a job as a baseline.
Let's learn this feature by examples.</p>
<h2 id="example-1-methods">Example 1: Methods<a class="headerlink" href="#example-1-methods" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>You can mark a method as a baseline with the help of <code>[Benchmark(Baseline = true)]</code>. </p>
<pre><code class="cs">public class Sleeps
{
    [Benchmark]
    public void Time50() =&gt; Thread.Sleep(50);

    [Benchmark(Baseline = true)]
    public void Time100() =&gt; Thread.Sleep(100);

    [Benchmark]
    public void Time150() =&gt; Thread.Sleep(150);
}
</code></pre>

<p>As a result, you will have additional <code>Scaled</code> column in the summary table:</p>
<pre><code class="ini">BenchmarkDotNet=v0.10.12, OS=Windows 10 Redstone 3 [1709, Fall Creators Update] (10.0.16299.192)
Processor=Intel Core i7-6700HQ CPU 2.60GHz (Skylake), ProcessorCount=8
Frequency=2531249 Hz, Resolution=395.0619 ns, Timer=TSC
.NET Core SDK=2.0.3
  [Host]     : .NET Core 2.0.3 (Framework 4.6.25815.02), 64bit RyuJIT
  DefaultJob : .NET Core 2.0.3 (Framework 4.6.25815.02), 64bit RyuJIT
</code></pre>

<table class="table table-bordered-all table-responsive">
<thead>
<tr>
	<th>Method</th>
	<th align="right">Mean</th>
	<th align="right">Error</th>
	<th align="right">StdDev</th>
	<th align="right">Scaled</th>
</tr>
</thead>
<tbody>
<tr>
	<td>Time50</td>
	<td align="right">50.46 ms</td>
	<td align="right">0.0779 ms</td>
	<td align="right">0.0729 ms</td>
	<td align="right">0.50</td>
</tr>
<tr>
	<td>Time100</td>
	<td align="right">100.39 ms</td>
	<td align="right">0.0762 ms</td>
	<td align="right">0.0713 ms</td>
	<td align="right">1.00</td>
</tr>
<tr>
	<td>Time150</td>
	<td align="right">150.48 ms</td>
	<td align="right">0.0986 ms</td>
	<td align="right">0.0922 ms</td>
	<td align="right">1.50</td>
</tr>
</tbody>
</table>
<h2 id="example-2-methods-with-categories">Example 2: Methods with categories<a class="headerlink" href="#example-2-methods-with-categories" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>The only way to have several baselines in the same class is to separate them by categories
  and mark the class with <code>[GroupBenchmarksBy(BenchmarkLogicalGroupRule.ByCategory)]</code>.</p>
<pre><code class="cs">[GroupBenchmarksBy(BenchmarkLogicalGroupRule.ByCategory)]
[CategoriesColumn]
public class Sleeps
{
    [BenchmarkCategory(&quot;Fast&quot;), Benchmark(Baseline = true)]        
    public void Time50() =&gt; Thread.Sleep(50);

    [BenchmarkCategory(&quot;Fast&quot;), Benchmark]
    public void Time100() =&gt; Thread.Sleep(100);
    
    [BenchmarkCategory(&quot;Slow&quot;), Benchmark(Baseline = true)]        
    public void Time550() =&gt; Thread.Sleep(550);

    [BenchmarkCategory(&quot;Slow&quot;), Benchmark]
    public void Time600() =&gt; Thread.Sleep(600);
}
</code></pre>

<pre><code class="ini">BenchmarkDotNet=v0.10.12, OS=Windows 10 Redstone 3 [1709, Fall Creators Update] (10.0.16299.192)
Processor=Intel Core i7-6700HQ CPU 2.60GHz (Skylake), ProcessorCount=8
Frequency=2531249 Hz, Resolution=395.0619 ns, Timer=TSC
.NET Core SDK=2.0.3
  [Host]     : .NET Core 2.0.3 (Framework 4.6.25815.02), 64bit RyuJIT
  DefaultJob : .NET Core 2.0.3 (Framework 4.6.25815.02), 64bit RyuJIT
</code></pre>

<table class="table table-bordered-all table-responsive">
<thead>
<tr>
	<th>Method</th>
	<th>Categories</th>
	<th align="right">Mean</th>
	<th align="right">Error</th>
	<th align="right">StdDev</th>
	<th align="right">Scaled</th>
</tr>
</thead>
<tbody>
<tr>
	<td>Time50</td>
	<td>Fast</td>
	<td align="right">50.46 ms</td>
	<td align="right">0.0745 ms</td>
	<td align="right">0.0697 ms</td>
	<td align="right">1.00</td>
</tr>
<tr>
	<td>Time100</td>
	<td>Fast</td>
	<td align="right">100.47 ms</td>
	<td align="right">0.0955 ms</td>
	<td align="right">0.0893 ms</td>
	<td align="right">1.99</td>
</tr>
<tr>
	<td></td>
	<td></td>
	<td align="right"></td>
	<td align="right"></td>
	<td align="right"></td>
	<td align="right"></td>
</tr>
<tr>
	<td>Time550</td>
	<td>Slow</td>
	<td align="right">550.48 ms</td>
	<td align="right">0.0525 ms</td>
	<td align="right">0.0492 ms</td>
	<td align="right">1.00</td>
</tr>
<tr>
	<td>Time600</td>
	<td>Slow</td>
	<td align="right">600.45 ms</td>
	<td align="right">0.0396 ms</td>
	<td align="right">0.0331 ms</td>
	<td align="right">1.09</td>
</tr>
</tbody>
</table>
<h2 id="example-3-jobs">Example 3: Jobs<a class="headerlink" href="#example-3-jobs" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>If you want to compare several runtime configuration,
  you can mark one of your jobs with <code>isBaseline = true</code>.</p>
<pre><code class="cs">[ClrJob(isBaseline: true)]
[MonoJob]
[CoreJob]
public class RuntimeCompetition
{
    [Benchmark]
    public int SplitJoin() =&gt; string.Join(&quot;,&quot;, new string[1000]).Split(',').Length;
}
</code></pre>

<pre><code class="ini">BenchmarkDotNet=v0.10.12, OS=Windows 10 Redstone 3 [1709, Fall Creators Update] (10.0.16299.192)
Processor=Intel Core i7-6700HQ CPU 2.60GHz (Skylake), ProcessorCount=8
Frequency=2531249 Hz, Resolution=395.0619 ns, Timer=TSC
.NET Core SDK=2.0.3
  [Host]     : .NET Core 2.0.3 (Framework 4.6.25815.02), 64bit RyuJIT
  Job-MXFYPZ : .NET Framework 4.7 (CLR 4.0.30319.42000), 64bit RyuJIT-v4.7.2600.0
  Core       : .NET Core 2.0.3 (Framework 4.6.25815.02), 64bit RyuJIT
  Mono       : Mono 5.4.0 (Visual Studio), 64bit 
</code></pre>

<table class="table table-bordered-all table-responsive">
<thead>
<tr>
	<th>Method</th>
	<th>Runtime</th>
	<th align="right">Mean</th>
	<th align="right">Error</th>
	<th align="right">StdDev</th>
	<th align="right">Scaled</th>
	<th align="right">ScaledSD</th>
</tr>
</thead>
<tbody>
<tr>
	<td>SplitJoin</td>
	<td>Clr</td>
	<td align="right">19.42 us</td>
	<td align="right">0.2447 us</td>
	<td align="right">0.1910 us</td>
	<td align="right">1.00</td>
	<td align="right">0.00</td>
</tr>
<tr>
	<td>SplitJoin</td>
	<td>Core</td>
	<td align="right">13.00 us</td>
	<td align="right">0.2183 us</td>
	<td align="right">0.1935 us</td>
	<td align="right">0.67</td>
	<td align="right">0.01</td>
</tr>
<tr>
	<td>SplitJoin</td>
	<td>Mono</td>
	<td align="right">39.14 us</td>
	<td align="right">0.7763 us</td>
	<td align="right">1.3596 us</td>
	<td align="right">2.02</td>
	<td align="right">0.07</td>
</tr>
</tbody>
</table>

                    </div>
                </div>
                <footer>
                    <hr />
                    <div role="contentinfo">
BenchmarkDotNet Documentation. &copy;2013-2018. <a href='https://github.com/dotnet/BenchmarkDotNet' target='_blank'>GitHub</a> | <a href='https://www.nuget.org/packages/BenchmarkDotNet/' target='_blank'>NuGet</a>.
                    </div>
                </footer>
            </div>
        </section>
    </div>
    <script src="../js/jquery-2.1.1.min.js"></script>
    <script src="../js/modernizr-2.8.3.min.js"></script>
    <script src="../js/highlight.pack.js"></script>
    <script src="../js/theme.js"></script>

</body>
</html>
