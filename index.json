{
  "articles/samples/IntroArrayParam.html": {
    "href": "articles/samples/IntroArrayParam.html",
    "title": "Sample: IntroArrayParam | BenchmarkDotNet",
    "keywords": "Sample: IntroArrayParam Warning The cost of creating the arguments is not included in the benchmark. So if you want to pass an array as an argument, we are going to allocate it before running the benchmark, and the benchmark will not include this operation. Source code using System; using System.Collections.Generic; using System.Linq; using BenchmarkDotNet.Attributes; using BenchmarkDotNet.Code; namespace BenchmarkDotNet.Samples { public class IntroArrayParam { [Benchmark] [ArgumentsSource(nameof(Data))] public int ArrayIndexOf(int[] array, int value) => Array.IndexOf(array, value); [Benchmark] [ArgumentsSource(nameof(Data))] public int ManualIndexOf(int[] array, int value) { for (int i = 0; i < array.Length; i++) if (array[i] == value) return i; return -1; } public IEnumerable<object[]> Data() { yield return CreateArrayAndValue(new[] { 1, 2, 3 }, 4); yield return CreateArrayAndValue(Enumerable.Range(0, 100).ToArray(), 4); yield return CreateArrayAndValue(Enumerable.Range(0, 100).ToArray(), 101); } private object[] CreateArrayAndValue(int[] array, int value) => new object[] { ArrayParam<int>.ForPrimitives(array), value }; } } Output | Method | array | value | Mean | Error | StdDev | Allocated | |-------------- |----------- |------ |----------:|----------:|----------:|----------:| | ArrayIndexOf | Array[100] | 4 | 15.558 ns | 0.0638 ns | 0.0597 ns | 0 B | | ManualIndexOf | Array[100] | 4 | 5.345 ns | 0.0668 ns | 0.0625 ns | 0 B | | ArrayIndexOf | Array[3] | 4 | 14.334 ns | 0.1758 ns | 0.1558 ns | 0 B | | ManualIndexOf | Array[3] | 4 | 2.758 ns | 0.0905 ns | 0.1208 ns | 0 B | | ArrayIndexOf | Array[100] | 101 | 78.359 ns | 1.8853 ns | 2.0955 ns | 0 B | | ManualIndexOf | Array[100] | 101 | 80.421 ns | 0.6391 ns | 0.5978 ns | 0 B | See also Parameterization"
  },
  "articles/features/parameterization.html": {
    "href": "articles/features/parameterization.html",
    "title": "Parameterization | BenchmarkDotNet",
    "keywords": "Parameterization Sample: IntroParams You can mark one or several fields or properties in your class by the [Params] attribute. In this attribute, you can specify set of values. Every value must be a compile-time constant. As a result, you will get results for each combination of params values. Source code using System.Threading; using BenchmarkDotNet.Attributes; namespace BenchmarkDotNet.Samples { public class IntroParams { [Params(100, 200)] public int A { get; set; } [Params(10, 20)] public int B { get; set; } [Benchmark] public void Benchmark() => Thread.Sleep(A + B + 5); } } Output Method | Median | StdDev | A | B ---------- |------------ |---------- |---- |--- Benchmark | 115.3325 ms | 0.0242 ms | 100 | 10 Benchmark | 125.3282 ms | 0.0245 ms | 100 | 20 Benchmark | 215.3024 ms | 0.0375 ms | 200 | 10 Benchmark | 225.2710 ms | 0.0434 ms | 200 | 20 See also Parameterization The link to this sample: Sample: IntroParams Sample: IntroParamsSource In case you want to use a lot of values, you should use [ParamsSource] You can mark one or several fields or properties in your class by the [Params] attribute. In this attribute, you have to specify the name of public method/property which is going to provide the values (something that implements IEnumerable ). The source must be within benchmarked type! Source code using System.Collections.Generic; using System.Threading; using BenchmarkDotNet.Attributes; namespace BenchmarkDotNet.Samples { public class IntroParamsSource { // property with public setter [ParamsSource(nameof(ValuesForA))] public int A { get; set; } // public field [ParamsSource(nameof(ValuesForB))] public int B; // public property public IEnumerable<int> ValuesForA => new[] { 100, 200 }; // public static method public static IEnumerable<int> ValuesForB() => new[] { 10, 20 }; [Benchmark] public void Benchmark() => Thread.Sleep(A + B + 5); } } Output Method | Median | StdDev | A | B ---------- |------------ |---------- |---- |--- Benchmark | 115.3325 ms | 0.0242 ms | 100 | 10 Benchmark | 125.3282 ms | 0.0245 ms | 100 | 20 Benchmark | 215.3024 ms | 0.0375 ms | 200 | 10 Benchmark | 225.2710 ms | 0.0434 ms | 200 | 20 Remarks A remark about IParam. You don't need to use IParam anymore since 0.11.0 . Just use complex types as you wish and override ToString method to change the display names used in the results. See also Parameterization The link to this sample: Sample: IntroParamsSource Sample: IntroArguments As an alternative to using [Params] , you can specify arguments for your benchmarks. There are several ways to do it (described below). Important InProcessToolchain does not support Arguments (yet!). See #687 for more details. The [Arguments] allows you to provide a set of values. Every value must be a compile-time constant (it's C# lanugage limitation for attributes in general). You can also combine [Arguments] with [Params] . As a result, you will get results for each combination of params values. Source code using System.Threading; using BenchmarkDotNet.Attributes; namespace BenchmarkDotNet.Samples { public class IntroArguments { [Params(true, false)] // Arguments can be combined with Params public bool AddExtra5Miliseconds; [Benchmark] [Arguments(100, 10)] [Arguments(100, 20)] [Arguments(200, 10)] [Arguments(200, 20)] public void Benchmark(int a, int b) { if (AddExtra5Miliseconds) Thread.Sleep(a + b + 5); else Thread.Sleep(a + b); } } } Output | Method | AddExtra5Miliseconds | a | b | Mean | Error | StdDev | |---------- |--------------------- |---- |--- |---------:|----------:|----------:| | Benchmark | False | 100 | 10 | 110.1 ms | 0.0056 ms | 0.0044 ms | | Benchmark | False | 100 | 20 | 120.1 ms | 0.0155 ms | 0.0138 ms | | Benchmark | False | 200 | 10 | 210.2 ms | 0.0187 ms | 0.0175 ms | | Benchmark | False | 200 | 20 | 220.3 ms | 0.1055 ms | 0.0986 ms | | Benchmark | True | 100 | 10 | 115.3 ms | 0.1375 ms | 0.1286 ms | | Benchmark | True | 100 | 20 | 125.3 ms | 0.1212 ms | 0.1134 ms | | Benchmark | True | 200 | 10 | 215.4 ms | 0.0779 ms | 0.0691 ms | | Benchmark | True | 200 | 20 | 225.4 ms | 0.0775 ms | 0.0725 ms | See also Parameterization The link to this sample: Sample: IntroArguments Sample: IntroArgumentsSource In case you want to use a lot of values, you should use [ArgumentsSource] . You can mark one or several fields or properties in your class by the [ArgumentsSource] attribute. In this attribute, you have to specify the name of public method/property which is going to provide the values (something that implements IEnumerable ). The source must be within benchmarked type! Source code using System; using System.Collections.Generic; using BenchmarkDotNet.Attributes; namespace BenchmarkDotNet.Samples { public class IntroArgumentsSource { [Benchmark] [ArgumentsSource(nameof(Numbers))] public double Pow(double x, double y) => Math.Pow(x, y); public IEnumerable<object[]> Numbers() { yield return new object[] { 1.0, 1.0 }; yield return new object[] { 2.0, 2.0 }; yield return new object[] { 4.0, 4.0 }; yield return new object[] { 10.0, 10.0 }; } } } Output | Method | x | y | Mean | Error | StdDev | |------- |--- |--- |----------:|----------:|----------:| | Pow | 1 | 1 | 9.360 ns | 0.0190 ns | 0.0149 ns | | Pow | 2 | 2 | 40.624 ns | 0.3413 ns | 0.3192 ns | | Pow | 4 | 4 | 40.537 ns | 0.0560 ns | 0.0524 ns | | Pow | 10 | 10 | 40.395 ns | 0.3274 ns | 0.3063 ns | Another example If the values are complex types you need to override ToString method to change the display names used in the results. [DryJob] public class WithNonPrimitiveArgumentsSource { [Benchmark] [ArgumentsSource(nameof(NonPrimitive))] public void Simple(SomeClass someClass, SomeStruct someStruct) { for (int i = 0; i < someStruct.RangeEnd; i++) Console.WriteLine($\"// array.Values[{i}] = {someClass.Values[i]}\"); } public IEnumerable<object[]> NonPrimitive() { yield return new object[] { new SomeClass(Enumerable.Range(0, 10).ToArray()), new SomeStruct(10) }; yield return new object[] { new SomeClass(Enumerable.Range(0, 15).ToArray()), new SomeStruct(15) }; } public class SomeClass { public SomeClass(int[] initialValues) => Values = initialValues.Select(val => val * 2).ToArray(); public int[] Values { get; } public override string ToString() => $\"{Values.Length} items\"; } public struct SomeStruct { public SomeStruct(int rangeEnd) => RangeEnd = rangeEnd; public int RangeEnd { get; } public override string ToString() => $\"{RangeEnd}\"; } } | Method | someClass | someStruct | Mean | Error | |------- |---------- |----------- |---------:|------:| | Simple | 10 items | 10 | 887.2 us | NA | | Simple | 15 items | 15 | 963.1 us | NA | See also Parameterization The link to this sample: Sample: IntroArgumentsSource Sample: IntroArrayParam Warning The cost of creating the arguments is not included in the benchmark. So if you want to pass an array as an argument, we are going to allocate it before running the benchmark, and the benchmark will not include this operation. Source code using System; using System.Collections.Generic; using System.Linq; using BenchmarkDotNet.Attributes; using BenchmarkDotNet.Code; namespace BenchmarkDotNet.Samples { public class IntroArrayParam { [Benchmark] [ArgumentsSource(nameof(Data))] public int ArrayIndexOf(int[] array, int value) => Array.IndexOf(array, value); [Benchmark] [ArgumentsSource(nameof(Data))] public int ManualIndexOf(int[] array, int value) { for (int i = 0; i < array.Length; i++) if (array[i] == value) return i; return -1; } public IEnumerable<object[]> Data() { yield return CreateArrayAndValue(new[] { 1, 2, 3 }, 4); yield return CreateArrayAndValue(Enumerable.Range(0, 100).ToArray(), 4); yield return CreateArrayAndValue(Enumerable.Range(0, 100).ToArray(), 101); } private object[] CreateArrayAndValue(int[] array, int value) => new object[] { ArrayParam<int>.ForPrimitives(array), value }; } } Output | Method | array | value | Mean | Error | StdDev | Allocated | |-------------- |----------- |------ |----------:|----------:|----------:|----------:| | ArrayIndexOf | Array[100] | 4 | 15.558 ns | 0.0638 ns | 0.0597 ns | 0 B | | ManualIndexOf | Array[100] | 4 | 5.345 ns | 0.0668 ns | 0.0625 ns | 0 B | | ArrayIndexOf | Array[3] | 4 | 14.334 ns | 0.1758 ns | 0.1558 ns | 0 B | | ManualIndexOf | Array[3] | 4 | 2.758 ns | 0.0905 ns | 0.1208 ns | 0 B | | ArrayIndexOf | Array[100] | 101 | 78.359 ns | 1.8853 ns | 2.0955 ns | 0 B | | ManualIndexOf | Array[100] | 101 | 80.421 ns | 0.6391 ns | 0.5978 ns | 0 B | See also Parameterization The link to this sample: Sample: IntroArrayParam"
  },
  "articles/samples/IntroParamsSource.html": {
    "href": "articles/samples/IntroParamsSource.html",
    "title": "Sample: IntroParamsSource | BenchmarkDotNet",
    "keywords": "Sample: IntroParamsSource In case you want to use a lot of values, you should use [ParamsSource] You can mark one or several fields or properties in your class by the [Params] attribute. In this attribute, you have to specify the name of public method/property which is going to provide the values (something that implements IEnumerable ). The source must be within benchmarked type! Source code using System.Collections.Generic; using System.Threading; using BenchmarkDotNet.Attributes; namespace BenchmarkDotNet.Samples { public class IntroParamsSource { // property with public setter [ParamsSource(nameof(ValuesForA))] public int A { get; set; } // public field [ParamsSource(nameof(ValuesForB))] public int B; // public property public IEnumerable<int> ValuesForA => new[] { 100, 200 }; // public static method public static IEnumerable<int> ValuesForB() => new[] { 10, 20 }; [Benchmark] public void Benchmark() => Thread.Sleep(A + B + 5); } } Output Method | Median | StdDev | A | B ---------- |------------ |---------- |---- |--- Benchmark | 115.3325 ms | 0.0242 ms | 100 | 10 Benchmark | 125.3282 ms | 0.0245 ms | 100 | 20 Benchmark | 215.3024 ms | 0.0375 ms | 200 | 10 Benchmark | 225.2710 ms | 0.0434 ms | 200 | 20 Remarks A remark about IParam. You don't need to use IParam anymore since 0.11.0 . Just use complex types as you wish and override ToString method to change the display names used in the results. See also Parameterization"
  },
  "articles/samples/IntroParams.html": {
    "href": "articles/samples/IntroParams.html",
    "title": "Sample: IntroParams | BenchmarkDotNet",
    "keywords": "Sample: IntroParams You can mark one or several fields or properties in your class by the [Params] attribute. In this attribute, you can specify set of values. Every value must be a compile-time constant. As a result, you will get results for each combination of params values. Source code using System.Threading; using BenchmarkDotNet.Attributes; namespace BenchmarkDotNet.Samples { public class IntroParams { [Params(100, 200)] public int A { get; set; } [Params(10, 20)] public int B { get; set; } [Benchmark] public void Benchmark() => Thread.Sleep(A + B + 5); } } Output Method | Median | StdDev | A | B ---------- |------------ |---------- |---- |--- Benchmark | 115.3325 ms | 0.0242 ms | 100 | 10 Benchmark | 125.3282 ms | 0.0245 ms | 100 | 20 Benchmark | 215.3024 ms | 0.0375 ms | 200 | 10 Benchmark | 225.2710 ms | 0.0434 ms | 200 | 20 See also Parameterization"
  },
  "articles/overview.html": {
    "href": "articles/overview.html",
    "title": "Overview | BenchmarkDotNet",
    "keywords": "Overview Install Create new console application and install the BenchmarkDotNet NuGet package. We support: Projects: *.csproj (classic and modern with PackageReferences), *.xproj / project.json Runtimes: Full .NET Framework (4.6+), .NET Core (2.0+), Mono, CoreRT OS: Windows, Linux, MacOS Languages: C#, F#, VB Design a benchmark Create a new console application, write a class with methods that you want to measure and mark them with the Benchmark attribute. In the following example, we compare the MD5 and SHA256 cryptographic hash functions: using System; using System.Security.Cryptography; using BenchmarkDotNet.Attributes; using BenchmarkDotNet.Running; namespace MyBenchmarks { public class Md5VsSha256 { private const int N = 10000; private readonly byte[] data; private readonly SHA256 sha256 = SHA256.Create(); private readonly MD5 md5 = MD5.Create(); public Md5VsSha256() { data = new byte[N]; new Random(42).NextBytes(data); } [Benchmark] public byte[] Sha256() => sha256.ComputeHash(data); [Benchmark] public byte[] Md5() => md5.ComputeHash(data); } public class Program { public static void Main(string[] args) { var summary = BenchmarkRunner.Run<Md5VsSha256>(); } } } The BenchmarkRunner.Run<Md5VsSha256>() call runs your benchmarks and print results to console output. Notice, that you should use only the Release configuration for your benchmarks. Otherwise, the results will not correspond to reality. If you forgot to change the configuration, BenchmarkDotNet will print a warning. Benchmark results BenchmarkDotNet=v0.10.1, OS=Microsoft Windows NT 6.2.9200.0 Processor=Intel(R) Core(TM) i7-4702MQ CPU 2.20GHz, ProcessorCount=8 Frequency=2143476 Hz, Resolution=466.5319 ns, Timer=TSC [Host] : Clr 4.0.30319.42000, 64bit RyuJIT-v4.6.1586.0 DefaultJob : Clr 4.0.30319.42000, 64bit RyuJIT-v4.6.1586.0 | Method | Mean | StdDev | Allocated | |------- |------------ |---------- |---------- | | Sha256 | 130.5169 us | 1.8489 us | 188 B | | Md5 | 25.8010 us | 0.1757 us | 113 B | Jobs You can check several environments at once. For example, you can compare performance of Full .NET Framework, .NET Core, Mono and CoreRT. Just add the ClrJob , MonoJob , CoreJob , CoreRtJob attributes before the class declaration (it requires a .NETCore project, installed CoreCLR and Mono): [ClrJob, MonoJob, CoreJob, CoreRtJob] public class Md5VsSha256 Example of the result: BenchmarkDotNet=v0.11.0, OS=Windows 10.0.16299.309 (1709/FallCreatorsUpdate/Redstone3) Intel Xeon CPU E5-1650 v4 3.60GHz, 1 CPU, 12 logical and 6 physical cores Frequency=3507504 Hz, Resolution=285.1030 ns, Timer=TSC .NET Core SDK=2.1.300-preview1-008174 [Host] : .NET Core 2.1.0-preview1-26216-03 (CoreCLR 4.6.26216.04, CoreFX 4.6.26216.02), 64bit RyuJIT Job-YRHGTP : .NET Framework 4.7.1 (CLR 4.0.30319.42000), 64bit RyuJIT-v4.7.2633.0 Core : .NET Core 2.1.0-preview1-26216-03 (CoreCLR 4.6.26216.04, CoreFX 4.6.26216.02), 64bit RyuJIT CoreRT : .NET CoreRT 1.0.26414.01, 64bit AOT Mono : Mono 5.10.0 (Visual Studio), 64bit | Method | Runtime | Mean | Error | StdDev | |------- |-------- |-----------:|----------:|----------:| | Sha256 | Clr | 75.780 us | 1.0445 us | 0.9771 us | | Sha256 | Core | 41.134 us | 0.2185 us | 0.1937 us | | Sha256 | CoreRT | 40.895 us | 0.0804 us | 0.0628 us | | Sha256 | Mono | 141.377 us | 0.5598 us | 0.5236 us | | | | | | | | Md5 | Clr | 18.575 us | 0.0727 us | 0.0644 us | | Md5 | Core | 17.562 us | 0.0436 us | 0.0408 us | | Md5 | CoreRT | 17.447 us | 0.0293 us | 0.0244 us | | Md5 | Mono | 34.500 us | 0.1553 us | 0.1452 us | There are a lot of predefined jobs which you can use. For example, you can compare LegacyJitX86 vs LegacyJitX64 vs RyuJitX64 : [LegacyJitX86Job, LegacyJitX64Job, RyuJitX64Job] Or you can define own jobs: [Config(typeof(Config))] public class Md5VsSha256 { private class Config : ManualConfig { public Config() { Add(new Job(EnvMode.LegacyJitX86, EnvMode.Clr, RunMode.Dry) { Env = { Runtime = Runtime.Clr }, Run = { LaunchCount = 3, WarmupCount = 5, TargetCount = 10 }, Accuracy = { MaxStdErrRelative = 0.01 } })); } } Read more: Jobs , Configs Columns You can also add custom columns to the summary table: [MinColumn, MaxColumn] public class Md5VsSha256 Method Median StdDev Min Max Sha256 131.3200 us 4.6744 us 129.8216 us 147.7630 us Md5 26.2847 us 0.4424 us 25.8442 us 27.4258 us Of course, you can define own columns based on full benchmark summary. Read more: Columns Exporters You can export result of your benchmark in different formats: [MarkdownExporter, AsciiDocExporter, HtmlExporter, CsvExporter, RPlotExporter] public class Md5VsSha256 If you have installed R, RPlotExporter will generate a lot of nice plots: Read more: Exporters Baseline In order to scale your results you need to mark one of your benchmark methods as a Baseline : public class Sleeps { [Benchmark] public void Time50() => Thread.Sleep(50); [Benchmark(Baseline = true)] public void Time100() => Thread.Sleep(100); [Benchmark] public void Time150() => Thread.Sleep(150); } As a result, you will have additional column in the summary table: Method Median StdDev Scaled Time100 100.2640 ms 0.1238 ms 1.00 Time150 150.2093 ms 0.1034 ms 1.50 Time50 50.2509 ms 0.1153 ms 0.50 Read more: Baseline Params You can mark one or several fields or properties in your class by the Params attribute. In this attribute, you can specify set of values. As a result, you will get results for each combination of params values. public class IntroParams { [Params(100, 200)] public int A { get; set; } [Params(10, 20)] public int B { get; set; } [Benchmark] public void Benchmark() { Thread.Sleep(A + B + 5); } } Method Median StdDev A B Benchmark 115.3325 ms 0.0242 ms 100 10 Benchmark 125.3282 ms 0.0245 ms 100 20 Benchmark 215.3024 ms 0.0375 ms 200 10 Benchmark 225.2710 ms 0.0434 ms 200 20 Read more: Parameterization Languages You can also write you benchmarks on F# or VB . Examples: type StringKeyComparison () = let mutable arr : string [] = [||] let dict1 = ConcurrentDictionary<_,_>() let dict2 = ConcurrentDictionary<_,_>(StringComparer.Ordinal) [<Params (100, 500, 1000, 2000)>] member val public DictSize = 0 with get, set [<GlobalSetup>] member self.GlobalSetupData() = dict1.Clear(); dict2.Clear() arr <- getStrings self.DictSize arr |> Array.iter (fun x -> dict1.[x] <- true ; dict2.[x] <- true) [<Benchmark>] member self.StandardLookup () = lookup arr dict1 [<Benchmark>] member self.OrdinalLookup () = lookup arr dict2 Public Class Sample <Params(1, 2)> Public Property A As Integer <Params(3, 4)> Public Property B As Integer <Benchmark> Public Function Benchmark() As Integer return A + B End Function End Class Diagnostics A diagnoser can attach to your benchmark and get some useful info. The current Diagnosers are: GC and Memory Allocation ( MemoryDiagnoser ) which is cross platform, built-in and is not enabled by default anymore . JIT Inlining Events ( InliningDiagnoser ). You can find this diagnoser in a separated package with diagnosers for Windows ( BenchmarkDotNet.Diagnostics.Windows ): Below is a sample output from the MemoryDiagnoser , note the extra columns on the right-hand side ( Gen 0 and Allocated ): Method | Mean | StdDev | Gen 0 | Allocated | ---------- |----------- |---------- |------- |---------- | Iterative | 31.0739 ns | 0.1091 ns | - | 0 B | LINQ | 83.0435 ns | 1.0103 ns | 0.0069 | 32 B | Read more: Diagnosers BenchmarkRunner There are several ways to run your benchmarks: you can use existed class, run a benchmark based on code from internet or based on source code: var summary = BenchmarkRunner.Run<MyBenchmarkClass>(); var summary = BenchmarkRunner.Run(typeof(MyBenchmarkClass)); string url = \"<E.g. direct link to a gist>\"; var summary = BenchmarkRunner.RunUrl(url); string benchmarkSource = \"public class MyBenchmarkClass { ...\"; var summary = BenchmarkRunner.RunSource(benchmarkSource); Read more: HowToRun"
  },
  "articles/features/setup-and-cleanup.html": {
    "href": "articles/features/setup-and-cleanup.html",
    "title": "Setup And Cleanup | BenchmarkDotNet",
    "keywords": "Setup And Cleanup Sometimes we want to write some logic which should be executed before or after a benchmark, but we don't want to measure it. For this purpose, BenchmarkDotNet provides a set of attributes: [GlobalSetup] , [GlobalCleanup] , [IterationSetup] , [IterationCleanup] . GlobalSetup A method which is marked by the [GlobalSetup] attribute will be executed only once per a benchmarked method after initialization of benchmark parameters and before all the benchmark method invocations. public class GlobalSetupExample { [Params(10, 100, 1000)] public int N; private int[] data; [GlobalSetup] public void GlobalSetup() { data = new int[N]; // executed once per each N value } [Benchmark] public int Logic() { int res = 0; for (int i = 0; i < N; i++) res += data[i]; return res; } } GlobalCleanup A method which is marked by the [GlobalCleanup] attribute will be executed only once per a benchmarked method after all the benchmark method invocations. If you are using some unmanaged resources (e.g., which were created in the GlobalSetup method), they can be disposed in the GlobalCleanup method. public void GlobalCleanup() { // Disposing logic } IterationSetup A method which is marked by the [IterationSetup] attribute will be executed only once before each an iteration . It's not recommended to use this attribute in microbenchmarks because it can spoil the results. However, if you are writing a macrobenchmark (e.g. a benchmark which takes at least 100ms) and you want to prepare some data before each iteration, [IterationSetup] can be useful. BenchmarkDotNet doesn't support setup/cleanup method for a single method invocation ( an operation ), but you can perform only one operation per iteration. It's recommended to use RunStrategy.Monitoring for such cases. Be careful: if you allocate any objects in the [IterationSetup] method, the MemoryDiagnoser results can also be spoiled. IterationCleanup A method which is marked by the [IterationCleanup] attribute will be executed only once after each an iteration . This attribute has the same set of constraint with [IterationSetup] : it's not recommended to use [IterationCleanup] in microbenchmarks or benchmark which also An example [SimpleJob(RunStrategy.Monitoring, launchCount: 1, warmupCount: 2, targetCount: 3)] public class SetupAndCleanupExample { private int setupCounter; private int cleanupCounter; [IterationSetup] public void IterationSetup() => Console.WriteLine(\"// \" + \"IterationSetup\" + \" (\" + ++setupCounter + \")\"); [IterationCleanup] public void IterationCleanup() => Console.WriteLine(\"// \" + \"IterationCleanup\" + \" (\" + ++cleanupCounter + \")\"); [GlobalSetup] public void GlobalSetup() => Console.WriteLine(\"// \" + \"GlobalSetup\"); [GlobalCleanup] public void GlobalCleanup() => Console.WriteLine(\"// \" + \"GlobalCleanup\"); [Benchmark] public void Benchmark() => Console.WriteLine(\"// \" + \"Benchmark\"); } The order of method calls: // GlobalSetup // IterationSetup (1) // IterationSetup Jitting // IterationCleanup (1) // IterationCleanup Jitting // IterationSetup (2) // MainWarmup1 // Benchmark // MainWarmup1 // IterationCleanup (2) // MainWarmup1 // IterationSetup (3) // MainWarmup2 // Benchmark // MainWarmup2 // IterationCleanup (3) // MainWarmup2 // IterationSetup (4) // MainTarget1 // Benchmark // MainTarget1 // IterationCleanup (4) // MainTarget1 // IterationSetup (5) // MainTarget2 // Benchmark // MainTarget2 // IterationCleanup (5) // MainTarget2 // IterationSetup (6) // MainTarget3 // Benchmark // MainTarget3 // IterationCleanup (6) // MainTarget3 // GlobalCleanup Target Sometimes it's useful to run setup or cleanups for specific benchmarks. All four setup and cleanup attributes have a Target property that allow the setup/cleanup method to be run for one or more specific benchmark methods. [SimpleJob(RunStrategy.Monitoring, launchCount: 0, warmupCount: 0, targetCount: 1)] public class SetupAndCleanupExample { [GlobalSetup(Target = nameof(BenchmarkA))] public void GlobalSetupA() => Console.WriteLine(\"// \" + \"GlobalSetup A\"); [Benchmark] public void BenchmarkA() => Console.WriteLine(\"// \" + \"Benchmark A\"); [GlobalSetup(Target = nameof(BenchmarkB) + \",\" + nameof(BenchmarkC))] public void GlobalSetupB() => Console.WriteLine(\"// \" + \"GlobalSetup B\"); [Benchmark] public void BenchmarkB() => Console.WriteLine(\"// \" + \"Benchmark B\"); [Benchmark] public void BenchmarkC() => Console.WriteLine(\"// \" + \"Benchmark C\"); [Benchmark] public void BenchmarkD() => Console.WriteLine(\"// \" + \"Benchmark D\"); } The order of method calls: // GlobalSetup A // Benchmark A // GlobalSetup B // Benchmark B // GlobalSetup B // Benchmark C // Benchmark D"
  },
  "articles/contributing/building.html": {
    "href": "articles/contributing/building.html",
    "title": "Building | BenchmarkDotNet",
    "keywords": "Building There are two recommended options to build BenchmarkDotNet from source: Option A (Windows only) - Visual Studio Visual Studio 2017 version 15.7 Preview 4 or higher (Community, Professional, Enterprise). Visual Studio 2017 doesn't have installed necessary the .NET Core SDK 2.1 Preview 1, but you can get it from the Installing the .Net Core SDK page . You may also need .NET Core Runtime 2.1 Preview 1 . Visual Studio 2017 should have installed “F# language support” feature. You can also install the support directly as a separate download . Once all the necessary tools are in place, building is trivial. Simply open solution file BenchmarkDotNet.sln that lives at the base of the repository and run Build action. Option B (Windows, Linux, macOS) - Cake (C# Make) Cake (C# Make) is a cross platform build automation system with a C# DSL to do things like compiling code, copy files/folders, running unit tests, compress files and build NuGet packages. The build currently depends on the following prerequisites: Windows: PowerShell version 5 or higher MSBuild version 15.1 or higher .NET Framework 4.6 or higher Linux: Install Mono version 5 or higher Install fsharp package Install packages required to .NET Core SDK gettext libcurl4-openssl-dev libicu-dev libssl-dev libunwind8 macOS Install Mono version 5 or higher Install fsharp package Install the latest version of OpenSSL . After you have installed these pre-requisites, you can build the BenchmarkDotNet by invoking the build script ( build.ps1 on Windows, or build.sh on Linux and macOS) at the base of the BenchmarkDotNet repository. By default the build process also run all the tests. There are quite a few tests, taking a significant amount of time that is not necessary if you just want to experiment with changes. You can skip the tests phase by adding the skiptests argument to the build script, e.g. .\\build.ps1 --SkipTests=True or ./build.sh --skiptests=true . Build has a number of options that you use. Some of the more important options are skiptests - do not run the tests. This can shorten build times quite a bit. On Windows: .\\build.ps1 --SkipTests=True or ./build.sh --skiptests=true on Linux/macOS. configuration - build the 'Release' or 'Debug' build type. Default value is 'Release'. On Windows: .\\build.ps1 -Configuration Debug or ./build.sh --configuration debug on Linux/macOS. target - with this parameter you can run a specific target from build pipeline. Default value is 'Default' target. On Windows: .\\build.ps1 -Target Default or ./build.sh --target default on Linux/macOS. Available targets: Default - run all actions one by one. Clean - clean all obj , bin and artifacts directories. Restore - automatically execute Clean action and after that restore all NuGet dependencies. Build - automatically execute Restore action, then run MSBuild for the solution file. FastTests - automatically execute Build action, then run all tests from the BenchmarkDotNet.Tests project. SlowTests - automatically execute Build action, then run all tests from the BenchmarkDotNet.IntegrationTests project. Pack - automatically execute Build action and after that creates local NuGet packages."
  },
  "articles/configs/validators.html": {
    "href": "articles/configs/validators.html",
    "title": "Validators | BenchmarkDotNet",
    "keywords": "Validators A validator can validate your benchmarks before they are executed and produce validation errors. If any of the validation errors is critical, then none of the benchmarks will get executed. Available validators are: BaselineValidator.FailOnError - it checks if more than 1 Benchmark per class has Baseline = true applied. This validator is mandatory. JitOptimizationsValidator.(Dont)FailOnError - it checks whether any of the referenced assemblies is non-optimized. DontFailOnError version is enabled by default. ExecutionValidator.(Dont)FailOnError - it checks if it is possible to run your benchmarks by executing each of them once. Optional. ReturnValueValidator.(Dont)FailOnError - it checks if non-void benchmarks return equal values. Optional."
  },
  "articles/guides/nuget.html": {
    "href": "articles/guides/nuget.html",
    "title": "Installing NuGet packages | BenchmarkDotNet",
    "keywords": "Installing NuGet packages Packages We have the following set of NuGet packages (you can install it directly from nuget.org ): BenchmarkDotNet : Basic BenchmarkDotNet infrastructure and logic. Doesn't have any dependencies. This is all you need to run benchmarks. BenchmarkDotNet.Diagnostics.Windows : an additional optional package that provides a set of Windows diagnosers. Versioning system and feeds We have 3 kinds of versions: stable , nightly , and develop . You can get the current version from the source code via BenchmarkDotNetInfo.FullVersion and the full title via BenchmarkDotNetInfo.FullTitle . Stable These versions are available from the official NuGet feed. <packageSources> <add key=\"api.nuget.org\" value=\"https://api.nuget.org/v3/index.json\" protocolVersion=\"3\" /> </packageSources> Example of the main NuGet package: BenchmarkDotNet.0.10.3.nupkg . Example of BenchmarkDotNetInfo.FullTitle : BenchmarkDotNet v0.10.3 . Nightly If you want to use a nightly version of the BenchmarkDotNet, add the https://ci.appveyor.com/nuget/benchmarkdotnet feed in the <packageSources> section of your NuGet.config : <packageSources> <add key=\"bdn-nightly\" value=\"https://ci.appveyor.com/nuget/benchmarkdotnet\" /> </packageSources> Now you can install the packages from the bdn-nightly feed. Example of the main NuGet package: BenchmarkDotNet.0.10.3.13.nupkg . Example of BenchmarkDotNetInfo.FullTitle : BenchmarkDotNet v0.10.3.13-nightly . Develop You also can build BenchmarkDotNet from source code. The .nupkg files could be build with the help of .\\build\\build-and-pack.cmd . Example of the main NuGet package: BenchmarkDotNet.0.10.3-develop.nupkg . Example of BenchmarkDotNetInfo.FullTitle : BenchmarkDotNet v0.10.3.20170304-develop ."
  },
  "articles/guides/how-to-run.html": {
    "href": "articles/guides/how-to-run.html",
    "title": "How to run your benchmarks | BenchmarkDotNet",
    "keywords": "How to run your benchmarks There are several ways to run your benchmarks: ##Types var summary = BenchmarkRunner.Run<MyBenchmarkClass>(); var summary = BenchmarkRunner.Run(typeof(MyBenchmarkClass)); ##Url You can also run a benchmark directly from the internet: string url = \"<E.g. direct link to raw content of a gist>\"; var summary = BenchmarkRunner.RunUrl(url); ##Source string benchmarkSource = \"public class MyBenchmarkClass { ...\"; var summary = BenchmarkRunner.RunSource(benchmarkSource); ##BenchmarkSwitcher Or you can create a set of benchmarks and choose one from command line: static void Main(string[] args) { var switcher = new BenchmarkSwitcher(new[] { typeof(BenchmarkClass1), typeof(BenchmarkClass2), typeof(BenchmarkClass3) }); switcher.Run(args); } Also you can use the config command style to specify some config via switcher or even command line: switcher.Run(new[] { \"jobs=dry\", \"columns=min,max\" });"
  },
  "articles/guides/how-it-works.html": {
    "href": "articles/guides/how-it-works.html",
    "title": "How it works | BenchmarkDotNet",
    "keywords": "How it works BenchmarkDotNet follows the following steps to run your benchmarks: BenchmarkRunner generates an isolated project per each runtime settings and builds it in Release mode. Next, we take each method/job/params combination and try to measure its performance by launching benchmark process several times ( LaunchCount ). An invocation of the target method is an operation . A bunch of operation is an iteration . If you have an IterationSetup method, it will be invoked before each iteration, but not between operations. We have the following type of iterations: Pilot : The best operation count will be chosen. IdleWarmup , IdleTarget : BenchmarkDotNet overhead will be evaluated. MainWarmup : Warmup of the main method. MainTarget : Main measurements. Result = MainTarget - <AverageOverhead> After all of the measurements, BenchmarkDotNet creates: An instance of the Summary class that contains all information about benchmark runs. A set of files that contains summary in human-readable and machine-readable formats. A set of plots. Pseudocode If you don't understand our \"count terminology\", then you might find following pseudocode useful: IEnumberable<Results> Run(Benchmark benchmark) { var toolchain = benchmark.GetToolchain(); var autoGeneratedProject = toolchain.Generate(benchmark); var exe = toolchain.Build(autoGeneratedProject); foreach (var runIndex in LaunchCount) // LaunchCount = 1 by default yield return ParseResults(Process.Start(exe).Output); // calls ActualRun in a separate process } Result ActualRun(Method method) { GlobalSetup(); long perfectInvocationCount = Pilot(method); Warmup(EMPTY_METHOD, perfectInvocationCount); // EMPTY_METHOD has same return type and arguments as benchmark var overhead = Target(EMPTY_METHOD, perfectInvocationCount); Warmup(method, perfectInvocationCount); var result = Target(method, perfectInvocationCount); GlobalCleanup(); return result - Avg(overhead); } long Pilot(Method method) { // invokeCount is the equivalent of InnerIterationCount from xunit-performance long invokeCount = minInvokeCount; while (true) { var measurement = RunIteration(method, invokeCount, unrollFactor); if (heuristic.IsPilotRequirementMet(measurement)) break; invokeCount *= 2; } return invokeCount; } void Warmup(Method method, long invokeCount) { while (true) { var measurement = RunIteration(method, invokeCount, unrollFactor); if (heuristic.IsWamupRequirementMet(measurement)) break; } } IEnumberable<Measurement> Target(Method method, long invokeCount) { while (true) { var measurement = RunIteration(method, invokeCount, unrollFactor); if (measurement.IsNotOutlier) yield return measurement; if (heuristic.IsTargetRequirementMet(measurement)) yield break; } } // every iteration invokes the method (invokeCount / unrollFactor) times Measurement RunIteration(Method method, long invokeCount, long unrollFactor) { IterationSetup(); MemoryCleanup(); var clock = Clock.Start(); for (long i = 0; i < invokeCount / unrollFactor; i++) { // we perform manuall loop unrolling!! method(); // 1st call method(); // 2nd call method(); // (unrollFactor - 1)'th call method(); // unrollFactor'th call } var clockSpan = clock.GetElapsed(); IterationCleanup(); MemoryCleanup(); return Measurement(clockSpan); }"
  },
  "articles/guides/good-practices.html": {
    "href": "articles/guides/good-practices.html",
    "title": "Good Practices | BenchmarkDotNet",
    "keywords": "Good Practices ##Use the Release build without an attached debugger Never use the Debug build for benchmarking. Never . The debug version of the target method can run 10–100 times slower. The release mode means that you should have <Optimize>true</Optimize> in your csproj file or use /optimize for csc . Also your never should use an attached debugger (e.g. Visual Studio or WinDbg) during the benchmarking. The best way is build our benchmark in the Release mode and run it from the command line. ##Try different environments Please, don't extrapolate your results. Or do it very carefully. I remind you again: the results in different environments may vary significantly. If a Foo1 method is faster than a Foo2 method for CLR4, .NET Framework 4.5, x64, RyuJIT, Windows, it means that the Foo1 method is faster than the Foo2 method for CLR4, .NET Framework 4.5, x64, RyuJIT, Windows and nothing else. And you can not say anything about methods performance for CLR 2 or .NET Framework 4.6 or LegacyJIT-x64 or x86 or Linux+Mono until you try it. ##Avoid dead code elimination You should also use the result of calculation. For example, if you run the following code: void Foo() { Math.Exp(1); } then JIT can eliminate this code because the result of Math.Exp is not used. The better way is use it like this: double Foo() { return Math.Exp(1); } ##Power settings and other applications Turn off all of the applications except the benchmark process and the standard OS processes. If you run benchmark and work in the Visual Studio at the same time, it can negatively affect to benchmark results. If you use laptop for benchmarking, keep it plugged in and use the maximum performance mode."
  },
  "articles/guides/choosing-run-strategy.html": {
    "href": "articles/guides/choosing-run-strategy.html",
    "title": "Choosing RunStrategy | BenchmarkDotNet",
    "keywords": "Choosing RunStrategy If you run a benchmark, you always (explicitly or implicitly) use a job . Each Job has the RunStrategy parameter which allows switching between different benchmark modes. The default RunStrategy is Throughput , and it works fine for most cases. However, other strategies are also useful in some specific cases. Throughput Throughput is the default RunStrategy , works perfectly for microbenchmarking. It's automatically choosing the amount of operation in main iterations based on a set of pilot iterations. The amount of iterations will also be chosen automatically based on accuracy job settings. A benchmark method should have a steady state. Of course, you can manually set all the characteristics. An example: [SimpleJob(launchCount: 3, warmupCount: 10, targetCount: 30)] public class MyBenchmarkClass Monitoring If a benchmark method takes at least 100ms, you can also use the Monitoring strategy. In this case, the pilot stage will be omitted, by default you get 1 iteration = 1 operation (or you can manually set amount of operation in an iteration). Also you can use [IterationSetup] and [IterationCleanup] in this case: it shouldn't affect time measurements (but it can affect results of MemoryDiagnoser). It's a perfect mode for benchmarks which doesn't have a steady state and the performance distribution is tricky: Monitoring will help you to collect a set of measurements and get statistics. [SimpleJob(RunStrategy.Monitoring, launchCount: 10, warmupCount: 0, targetCount: 100)] public class MyBenchmarkClass ColdStart If you want to measure cold start (without the pilot and warmup stage), the ColdStart strategy is your choice. [SimpleJob(RunStrategy.ColdStart, launchCount:50)] public class MyBenchmarkClass"
  },
  "articles/features/sta-thread.html": {
    "href": "articles/features/sta-thread.html",
    "title": "STAThread | BenchmarkDotNet",
    "keywords": "STAThread If the code you want to benchmark requires [System.STAThread] then you need to apply this attribute to the benchmarked method. BenchmarkDotNet will generate executable with [STAThread] applied to it's Main method. Currently it does not work for .NET Core 2.0 due to this bug. Example [Benchmark, System.STAThread] public void CheckForSTA() { if (Thread.CurrentThread.GetApartmentState() != ApartmentState.STA) { throw new ThreadStateException(\"The current threads apartment state is not STA\"); } }"
  },
  "articles/configs/filters.html": {
    "href": "articles/configs/filters.html",
    "title": "Filters | BenchmarkDotNet",
    "keywords": "Filters Sometimes you don't want to run all of your benchmarks. In this case, you can filter some of them with the help of filters . Predefined filters: SimpleFilter NameFilter DisjunctionFilter CategoryFilter AnyCategoriesFilter AllCategoriesFilter Usage examples: [Config(typeof(Config))] public class IntroFilters { private class Config : ManualConfig { // We will benchmark ONLY method with names (which contains \"A\" OR \"1\") AND (have length < 3) public Config() { Add(new DisjunctionFilter( new NameFilter(name => name.Contains(\"A\")), new NameFilter(name => name.Contains(\"1\")) )); // benchmark with names which contains \"A\" OR \"1\" Add(new NameFilter(name => name.Length < 3)); // benchmark with names with length < 3 } } [Benchmark] public void A1() => Thread.Sleep(10); // Will be benchmarked [Benchmark] public void A2() => Thread.Sleep(10); // Will be benchmarked [Benchmark] public void A3() => Thread.Sleep(10); // Will be benchmarked [Benchmark] public void B1() => Thread.Sleep(10); // Will be benchmarked [Benchmark] public void B2() => Thread.Sleep(10); [Benchmark] public void B3() => Thread.Sleep(10); [Benchmark] public void C1() => Thread.Sleep(10); // Will be benchmarked [Benchmark] public void C2() => Thread.Sleep(10); [Benchmark] public void C3() => Thread.Sleep(10); [Benchmark] public void Aaa() => Thread.Sleep(10); } [DryJob] [CategoriesColumn] [BenchmarkCategory(\"Awesome\")] [AnyCategoriesFilter(\"A\", \"1\")] public class IntroCategories { [Benchmark] [BenchmarkCategory(\"A\", \"1\")] public void A1() => Thread.Sleep(10); // Will be benchmarked [Benchmark] [BenchmarkCategory(\"A\", \"2\")] public void A2() => Thread.Sleep(10); // Will be benchmarked [Benchmark] [BenchmarkCategory(\"B\", \"1\")] public void B1() => Thread.Sleep(10); // Will be benchmarked [Benchmark] [BenchmarkCategory(\"B\", \"2\")] public void B2() => Thread.Sleep(10); } Command line examples: --category=A --allCategories=A,B --anyCategories=A,B If you are using BenchmarkSwitcher and want to run all the benchmarks with a category from all types and join them into one summary table, use the --join option (or BenchmarkSwitcher.RunAllJoined ): * --join --category=MyAwesomeCategory"
  },
  "articles/configs/exporters.html": {
    "href": "articles/configs/exporters.html",
    "title": "Exporters | BenchmarkDotNet",
    "keywords": "Exporters An exporter allows you to export results of your benchmark in different formats. By default, files with results will be located in .\\BenchmarkDotNet.Artifacts\\results directory. Default exporters are: csv, html and markdown. Here is list of all available exporters: MiscExporters There are some predefined exporters. Examples: [AsciiDocExporter] [CsvExporter] [CsvMeasurementsExporter] [HtmlExporter] [MarkdownExporter] [PlainExporter] public class MyBenchmarkClass Json BenchmarkDotNet has a set of json exporters. You can customize the following properties of these exporters: fileNameSuffix : a string which be placed in the end of target file name. indentJson = false / true : should we format json or not. excludeMeasurements = false / true : should we exclude detailed information about measurements or not (the final summary with statistics will be in the json file anyway). Also, there are a set of predefined json exporters. Example of usage: [JsonExporterAttribute.Brief] [JsonExporterAttribute.Full] [JsonExporterAttribute.BriefCompressed] [JsonExporterAttribute.FullCompressed] [JsonExporter(\"-custom\", indentJson: true, excludeMeasurements: true)] public class IntroJsonExport { [Benchmark] public void Sleep10() => Thread.Sleep(10); [Benchmark] public void Sleep20() => Thread.Sleep(20); } [Config(typeof(Config))] public class IntroJsonExport2 { private class Config : ManualConfig { public Config() { Add(JsonExporter.Brief); Add(JsonExporter.Full); Add(JsonExporter.BriefCompressed); Add(JsonExporter.FullCompressed); Add(JsonExporter.Custom(\"-custom\", indentJson: true, excludeMeasurements: true)); } } } Example of IntroJsonExport-report-brief.json : { \"Title\":\"IntroJsonExport\", \"HostEnvironmentInfo\":{ \"BenchmarkDotNetCaption\":\"BenchmarkDotNet-Dev.Core\", \"BenchmarkDotNetVersion\":\"0.9.9.0\", \"OsVersion\":\"Microsoft Windows NT 6.2.9200.0\", \"ProcessorName\":{ \"IsValueCreated\":true, \"Value\":\"Intel(R) Core(TM) i7-4702MQ CPU 2.20GHz\" }, \"ProcessorCount\":8, \"ClrVersion\":\"MS.NET 4.0.30319.42000\", \"Architecture\":\"64-bit\", \"HasAttachedDebugger\":false, \"HasRyuJit\":true, \"Configuration\":\"RELEASE\", \"JitModules\":\"clrjit-v4.6.1586.0\", \"DotNetCliVersion\":\"1.0.0-preview2-003121\", \"ChronometerFrequency\":2143474, \"HardwareTimerKind\":\"Tsc\" }, \"Benchmarks\":[ { \"ShortInfo\":\"IntroJsonExport_Sleep10\", \"Namespace\":\"BenchmarkDotNet.Samples.Intro\", \"Type\":\"IntroJsonExport\", \"Method\":\"Sleep10\", \"MethodTitle\":\"Sleep10\", \"Parameters\":\"\", \"Properties\":{ \"Mode\":\"Throughput\", \"Platform\":\"Host\", \"Jit\":\"Host\", \"Runtime\":\"Host\", \"GcMode\":\"Host\", \"WarmupCount\":\"Auto\", \"TargetCount\":\"Auto\", \"LaunchCount\":\"Auto\", \"IterationTime\":\"Auto\", \"Affinity\":\"Auto\" }, \"Statistics\":{ \"N\":20, \"Min\":10265993.7209375, \"LowerFence\":10255329.082734371, \"Q1\":10337369.528437499, \"Median\":10360382.6953125, \"Mean\":10362283.085796878, \"Q3\":10392063.158906251, \"UpperFence\":10474103.60460938, \"Max\":10436008.3209375, \"InterquartileRange\":54693.630468752235, \"Outliers\":[ ], \"StandardError\":10219.304338928456, \"Variance\":2088683623.4328396, \"StandardDeviation\":45702.118369205156, \"Skewness\":-0.1242777170069375, \"Kurtosis\":2.31980277935226, \"ConfidenceInterval\":{ \"Mean\":10362283.085796878, \"Error\":10219.304338928456, \"Level\":6, \"Margin\":20029.836504299772, \"Lower\":10342253.249292579, \"Upper\":10382312.922301177 }, \"Percentiles\":{ \"P0\":10265993.7209375, \"P25\":10338555.905625, \"P50\":10360382.6953125, \"P67\":10373496.555659376, \"P80\":10400703.4841875, \"P85\":10417280.326718749, \"P90\":10424125.595812501, \"P95\":10435620.51609375, \"P100\":10436008.3209375 } } },{ \"ShortInfo\":\"IntroJsonExport_Sleep20\", \"Namespace\":\"BenchmarkDotNet.Samples.Intro\", \"Type\":\"IntroJsonExport\", \"Method\":\"Sleep20\", \"MethodTitle\":\"Sleep20\", \"Parameters\":\"\", \"Properties\":{ \"Mode\":\"Throughput\", \"Platform\":\"Host\", \"Jit\":\"Host\", \"Runtime\":\"Host\", \"GcMode\":\"Host\", \"WarmupCount\":\"Auto\", \"TargetCount\":\"Auto\", \"LaunchCount\":\"Auto\", \"IterationTime\":\"Auto\", \"Affinity\":\"Auto\" }, \"Statistics\":{ \"N\":20, \"Min\":20258672.37, \"LowerFence\":20206333.269843742, \"Q1\":20325342.761249997, \"Median\":20362636.192500003, \"Mean\":20360791.931687497, \"Q3\":20404682.4221875, \"UpperFence\":20523691.913593754, \"Max\":20422396.073125, \"InterquartileRange\":79339.66093750298, \"Outliers\":[ ], \"StandardError\":10728.817907277158, \"Variance\":2302150673.7502208, \"StandardDeviation\":47980.732317777525, \"Skewness\":-0.50826238372439869, \"Kurtosis\":2.11050327966268, \"ConfidenceInterval\":{ \"Mean\":20360791.931687497, \"Error\":10728.817907277158, \"Level\":6, \"Margin\":21028.48309826323, \"Lower\":20339763.448589232, \"Upper\":20381820.414785761 }, \"Percentiles\":{ \"P0\":20258672.37, \"P25\":20327638.975312497, \"P50\":20362636.192500003, \"P67\":20391669.3762875, \"P80\":20406370.68625, \"P85\":20412542.034406248, \"P90\":20414412.5376875, \"P95\":20416606.697718751, \"P100\":20422396.073125 } } } ] } Plots You can install R to automatically get nice plots of your benchmark results. First, make sure Rscript.exe or Rscript is in your path, or define an R_HOME environment variable pointing to the R installation directory (containing the bin directory). Use RPlotExporter.Default and CsvMeasurementsExporter.Default in your config, and the BuildPlots.R script in your bin directory will take care of the rest. Examples <BenchmarkName>-barplot.png <BenchmarkName>-boxplot.png <BenchmarkName>-<MethodName>-density.png <BenchmarkName>-<MethodName>-facetTimeline.png <BenchmarkName>-<MethodName>-facetTimelineSmooth.png <BenchmarkName>-<MethodName>-<JobName>-timelineSmooth.png <BenchmarkName>-<MethodName>-<JobName>-timelineSmooth.png A config example in C#: public class Config : ManualConfig { public Config() { Add(CsvMeasurementsExporter.Default); Add(RPlotExporter.Default); } } A config example in F#: module MyBenchmark open BenchmarkDotNet.Attributes open BenchmarkDotNet.Configs open BenchmarkDotNet.Exporters open BenchmarkDotNet.Exporters.Csv open MyProjectUnderTest type MyConfig() as this = inherit ManualConfig() do this.Add(CsvMeasurementsExporter.Default) this.Add(RPlotExporter.Default) [< MemoryDiagnoser; Config(typeof<MyConfig>); RPlotExporter >] type MyPerformanceTests() = let someTestData = getTestDataAsList () [<Benchmark>] member __.SomeTestCase() = someTestData |> myFunctionUnderTest CSV The CSV file format is often used to graph the output or to analyze the results programmatically. The CSV exporter may be configured to produce sanitized output, where cell values are numerals and their units are predefined. The CSV exporter and other compatible exporters may consume an instance of ISummaryStyle that defines how the output should look like: Property Remarks Default PrintUnitsInHeader If true, units will be displayed in the header row false PrintUnitsInContent If true, units will be appended to the value true TimeUnit If null, unit will be automatically selected null SizeUnit If null, unit will be automatically selected null Example of CSV exporter configured to always use microseconds, kilobytes, and to render units only in column headers: var config = ManualConfig.Create(DefaultConfig.Instance); config.Add(new CsvExporter( CsvSeparator.CurrentCulture, new BenchmarkDotNet.Reports.SummaryStyle { PrintUnitsInHeader = true, PrintUnitsInContent = false, TimeUnit = BenchmarkDotNet.Horology.TimeUnit.Microsecond, SizeUnit = BenchmarkDotNet.Columns.SizeUnit.KB })); Excerpt from the resulting CSV file: Method,...,Mean [us],Error [us],StdDev [us],Min [us],Max [us],Allocated [KB] Benchmark,...,\"37,647.6\",\"32,717.9\",\"21,640.9\",\"11,209.2\",\"59,492.6\",1.58 XML BenchmarkDotNet has a set of XML exporters. You can customize the following properties of these exporters: fileNameSuffix : a string which be placed in the end of target file name. indentXml = false / true : should we format xml or not. excludeMeasurements = false / true : should we exclude detailed information about measurements or not (the final summary with statistics will be in the XML file anyway). Also, there are a set of predefined XML exporters. Example of usage: [XmlExporterAttribute.Brief] [XmlExporterAttribute.Full] [XmlExporterAttribute.BriefCompressed] [XmlExporterAttribute.FullCompressed] [XmlExporter(\"-custom\", indentXml: true, excludeMeasurements: true)] public class IntroXmlExport { [Benchmark] public void Sleep10() => Thread.Sleep(10); [Benchmark] public void Sleep20() => Thread.Sleep(20); } Example of IntroXmlExport-report-brief.xml : <?xml version=\"1.0\" encoding=\"utf-8\"?> <Summary> <Title>IntroXmlExport</Title> <HostEnvironmentInfo> <BenchmarkDotNetCaption>BenchmarkDotNet</BenchmarkDotNetCaption> <BenchmarkDotNetVersion>0.10.9.20170805-develop</BenchmarkDotNetVersion> <OsVersion>Windows 10 Redstone 2 (10.0.15063)</OsVersion> <ProcessorName>Intel Core i7-3770K CPU 3.50GHz (Ivy Bridge)</ProcessorName> <ProcessorCount>8</ProcessorCount> <RuntimeVersion>.NET Framework 4.7 (CLR 4.0.30319.42000)</RuntimeVersion> <Architecture>64bit</Architecture> <HasAttachedDebugger>False</HasAttachedDebugger> <HasRyuJit>True</HasRyuJit> <Configuration>RELEASE</Configuration> <JitModules>clrjit-v4.7.2101.1</JitModules> <DotNetSdkVersion>1.0.4</DotNetSdkVersion> <ChronometerFrequency> <Hertz>3410220</Hertz> </ChronometerFrequency> <HardwareTimerKind>Tsc</HardwareTimerKind> </HostEnvironmentInfo> <Benchmarks> <Benchmark> <DisplayInfo>IntroXmlExport.Sleep10: DefaultJob</DisplayInfo> <Namespace>BenchmarkDotNet.Samples.Intro</Namespace> <Type>IntroXmlExport</Type> <Method>Sleep10</Method> <MethodTitle>Sleep10</MethodTitle> <Statistics> <N>15</N> <Min>10989865.8785938</Min> <LowerFence>10989836.0967969</LowerFence> <Q1>10990942.6053125</Q1> <Median>10991249.5870313</Median> <Mean>10991270.0524583</Mean> <Q3>10991680.2776563</Q3> <UpperFence>10992786.7861719</UpperFence> <Max>10992115.5501563</Max> <InterquartileRange>737.672343749553</InterquartileRange> <StandardError>148.484545262958</StandardError> <Variance>330714.902729213</Variance> <StandardDeviation>575.07817097262</StandardDeviation> <Skewness>-0.67759778074187</Skewness> <Kurtosis>3.14296703520386</Kurtosis> <ConfidenceInterval> <N>15</N> <Mean>10991270.0524583</Mean> <StandardError>148.484545262958</StandardError> <Level>L999</Level> <Margin>614.793505974065</Margin> <Lower>10990655.2589524</Lower> <Upper>10991884.8459643</Upper> </ConfidenceInterval> <Percentiles> <P0>10989865.8785938</P0> <P25>10991027.3689063</P25> <P50>10991249.5870313</P50> <P67>10991489.490875</P67> <P80>10991696.7722187</P80> <P85>10991754.5031875</P85> <P90>10991933.1939688</P90> <P95>10992067.441125</P95> <P100>10992115.5501563</P100> </Percentiles> </Statistics> </Benchmark> </Benchmarks> </Summary>"
  },
  "articles/configs/columns.html": {
    "href": "articles/configs/columns.html",
    "title": "Columns | BenchmarkDotNet",
    "keywords": "Columns A column is a column in the summary table. Default columns In this section, default columns (which be added to the Summary table by default) are presented. Some of columns are optional, i.e. they can be omitted (it depends on the measurements from the summary). Target There are 3 default columns which describes the target benchmark: Namespace , Type , Method . Namespace and Type will be omitted when all the benchmarks have the same namespace or type name. Method column always be a part of the summary table. Job There are many different job characteristics, but the summary includes only characteristics which has at least one non-default value. Statistics There are also a lot of different statistics which can be considered. It will be really hard to analyse the summary table, if all of the available statistics will be shown. Fortunately, BenchmarkDotNet has some heuristics for statistics columns and shows only important columns. For example, if all of the standard deviations are zero (we run our benchmarks against Dry job), this column will be omitted. The standard error will be shown only for cases when we are failed to achieve required accuracy level. Only Mean will be always shown. If the distribution looks strange, BenchmarkDotNet could also print additional columns like Median or P95 (95th percentile). If you need specific statistics, you always could add them manually. Params If you have params , the corresponded columns will be automatically added. Diagnosers If you turned on diagnosers which providers additional columns, they will be also included in the summary page. Optional columns TagColumns In the following example, we introduce two new columns which contains a tag based on a benchmark method name: [Config(typeof(Config))] public class IntroTags { private class Config : ManualConfig { public Config() { // You can add custom tags per each method using Columns Add(new TagColumn(\"Kind\", name => name.Substring(0, 3))); Add(new TagColumn(\"Number\", name => name.Substring(3))); } } [Benchmark] public void Foo1() { /* ... */ } [Benchmark] public void Foo12() { /* ... */ } [Benchmark] public void Bar3() { /* ... */ } [Benchmark] public void Bar34() { /* ... */ } } Result: Method Mean Kind Number Bar34 10.3636 ms Bar 34 Bar3 10.4662 ms Bar 3 Foo12 10.1377 ms Foo 12 Foo1 10.2814 ms Foo 1 RankColumn RankColumn allows you to rank your benchmarks. If there is no significant difference between two benchmarks, they will have the same rank. It also makes sense to define a SummaryOrderPolicy (e.g. FastestToSlowest or SlowestToFastest ) when you are using RankColumn . An example: [OrderProvider(SummaryOrderPolicy.FastestToSlowest)] [RankColumn] [RankColumn(NumeralSystem.Roman)] public class IntroRankColumn { [Params(1, 2)] public int Factor; [Benchmark] public void Foo() => Thread.Sleep(Factor * 100); [Benchmark] public void Bar() => Thread.Sleep(Factor * 200); } Result: Method | Factor | Mean | Rank | Rank | ------- |------- |------------ |----- |----- | Foo | 1 | 100.2541 ms | 1 | I | Foo | 2 | 200.3021 ms | 2 | II | Bar | 1 | 200.3863 ms | 2 | II | Bar | 2 | 400.3847 ms | 3 | III | Custom columns Of course, you can define own custom columns and use it everywhere. Here is the definition of TagColumn : public class TagColumn : IColumn { private readonly Func<string, string> getTag; public string ColumnName { get; } public TagColumn(string columnName, Func<string, string> getTag) { this.getTag = getTag; ColumnName = columnName; } public bool IsDefault(Summary summary, Benchmark benchmark) => false; public string GetValue(Summary summary, Benchmark benchmark) => getTag(benchmark.Target.Method.Name); public bool IsAvailable(Summary summary) => true; public bool AlwaysShow => true; public ColumnCategory Category => ColumnCategory.Custom; public override string ToString() => ColumnName; }"
  },
  "articles/features/percentiles.html": {
    "href": "articles/features/percentiles.html",
    "title": "Percentiles | BenchmarkDotNet",
    "keywords": "Percentiles The percentile represents a higher boundary for specified percentage of the measurements. For example, 95th percentile = 500ms means that 95% of all samples are not slower than 500ms. This metric is not very useful in microbenchmarks, as the values from consequent runs have a very narrow distribution. However, real-world scenarios often have so-called long tail distribution (due to IO delays, locks, memory access latency and so on), so the average execution time cannot be trusted. The percentiles allow to include the tail of distribution into the comparison. However, it requires some preparations steps. At first, you should have enough runs to count percentiles from. The TargetCount in the config should be set to 10-20 runs at least. Second, the count of iterations for each run should not be very high, or the peak timings will be averaged. The IterationTime = 25 works fine for most cases; for long-running benchmarks the Mode = Mode.SingleRun will be the best choice. However, feel free to experiment with the config values. Third, if you want to be sure that measurements are repeatable, set the LaunchCount to 3 or higher. And last, don't forget to include the columns into the config. They are not included by default (as said above, these are not too useful for most of the benchmarks). There're predefined StatisticColumn.P0 .. StatisticColumn.P100 for absolute timing percentiles and BaselineDiffColumn.Scaled50 .. BaselineDiffColumn.Scaled95 for relative percentiles. ##Example Run the IntroPercentiles sample. It contains three benchmark methods. First delays for 20 ms constantly. The second has random delays for 10..30 ms. And the third delays for 10ms 85 times of 100 and delays for 40ms 15 times of 100. Here's the output from the benchmark (some columns removed for brevity): Method | Median | StdDev | Scaled | P0 | P50 | P80 | P85 | P95 | P100 | ScaledP50 | ScaledP85 | ScaledP95 --------------- |----------- |----------- |------- |----------- |----------- |----------- |----------- |----------- |----------- |---------- |---------- |---------- ConstantDelays | 20.3813 ms | 0.2051 ms | 1.00 | 20.0272 ms | 20.3813 ms | 20.4895 ms | 20.4954 ms | 20.5869 ms | 21.1471 ms | 1.00 | 1.00 | 1.00 RandomDelays | 19.8055 ms | 5.7556 ms | 0.97 | 10.0793 ms | 19.8055 ms | 25.4173 ms | 26.5187 ms | 29.0313 ms | 29.4550 ms | 0.97 | 1.29 | 1.41 RareDelays | 10.3385 ms | 11.4828 ms | 0.51 | 10.0157 ms | 10.3385 ms | 10.5211 ms | 40.0560 ms | 40.3992 ms | 40.4674 ms | 0.51 | 1.95 | 1.96 Note that the 'Scaled' column kinda lies to you. The \"almost same\" RandomDelays method is actually not so performant and the seems-to-be-fastest RareDelays method is 2 times slower 15 times of 100. Also, it's very easy to screw the results with incorrect setup. For example, the same code being run with new Job { TargetCount = 5, IterationTime = 500 } completely hides the peak values: Method | Median | StdDev | Scaled | P0 | P50 | P80 | P85 | P95 | P100 | ScaledP50 | ScaledP85 | ScaledP95 --------------- |----------- |---------- |------- |----------- |----------- |----------- |----------- |----------- |----------- |---------- |---------- |---------- ConstantDelays | 20.2692 ms | 0.0308 ms | 1.00 | 20.1986 ms | 20.2692 ms | 20.2843 ms | 20.2968 ms | 20.3097 ms | 20.3122 ms | 1.00 | 1.00 | 1.00 RandomDelays | 18.9965 ms | 0.8601 ms | 0.94 | 18.1339 ms | 18.9965 ms | 19.8126 ms | 19.8278 ms | 20.4485 ms | 20.9466 ms | 0.94 | 0.98 | 1.01 RareDelays | 14.0912 ms | 2.8619 ms | 0.70 | 10.2606 ms | 14.0912 ms | 15.7653 ms | 17.3862 ms | 18.6728 ms | 18.6940 ms | 0.70 | 0.86 | 0.92"
  },
  "articles/configs/diagnosers.html": {
    "href": "articles/configs/diagnosers.html",
    "title": "Diagnosers | BenchmarkDotNet",
    "keywords": "Diagnosers A diagnoser can attach to your benchmark and get some useful info. The current Diagnosers are: GC and Memory Allocation ( MemoryDiagnoser ) which is cross platform, built-in and is not enabled by default anymore . Please see Adam Sitnik's blog post for all the details. JIT Inlining Events ( InliningDiagnoser ). You can find this diagnoser in a separated package with diagnosers for Windows ( BenchmarkDotNet.Diagnostics.Windows ): JIT Tail Call Events ( TailCallDiagnoser ). You can find this diagnoser as well as the ( InliningDiagnoser ) in a separated package with diagnosers for Windows ( BenchmarkDotNet.Diagnostics.Windows ): Please see this post for all the details. Hardware Counter Diagnoser. You can find this diagnoser in a separated package with diagnosers for Windows ( BenchmarkDotNet.Diagnostics.Windows ): . Please see Adam Sitnik's blog post for all the details. Disassembly Diagnoser. It allows you to disassemble the benchmarked code to asm, IL and C#/F#. Please see Adam Sitnik's blog post for all the details. Examples Below is a sample output from the GC and Memory Allocation diagnoser, note the extra columns on the right-hand side (\"Gen 0\", \"Gen 1\", \"Gen 2\" and \"Allocated\"): Method | Mean | StdErr | StdDev | Median | Gen 0 | Allocated | ----------------- |------------ |----------- |------------ |------------ |------- |---------- | 'new byte[10kB]' | 884.4896 ns | 46.3528 ns | 245.2762 ns | 776.4237 ns | 0.1183 | 10 kB | A config example: private class Config : ManualConfig { public Config() { Add(MemoryDiagnoser.Default); Add(new InliningDiagnoser()); } } You can also use one of the following attributes (apply it on a class that contains Benchmarks): [MemoryDiagnoser] [InliningDiagnoser] [TailCallDiagnoser] In BenchmarkDotNet, 1kB = 1024B, 1MB = 1024kB, and so on. Hardware Counters Diagnoser This diagnoser is not enabled in explicit way as the other diagnosers. You need to specify [HardwareCounters] and we choose the right diagnoser in the runtime. [HardwareCounters(HardwareCounter.BranchMispredictions, HardwareCounter.BranchInstructions)] public class Cpu_BranchPredictor { private const int N = 32767; private readonly int[] sorted, unsorted; public Cpu_BranchPredictor() { var random = new Random(0); unsorted = new int[N]; sorted = new int[N]; for (int i = 0; i < N; i++) sorted[i] = unsorted[i] = random.Next(256); Array.Sort(sorted); } private static int Branch(int[] data) { int sum = 0; for (int i = 0; i < N; i++) if (data[i] >= 128) sum += data[i]; return sum; } private static int Branchless(int[] data) { int sum = 0; for (int i = 0; i < N; i++) { int t = (data[i] - 128) >> 31; sum += ~t & data[i]; } return sum; } [Benchmark] public int SortedBranch() => Branch(sorted); [Benchmark] public int UnsortedBranch() => Branch(unsorted); [Benchmark] public int SortedBranchless() => Branchless(sorted); [Benchmark] public int UnsortedBranchless() => Branchless(unsorted); } and the results: | Method | Mean | Mispredict rate | BranchInstructions/Op | BranchMispredictions/Op | |------------------- |------------ |---------------- |---------------------- |------------------------ | | SortedBranch | 21.4539 us | 0,04% | 70121 | 24 | | UnsortedBranch | 136.1139 us | 23,70% | 68788 | 16301 | | SortedBranchless | 28.6705 us | 0,06% | 35711 | 22 | | UnsortedBranchless | 28.9336 us | 0,05% | 35578 | 17 | Disassembly Diagnoser You need to use the DisassemblyDiagnoser attribute to configure it. The available options are: printIL: IL will be printed. False by default. printAsm: ASM will be printed. True by default. printSource: C# source code will be printed. False by default. printPrologAndEpilog: ASM for prolog and epilog will be printed. False by default. recursiveDepth: Includes called methods to given level. 1 by default, indexed from 1. To print just benchmark set to 0 Requirements Disassembly Diagnoser requires following settings in your .csproj file: <PropertyGroup> <PlatformTarget>AnyCPU</PlatformTarget> <DebugType>pdbonly</DebugType> <DebugSymbols>true</DebugSymbols> </PropertyGroup> To get the source code we need to locate and read the .pdb files. This is why we need DebugType and DebugSymbols settings. To compare different platforms the project which defines benchmarks has to target AnyCPU . Sample [DisassemblyDiagnoser(printAsm: true, printSource: true)] // !!! use the new diagnoser!! [RyuJitX64Job] public class Simple { int[] field = Enumerable.Range(0, 100).ToArray(); [Benchmark] public int SumLocal() { var local = field; // we use local variable that points to the field int sum = 0; for (int i = 0; i < local.Length; i++) sum += local[i]; return sum; } [Benchmark] public int SumField() { int sum = 0; for (int i = 0; i < field.Length; i++) sum += field[i]; return sum; } } Disassembly Diagnoser for Mono on Windows If you want to get a disassembly listing for Mono on Windows, you need as and x86_64-w64-mingw32-objdump.exe tools. If you don't have it, you will get a warning like follows: It's impossible to get Mono disasm because you don't have some required tools: 'as' is not recognized as an internal or external command 'x86_64-w64-mingw32-objdump.exe' is not recognized as an internal or external command The easiest way to get these tools: Download and install Cygwin On the \"Select Packages\" screen, search for binutils Install binutils and mingw64-x86_64-binutils Add cygwin64\\bin\\ (or cygwin\\bin\\ ) in %PATH% ALL JITs You can use a single config to compare the generated assembly code for ALL JITs. But to allow benchmarking any target platform architecture the project which defines benchmarks has to target AnyCPU . <PropertyGroup> <PlatformTarget>AnyCPU</PlatformTarget> </PropertyGroup> public class MultipleJits : ManualConfig { public MultipleJits() { Add(Job.ShortRun.With(new MonoRuntime(name: \"Mono x86\", customPath: @\"C:\\Program Files (x86)\\Mono\\bin\\mono.exe\")).With(Platform.X86)); Add(Job.ShortRun.With(new MonoRuntime(name: \"Mono x64\", customPath: @\"C:\\Program Files\\Mono\\bin\\mono.exe\")).With(Platform.X64)); Add(Job.ShortRun.With(Jit.LegacyJit).With(Platform.X86).With(Runtime.Clr)); Add(Job.ShortRun.With(Jit.LegacyJit).With(Platform.X64).With(Runtime.Clr)); Add(Job.ShortRun.With(Jit.RyuJit).With(Platform.X64).With(Runtime.Clr)); // RyuJit for .NET Core 2.0 Add(Job.ShortRun.With(Jit.RyuJit).With(Platform.X64).With(Runtime.Core).With(CsProjCoreToolchain.NetCoreApp20)); // RyuJit for .NET Core 2.1 Add(Job.ShortRun.With(Jit.RyuJit).With(Platform.X64).With(Runtime.Core).With(CsProjCoreToolchain.NetCoreApp21)); Add(DisassemblyDiagnoser.Create(new DisassemblyDiagnoserConfig(printAsm: true, printPrologAndEpilog: true, recursiveDepth: 3))); } } [Config(typeof(MultipleJits))] public class Jit_Devirtualization { private Increment increment = new Increment(); [Benchmark] public int CallVirtualMethod() => increment.OperateTwice(10); public abstract class Operation // abstract unary integer operation { public abstract int Operate(int input); public int OperateTwice(int input) => Operate(Operate(input)); // two virtual calls to Operate } public sealed class Increment : Operation // concrete, sealed operation: increment by fixed amount { public readonly int Amount; public Increment(int amount = 1) { Amount = amount; } public override int Operate(int input) => input + Amount; } } The disassembly result can be obtained here . The file was too big to embed it in this doc page. Getting only the Disassembly without running the benchmarks for a long time Sometimes you might be interested only in the disassembly, not the results of the benchmarks. In that case you can use Job.Dry which runs the benchmark only once . public class JustDisassembly : ManualConfig { public JustDisassembly() { Add(Job.Dry.With(Jit.RyuJit).With(Platform.X64).With(Runtime.Core).With(CsProjCoreToolchain.NetCoreApp20)); Add(Job.Dry.With(Jit.RyuJit).With(Platform.X64).With(Runtime.Core).With(CsProjCoreToolchain.NetCoreApp21)); Add(DisassemblyDiagnoser.Create(new DisassemblyDiagnoserConfig(printAsm: true, printPrologAndEpilog: true, recursiveDepth: 3))); } } Restrictions In order to not affect main results we perform a separate run if any diagnoser is used. That's why it might take more time to execute benchmarks. MemoryDiagnoser: Mono currently does not expose any api to get the number of allocated bytes. That's why our Mono users will get ? in Allocated column. In order to get the number of allocated bytes in cross platform way we are using GC.GetAllocatedBytesForCurrentThread which recently got exposed for netcoreapp1.1. That's why BenchmarkDotNet does not support netcoreapp1.0 from version 0.10.1. MemoryDiagnoser is 99.5% accurate about allocated memory when using default settings or Job.ShortRun (or any longer job than it). HardwareCounters: Windows 8+ only (we plan to add Unix support in the future) No Hyper-V (Virtualization) support Requires running as Admin (ETW Kernel Session) No InProcessToolchain support ( #394 ) Disassembly Diagnoser: .NET Core disassembler works only on Windows Mono disassembler does not support recursive disassembling and produces output without IL and C#. Indirect calls are not tracked. To be able to compare different platforms, you need to target AnyCPU <PlatformTarget>AnyCPU</PlatformTarget> To get the corresponding C#/F# code from disassembler you need to configure your project in following way: <DebugType>pdbonly</DebugType> <DebugSymbols>true</DebugSymbols> Tailcall Diagnoser You need to use the TailcallDiagnoser attribute to configure it. The available options are: logFailuresOnly: Track only the methods that failed to get tail called. True by default. filterByNamespace : Track only the methods from declaring type's namespace. Set to false if you want to see all Jit tail events. True by default. Sample [Diagnostics.Windows.Configs.TailCallDiagnoser] [LegacyJitX86Job, LegacyJitX64Job, RyuJitX64Job] public class Jit_TailCalling { [Benchmark] public long Calc() => FactorialWithoutTailing(7) - FactorialWithTailing(7); private static long FactorialWithoutTailing(int depth) => depth == 0 ? 1 : depth * FactorialWithoutTailing(depth - 1); private static long FactorialWithTailing(int pos, int depth) => pos == 0 ? depth : FactorialWithTailing(pos - 1, depth * pos); private static long FactorialWithTailing(int depth) private static long FactorialWithTailing(int depth) => FactorialWithTailing(1, depth); } The result The benchmark results were omitted for brevity. // * Diagnostic Output - TailCallDiagnoser * -------------------- -------------------- Jit_TailCalling.Calc: LegacyJitX64(Jit=LegacyJit, Platform=X64, Runtime=Clr) -------------------- -------------------- Jit_TailCalling.Calc: LegacyJitX86(Jit=LegacyJit, Platform=X86, Runtime=Clr) -------------------- -------------------- Jit_TailCalling.Calc: RyuJitX64(Jit=RyuJit, Platform=X64) -------------------- Caller: <null>.<null> - <null> Callee: BenchmarkDotNet.Samples.JIT.Jit_TailCalling.FactorialWithTailing - int64 (int32,int32) Tail prefix: False Tail call type: RecursiveLoop ------------------- Restrictions Windows only x64"
  },
  "articles/configs/configs.html": {
    "href": "articles/configs/configs.html",
    "title": "Configs | BenchmarkDotNet",
    "keywords": "Configs Config is a set of so called jobs , columns , exporters , loggers , diagnosers , analysers , validators that help you to build your benchmark. Built-in configuration There are two built-in ways to set your config: Object style [Config(typeof(Config))] public class MyClassWithBenchmarks { private class Config : ManualConfig { public Config() { Add(new Job1(), new Job2()); Add(new Column1(), new Column2()); Add(new Exporter1(), new Exporter2()); Add(new Logger1(), new Logger2()); Add(new Diagnoser1(), new Diagnoser2()); Add(new Analyser1(), new Analyser2()); Add(new Filter1(), new Filter2()); } } [Benchmark] public void Benchmark1() { } [Benchmark] public void Benchmark2() { } } Command style [Config(\"jobs=job1,job2 \" + \"columns=column1,column2 \" + \"exporters=exporter1,exporter2 \" + \"loggers=logger1,logger2 \" + \"diagnosers=diagnoser1,diagnoser2 \" + \"analysers=analyser1,analyser2\")] public class MyClassWithBenchmarks { [Benchmark] public void Benchmark1() { } [Benchmark] public void Benchmark2() { } } Custom configs You can also define your own way to specify config parameters. Custom attribute You can define own config attribute: [MyConfigSource(Jit.LegacyJit, Jit.RyuJit)] public class IntroConfigSource { private class MyConfigSourceAttribute : Attribute, IConfigSource { public IConfig Config { get; private set; } public MyConfigSourceAttribute(params Jit[] jits) { var jobs = jits.Select(jit => new Job(Job.Dry) { Env = { Platform = Platform.X64, Jit = jit } }).ToArray(); Config = ManualConfig.CreateEmpty().With(jobs); } } [Benchmark] public void Foo() { Thread.Sleep(10); } } Fluent config There is no need to create new Config type, you can simply use fluent interface: BenchmarkRunner .Run<Algo_Md5VsSha256>( ManualConfig .Create(DefaultConfig.Instance) .With(Job.RyuJitX64) .With(Job.Core) .With(ExecutionValidator.FailOnError));"
  },
  "articles/contributing/running-tests.html": {
    "href": "articles/contributing/running-tests.html",
    "title": "Running Tests | BenchmarkDotNet",
    "keywords": "Running Tests To run \"Classic\" tests build the solution and run runClassicTests.cmd in the tests directory or comment out the netcoreapp1.0 part of all project.json files that belong to the testing projects. To run \"Core\" tests you just need to open Test Explorer in Visual Studio and rebuild the solution. Then tests show up in Test Explorer and you can simply run them. @alert Important Remember to do both before pulling a PR or publishing new version @end For some unit tests (e.g. for exporter tests) BenchmarkDotNet uses approval tests' implementation for .NET: ApprovalTests.Net . The expected value for each test is stored in a *.approved.txt file located near the test source file in the repository. ApprovalTests.NET generates approved file's names automatically according test name and its parameters. This files must be added under the source control. It also creates a *.received file for each failed test. You can use different reporters for convenient file comparison. By default we use XUnit2Reporter, so you can find test run results on the test runner console as usual. You can add [UseReporter(typeof(KDiffReporter))] on test class and then ApprovalTests will open KDiff for each failed test. This way you can easily understand what's the difference between approved and received values and choose the correct one."
  },
  "articles/contributing/miscellaneous.html": {
    "href": "articles/contributing/miscellaneous.html",
    "title": "F# | BenchmarkDotNet",
    "keywords": "#Miscellaneous topics F# We have full F# support, all you have to do is to run dotnet restore to download the compilers etc. Chat room How can I help? Here is a list of up-for-grabs issues"
  },
  "articles/contributing/disassembler.html": {
    "href": "articles/contributing/disassembler.html",
    "title": "Contributing to Disassembler | BenchmarkDotNet",
    "keywords": "Contributing to Disassembler The disassembler might looks scarry, but once you know how it works and how to debug it, it's very easy to develop it. How it works We have 3 disassemblers: Mono x64 for Windows x86 for Windows The MonoDisassembler is very simple: it spawns Mono with the right arguments to get the asm, Mono prints the output to the console and we just parse it. Single class does the job: MonoDisassembler . When it comes to Windows disassemblers it's not so easy. To obtain the disassm we are using ClrMD. ClrMD can attach only to the process of same bitness (architecture). This is why we have two dissasemblers: x64 and x86. The code is the same (single class, linked in two projects) but compiled for two different architectures. Unfortunatelly ClrMD is not a signed dll. This is why, we keep both diassemblers in the resources of the BenchmarkDotNet.dll. When we need the disassembler, we search for it in the resources, copy it to the disk and run (it's an exe). How to debug the disassembler You need to create a new project which executes the code that you would like to disassemble. It can be a simple console app. In this app, you need to run the desired code (to get it jitted) and just don't exit. Before you exit, you have to attach with Disassembler to given process. Disassembler requires some arguments to run: id of the process to attach, full type name of the type which contains desired method, name of desired method and what should be disassembled: asm, IL, C#, prolog & epilog. Personally I use following code to run the console app and print arguments that are required to attach to it: namespace Sample { class Program { static void Main(string[] args) { var result = Benchmark(); // execute the benchmark do method gets jitted Console.WriteLine($\"{Process.GetCurrentProcess().Id} \" + // process Id $\"\\\"{typeof(Program).FullName}\\\" \" + // full type name $\"{nameof(Benchmark)} \" + // benchmarked method name $\"{bool.TrueString} \" + // printAsm $\"{bool.FalseString} \" + // printIL $\"{bool.FalseString} \" + // print Source $\"{bool.FalseString} \" + // print prolog and epilog \"2 \" + // recursive depth $\"{Path.GetTempFileName()}.xml\"); // result xml file path while(true) { Console.WriteLine(\"Press Ctrl+C to kill the process\"); Console.ReadLine(); // block the exe, attach with Disassembler now } GC.KeepAlive(result); } public static IntPtr Benchmark() { return new IntPtr(42).Multiply(4); } } public static class IntPtrHelper { [MethodImpl(MethodImplOptions.AggressiveInlining)] public unsafe static IntPtr Multiply(this IntPtr a, int factor) { return (sizeof(IntPtr) == sizeof(int)) ? new IntPtr((int)a * factor) : new IntPtr((long)a * factor); } } } Important : Please remember that every new classic .NET project in VS compiles as 32 bit. If you want to check the asm produced for x64 you need to go to the properites of the console app (Alt+Enter) and uncheck \"Prefer 32 bit\" in the \"Build\" tab. Once you configure your app, you should run it. It will give you an output similar to this: 13672 ConsoleApp1.RandomSort ArraySort True True True True 7 C:\\Users\\adsitnik\\AppData\\Local\\Temp\\tmpDCB9.tmp.xml Now you go to BenchmarkDotNet solution, select desired Disassembler project in the Solution Explorer and Set it as Startup project. After this you go to the project's properties and in the Debug tab copy-paste the arguments for the disassembler. Now when you start debugging, your IDE will spawn new process of the disassembler with the right arguments to attach to the desired exe. You should be able to debug it like any othe app. Please keep in mind that you should always use the disassembler for the correct processor architecture. If you fail to debug it, you are most probably using the wrong one."
  },
  "articles/contributing/development.html": {
    "href": "articles/contributing/development.html",
    "title": "Development | BenchmarkDotNet",
    "keywords": "Development When you want to add some dependency then you just use the \"Add reference\" option avaiable in Visual Studio. However, sometimes it might be not enough. If it supports all frameworks Just add it to the top level of csproj. <ItemGroup> <ProjectReference Include=\"..\\..\\src\\BenchmarkDotNet\\BenchmarkDotNet.csproj\" /> </ItemGroup> If the package/project is not available for all target frameworks Specify a conditional dependency: <ItemGroup Condition=\" '$(TargetFramework)' == 'net46' \"> <ProjectReference Include=\"..\\..\\src\\BenchmarkDotNet.Diagnostics.Windows\\BenchmarkDotNet.Diagnostics.Windows.csproj\" /> </ItemGroup> Once you add it as dependency to specific framework, you need to use ugly #if #endif to exclude it for other compilation targets. We define #CLASSIC, #CORE. In other OSS projects you can meet more complex names like #NET40, #NET451, #DNXCORE50 or #NETCORE. #if CLASSIC using Microsoft.Build.Framework; using Microsoft.Build.Utilities; namespace BenchmarkDotNet.Loggers { internal class MsBuildConsoleLogger : Logger { private ILogger Logger { get; set; } public MsBuildConsoleLogger(ILogger logger) { Logger = logger; } public override void Initialize(IEventSource eventSource) { // By default, just show errors not warnings if (eventSource != null) eventSource.ErrorRaised += OnEventSourceErrorRaised; } private void OnEventSourceErrorRaised(object sender, BuildErrorEventArgs e) => Logger.WriteLineError(\"// {0}({1},{2}): error {3}: {4}\", e.File, e.LineNumber, e.ColumnNumber, e.Code, e.Message); } } #endif"
  },
  "articles/contributing/debugging.html": {
    "href": "articles/contributing/debugging.html",
    "title": "Debugging | BenchmarkDotNet",
    "keywords": "Debugging There should be two debug profiles available in VS drop down However due to VS 2017 RC4 bug it seems that it's impossible to choose as of 2/19/2017. If you want to change it then please edit the project file (.csproj) and set your order - the first framework moniker is always used. <TargetFrameworks>netcoreapp1.1;net46</TargetFrameworks>"
  },
  "articles/features/environment-variables.html": {
    "href": "articles/features/environment-variables.html",
    "title": "Environment Variables | BenchmarkDotNet",
    "keywords": "Environment Variables You can configure custom environment variables for the process that is running your benchmarks. One reason for doing this might be checking out how different runtime knobs affect the performance of Core CLR. Warning: This feature does not work for .NET Core 1.1 ( ProcessStartInfo.EnvironmentVariables is available for .NET Core 2.0+) Sample configuration public class ConfigWithCustomEnvVars : ManualConfig { public ConfigWithCustomEnvVars() { Add(Job.Core.WithId(\"Inlining enabled\")); Add(Job.Core.With( new[] { new EnvironmentVariable(\"COMPlus_JitNoInline\", \"1\") }) .WithId(\"Inlining disabled\")); } }"
  },
  "articles/features/customizing-mono.html": {
    "href": "articles/features/customizing-mono.html",
    "title": "Customizing Mono | BenchmarkDotNet",
    "keywords": "Customizing Mono Custom Mono Path(s) BenchmarkDotNet allows you to compare different runtimes, including Mono. If you apply [MonoJob] attribute to your class we use your default mono runtime. If you want to compare different versions of Mono you need to provide use the custom paths. You can do this today by using the overloaded ctor of MonoJob attribute or by specifying the runtime in a fluent way. Sample configuration [ClrJob, CoreJob] [MonoJob(\"Mono 4.8.0\", @\"C:\\Program Files\\Mono\\bin\\mono.exe\")] [MonoJob(\"Mono 4.6.2\", @\"C:\\Program Files (x86)\\Mono\\bin\\mono.exe\")] public class Algo_Md5VsSha256 { /* benchmarks removed for brevity */ } private IConfig CreateConfig() { return ManualConfig.CreateEmpty() .With(Job.ShortRun.With(new MonoRuntime(\"Mono 4.8.0\", @\"C:\\Program Files\\Mono\\bin\\mono.exe\")) .With(Job.ShortRun.With(new MonoRuntime(\"Mono 4.6.2\", @\"C:\\Program Files (x86)\\Mono\\bin\\mono.exe\")); } Sample results: // ***** BenchmarkRunner: Start ***** // Found benchmarks: // Algo_Md5VsSha256.Md5: Clr(Runtime=Clr) // Algo_Md5VsSha256.Sha256: Clr(Runtime=Clr) // Algo_Md5VsSha256.Md5: Core(Runtime=Core) // Algo_Md5VsSha256.Sha256: Core(Runtime=Core) // Algo_Md5VsSha256.Md5: Mono 4.6.2(Runtime=Mono 4.6.2) // Algo_Md5VsSha256.Sha256: Mono 4.6.2(Runtime=Mono 4.6.2) // Algo_Md5VsSha256.Md5: Mono 4.8.0(Runtime=Mono 4.8.0) // Algo_Md5VsSha256.Sha256: Mono 4.8.0(Runtime=Mono 4.8.0) BenchmarkDotNet=v0.10.2.0-develop, OS=Microsoft Windows 10.0.14393 Processor=Intel(R) Core(TM) i7-6600U CPU 2.60GHz, ProcessorCount=4 Frequency=2742190 Hz, Resolution=364.6720 ns, Timer=TSC dotnet cli version=1.0.0-rc4-004771 [Host] : .NET Core 4.6.24628.01, 64bit RyuJIT Clr : Clr 4.0.30319.42000, 64bit RyuJIT-v4.6.1586.0 Core : .NET Core 4.6.24628.01, 64bit RyuJIT Mono 4.6.2 : Mono 4.6.2 (Visual Studio built mono), 32bit Mono 4.8.0 : Mono 4.8.0 (Visual Studio built mono), 64bit Method Job Runtime Mean StdDev Median Scaled Scaled-StdDev Allocated Md5 Clr Clr 23.2459 us 0.9337 us 23.3425 us 1.00 0.00 112 B Sha256 Clr Clr 111.8421 us 2.4760 us 110.6653 us 4.82 0.21 188 B Md5 Core Core 21.4333 us 0.5074 us 21.1727 us 1.00 0.00 80 B Sha256 Core Core 50.1553 us 1.2729 us 49.7332 us 2.34 0.08 114 B Md5 Mono 4.6.2 Mono 4.6.2 45.1584 us 1.0023 us 45.5757 us 1.00 0.00 N/A Sha256 Mono 4.6.2 Mono 4.6.2 168.4400 us 3.7425 us 170.4372 us 3.73 0.11 N/A Md5 Mono 4.8.0 Mono 4.8.0 40.4432 us 0.9094 us 40.2218 us 1.00 0.00 N/A Sha256 Mono 4.8.0 Mono 4.8.0 155.5073 us 12.9351 us 151.4520 us 3.85 0.33 N/A Mono Options Mono supports many custom options: mono [options] program [program-options] And so does the BenchmarkDotNet. You can configure the options by using MonoArgument . Sample configuration [Config(typeof(ConfigWithCustomArguments))] public class IntroCustomMonoArguments { public class ConfigWithCustomArguments : ManualConfig { public ConfigWithCustomArguments() { // --optimize=MODE , -O=mode // MODE is a comma separated list of optimizations. They also allow // optimizations to be turned off by prefixing the optimization name with a minus sign. Add(Job.Mono.With(new[] { new MonoArgument(\"--optimize=inline\") }).WithId(\"Inlining enabled\")); Add(Job.Mono.With(new[] { new MonoArgument(\"--optimize=-inline\") }).WithId(\"Inlining disabled\")); } } [Benchmark] public void Sample() { ShouldGetInlined(); ShouldGetInlined(); ShouldGetInlined(); ShouldGetInlined(); ShouldGetInlined(); ShouldGetInlined(); ShouldGetInlined(); ShouldGetInlined(); ShouldGetInlined(); } void ShouldGetInlined() { } } Sample results BenchmarkDotNet=v0.10.9.20170903-develop, OS=Windows 10 Redstone 1 (10.0.14393) Processor=Intel Core i7-6600U CPU 2.60GHz (Skylake), ProcessorCount=4 Frequency=2742190 Hz, Resolution=364.6720 ns, Timer=TSC [Host] : .NET Framework 4.7 (CLR 4.0.30319.42000), 64bit RyuJIT-v4.7.2101.1 Inlining disabled : Mono 5.0.1 (Visual Studio), 32bit Inlining enabled : Mono 5.0.1 (Visual Studio), 32bit Runtime=Mono Method Job Arguments Mean Error StdDev Sample Inlining disabled --optimize=-inline 19.4252 ns 0.4406 ns 0.4525 ns Sample Inlining enabled --optimize=inline 0.0000 ns 0.0000 ns 0.0000 ns LLVM To control the --llvm and --no-llvm options you need to configure Jit property. By default, LLVM is disabled ( --no-llvm ). To enable LLVM ( --llvm ) you just call Job.Default.With(Jit.Llvm)"
  },
  "articles/features/baseline.html": {
    "href": "articles/features/baseline.html",
    "title": "Baseline | BenchmarkDotNet",
    "keywords": "Baseline In order to scale your results, you can mark a benchmark method or a job as a baseline. Let's learn this feature by examples. Example 1: Methods You can mark a method as a baseline with the help of [Benchmark(Baseline = true)] . public class Sleeps { [Benchmark] public void Time50() => Thread.Sleep(50); [Benchmark(Baseline = true)] public void Time100() => Thread.Sleep(100); [Benchmark] public void Time150() => Thread.Sleep(150); } As a result, you will have additional Scaled column in the summary table: BenchmarkDotNet=v0.10.12, OS=Windows 10 Redstone 3 [1709, Fall Creators Update] (10.0.16299.192) Processor=Intel Core i7-6700HQ CPU 2.60GHz (Skylake), ProcessorCount=8 Frequency=2531249 Hz, Resolution=395.0619 ns, Timer=TSC .NET Core SDK=2.0.3 [Host] : .NET Core 2.0.3 (Framework 4.6.25815.02), 64bit RyuJIT DefaultJob : .NET Core 2.0.3 (Framework 4.6.25815.02), 64bit RyuJIT Method Mean Error StdDev Scaled Time50 50.46 ms 0.0779 ms 0.0729 ms 0.50 Time100 100.39 ms 0.0762 ms 0.0713 ms 1.00 Time150 150.48 ms 0.0986 ms 0.0922 ms 1.50 Example 2: Methods with categories The only way to have several baselines in the same class is to separate them by categories and mark the class with [GroupBenchmarksBy(BenchmarkLogicalGroupRule.ByCategory)] . [GroupBenchmarksBy(BenchmarkLogicalGroupRule.ByCategory)] [CategoriesColumn] public class Sleeps { [BenchmarkCategory(\"Fast\"), Benchmark(Baseline = true)] public void Time50() => Thread.Sleep(50); [BenchmarkCategory(\"Fast\"), Benchmark] public void Time100() => Thread.Sleep(100); [BenchmarkCategory(\"Slow\"), Benchmark(Baseline = true)] public void Time550() => Thread.Sleep(550); [BenchmarkCategory(\"Slow\"), Benchmark] public void Time600() => Thread.Sleep(600); } BenchmarkDotNet=v0.10.12, OS=Windows 10 Redstone 3 [1709, Fall Creators Update] (10.0.16299.192) Processor=Intel Core i7-6700HQ CPU 2.60GHz (Skylake), ProcessorCount=8 Frequency=2531249 Hz, Resolution=395.0619 ns, Timer=TSC .NET Core SDK=2.0.3 [Host] : .NET Core 2.0.3 (Framework 4.6.25815.02), 64bit RyuJIT DefaultJob : .NET Core 2.0.3 (Framework 4.6.25815.02), 64bit RyuJIT Method Categories Mean Error StdDev Scaled Time50 Fast 50.46 ms 0.0745 ms 0.0697 ms 1.00 Time100 Fast 100.47 ms 0.0955 ms 0.0893 ms 1.99 Time550 Slow 550.48 ms 0.0525 ms 0.0492 ms 1.00 Time600 Slow 600.45 ms 0.0396 ms 0.0331 ms 1.09 Example 3: Jobs If you want to compare several runtime configuration, you can mark one of your jobs with isBaseline = true . [ClrJob(isBaseline: true)] [MonoJob] [CoreJob] public class RuntimeCompetition { [Benchmark] public int SplitJoin() => string.Join(\",\", new string[1000]).Split(',').Length; } BenchmarkDotNet=v0.10.12, OS=Windows 10 Redstone 3 [1709, Fall Creators Update] (10.0.16299.192) Processor=Intel Core i7-6700HQ CPU 2.60GHz (Skylake), ProcessorCount=8 Frequency=2531249 Hz, Resolution=395.0619 ns, Timer=TSC .NET Core SDK=2.0.3 [Host] : .NET Core 2.0.3 (Framework 4.6.25815.02), 64bit RyuJIT Job-MXFYPZ : .NET Framework 4.7 (CLR 4.0.30319.42000), 64bit RyuJIT-v4.7.2600.0 Core : .NET Core 2.0.3 (Framework 4.6.25815.02), 64bit RyuJIT Mono : Mono 5.4.0 (Visual Studio), 64bit Method | Runtime | Mean | Error | StdDev | Scaled | ScaledSD | ---------- |-------- |---------:|----------:|----------:|-------:|---------:| SplitJoin | Clr | 19.42 us | 0.2447 us | 0.1910 us | 1.00 | 0.00 | SplitJoin | Core | 13.00 us | 0.2183 us | 0.1935 us | 0.67 | 0.01 | SplitJoin | Mono | 39.14 us | 0.7763 us | 1.3596 us | 2.02 | 0.07 |"
  },
  "articles/configs/toolchains.html": {
    "href": "articles/configs/toolchains.html",
    "title": "Toolchains | BenchmarkDotNet",
    "keywords": "Toolchains In BenchmarkDotNet we generate, build and execute new console app per every benchmark. A toolchain contains generator, builder, and executor. When you run your benchmarks without specifying the toolchain in an explicit way, we use the default one. It works OOTB, you don't need to worry about anything. We use Roslyn for classic .NET and Mono, and dotnet cli for .NET Core and CoreRT. Multiple frameworks support You can target multiple frameworks with single, modern csproj file: <TargetFrameworks>netcoreapp2.0;net462</TargetFrameworks> BenchmarkDotNet allows you to take full advantage of that. With single config, we can execute the benchmarks for all the frameworks that you have listed in your csproj file. If you specify Runtime in explicit way, we just choose the right toolchain for you. [ClrJob, MonoJob, CoreJob, CoreRtJob] public class Algo_Md5VsSha256 { // the benchmarks are going to be executed for classic .NET, Mono (default path), .NET Core and CoreRT (latest version) } TFM At some point of time we need to choose the target framework moniker (TFM). When you are running your app with benchmark as .NET Core app, we just check the version of the System.Runtime.dll which allows us to decide which version of .NET Core you are using. But when you are running your project as classic .NET (.NET 4.6.2 for example), we don't know which TFM to choose for your .NET Core Runtime, so we use the default one - netcoreapp2.0 . If the default netcoreapp2.0 is not OK for you, you must configure the toolchains in explicit way: public class MultipleRuntimes : ManualConfig { public MultipleRuntimes() { Add(Job.Default.With(CsProjCoreToolchain.NetCoreApp21)); // .NET Core 2.1 Add(Job.Default.With(CsProjClassicNetToolchain.Net462)); // NET 4.6.2 } } [Config(typeof(MultipleRuntimes))] public class TypeWithBenchmarks { } After doing this, you can run your benchmarks via: dotnet run -c Release -f net462 dotnet run -c Release -f netcoreapp2.0 And they are going to be executed for both runtimes. Custom .NET Core Runtime We can run your benchmarks for custom <RuntimeFrameworkVersion> if you want. All you need to do is to create custom toolchain by calling CsProjCoreToolchain.From method, which accepts NetCoreAppSettings . public class MyConfig : ManualConfig { public MyConfig() { Add(Job.Default.With( CsProjCoreToolchain.From( new NetCoreAppSettings( targetFrameworkMoniker: \"netcoreapp2.1\", runtimeFrameworkVersion: \"2.1.0-preview2-25628-01\", name: \".NET Core 2.1\")))); } } Custom .NET Runtime It's possible to benchmark a private build of .NET Runtime. All you need to do is to define a job with the right version of ClrRuntime . BenchmarkSwitcher .FromAssembly(typeof(Program).Assembly) .Run(args, DefaultConfig.Instance.With( Job.ShortRun.With(new ClrRuntime(version: \"4.0\")))); This sends the provided version as a COMPLUS_Version env var to the benchmarked process. Custom dotnet cli path We internally use dotnet cli to build and run .NET Core executables. Sometimes it might be mandatory to use non-default dotnet cli path. An example scenario could be a comparison of RyuJit 32bit vs 64 bit. It required due this limitation of dotnet cli public class CustomPathsConfig : ManualConfig { public CustomPathsConfig() { var dotnetCli32bit = NetCoreAppSettings .NetCoreApp20 .WithCustomDotNetCliPath(@\"C:\\Program Files (x86)\\dotnet\\dotnet.exe\", \"32 bit cli\"); var dotnetCli64bit = NetCoreAppSettings .NetCoreApp20 .WithCustomDotNetCliPath(@\"C:\\Program Files\\dotnet\\dotnet.exe\", \"64 bit cli\"); Add(Job.RyuJitX86.With(CsProjCoreToolchain.From(dotnetCli32bit)).WithId(\"32 bit cli\")); Add(Job.RyuJitX64.With(CsProjCoreToolchain.From(dotnetCli64bit)).WithId(\"64 bit cli\")); } } BenchmarkDotNet=v0.10.9.20170910-develop, OS=Windows 10 Redstone 1 (10.0.14393) Processor=Intel Core i7-6600U CPU 2.60GHz (Skylake), ProcessorCount=4 Frequency=2742185 Hz, Resolution=364.6727 ns, Timer=TSC .NET Core SDK=2.1.0-preview1-007074 [Host] : .NET Core 2.0.0 (Framework 4.6.00001.0), 64bit RyuJIT 32 bit cli : .NET Core 2.0.0 (Framework 4.6.00001.0), 32bit RyuJIT 64 bit cli : .NET Core 2.0.0 (Framework 4.6.00001.0), 64bit RyuJIT Jit=RyuJit Custom CoreCLR and CoreFX BenchmarkDotNet allows the users to run their benchmarks against ANY CoreCLR and CoreFX builds. You can compare your local build vs MyGet feed or Debug vs Release or one version vs another. To avoid problems described here a temporary folder is used when restoring packages for local builds. This is why it takes 20-30s in total to build the benchmarks. Sample config: public class LocalCoreClrConfig : ManualConfig { public LocalCoreClrConfig() { Add(Job.ShortRun.With( CustomCoreClrToolchain.CreateBuilder() .DisplayName(\"local builds\") .UseCoreClrLocalBuild(\"2.1.0-preview2-26313-0\", @\"C:\\Projects\\forks\\coreclr\\bin\\Product\\Windows_NT.x64.Release\\.nuget\\pkg\", @\"C:\\Projects\\coreclr\\packages\") .UseCoreFxLocalBuild(\"4.5.0-preview2-26313-0\", @\"C:\\Projects\\forks\\corefx\\bin\\packages\\Release\") .ToToolchain())); Add(Job.ShortRun.With( CustomCoreClrToolchain.CreateBuilder() .DisplayName(\"local coreclr myget corefx\") .UseCoreClrLocalBuild(\"2.1.0-preview2-26313-0\", @\"C:\\Projects\\forks\\coreclr\\bin\\Product\\Windows_NT.x64.Release\\.nuget\\pkg\", @\"C:\\Projects\\coreclr\\packages\") .UseCoreFxNuGet(\"4.5.0-preview2-26215-01\") .ToToolchain())); Add(Job.ShortRun.With( CustomCoreClrToolchain.CreateBuilder() .DisplayName(\"myget coreclr local corefx\") .UseCoreClrNuGet(\"2.1.0-preview2-26214-07\") .UseCoreFxLocalBuild(\"4.5.0-preview2-26313-0\", @\"C:\\Projects\\forks\\corefx\\bin\\packages\\Release\") .ToToolchain())); Add(Job.ShortRun.With( CustomCoreClrToolchain.CreateBuilder() .DisplayName(\"myget builds\") .UseCoreClrNuGet(\"2.1.0-preview2-26214-07\") .UseCoreFxNuGet(\"4.5.0-preview2-26215-01\") .ToToolchain())); Add(DefaultConfig.Instance.GetExporters().ToArray()); Add(DefaultConfig.Instance.GetLoggers().ToArray()); Add(DefaultConfig.Instance.GetColumnProviders().ToArray()); Add(DisassemblyDiagnoser.Create(new DisassemblyDiagnoserConfig(printAsm: true, recursiveDepth: 2))); } } The CustomCoreClrToolchainBuilder offers some extra customization features for our power users: UseCoreClrDefault() tells the toolchain to use the default CoreClr (for given dotnet cli and moniker), emits no direct dependency to NETCore.Runtime.CoreCLR package UseCoreFxDefault() tells the toolchain to use the default CoreFx (for given dotnet cli and moniker), emits no direct dependency to NetCore.App package AdditionalNuGetFeed(string, string) it allows you to define an additional NuGet feed UseNuGetClearTag(bool) emits clear tag in the auto-generated NuGet.config file TargetFrameworkMoniker(string) TFM, netcoreapp2.1 is the default DotNetCli(string) if not provided, the one from PATH will be used RuntimeIdentifier(string) if not provided, portable OS-arch will be used (example: \"win-x64\", \"linux-x86\") RuntimeFrameworkVersion(string) optional, when set it's copied to the generated .csproj file UseTempFolderForRestore(bool) restore to temp folder to keep your CI clean or install same package many times (perhaps with different content but same version number), by default true for local builds To make sure that you are running against the expected version of CoreCLR and CoreFX you just need to check the CoreCLR and CoreFX version numbers in the output: BenchmarkDotNet=v0.10.12.20180215-develop, OS=Windows 10 Redstone 3 [1709, Fall Creators Update] (10.0.16299.192) Intel Core i7-3687U CPU 2.10GHz (Ivy Bridge), 1 CPU, 4 logical cores and 2 physical cores Frequency=2533308 Hz, Resolution=394.7408 ns, Timer=TSC .NET Core SDK=2.1.300-preview2-008162 [Host] : .NET Core 2.0.5 (CoreCLR 4.6.26020.03, CoreFX 4.6.26018.01), 64bit RyuJIT Job-DHYYZE : .NET Core ? (CoreCLR 4.6.26313.0, CoreFX 4.6.26313.0), 64bit RyuJIT Job-VGTPFY : .NET Core ? (CoreCLR 4.6.26313.0, CoreFX 4.6.26215.01), 64bit RyuJIT Job-IYZFNW : .NET Core ? (CoreCLR 4.6.26214.07, CoreFX 4.6.26215.01), 64bit RyuJIT Job-CTQFFQ : .NET Core ? (CoreCLR 4.6.26214.07, CoreFX 4.6.26313.0), 64bit RyuJIT InProcessToolchain InProcessToolchain is our toolchain which does not generate any new executable. It emits IL on the fly and runs it from within the process itself. It can be usefull if want to run the benchmarks very fast or if you want to run them for framework which we don't support. An example could be a local build of CoreCLR. [Config(typeof(Config))] public class IntroInProcess { private class Config : ManualConfig { public Config() { Add(Job.MediumRun .WithLaunchCount(1) .WithId(\"OutOfProc\")); Add(Job.MediumRun .WithLaunchCount(1) .With(InProcessToolchain.Instance) .WithId(\"InProcess\")); } } [Benchmark(Description = \"new byte[10kB]\")] public byte[] Allocate() => new byte[10000]; } or just: [InProcessAttribute] public class TypeWithBenchmarks { } CoreRT BenchmarkDotNet supports CoreRT ! However, you might want to know how it works to get a better understanding of the results that you get. CoreRT is a flavor of .NET Core. Which means that: you have to target .NET Core to be able to build CoreRT benchmarks ( <TargetFramework>netcoreapp2.1</TargetFramework> in the .csproj file) you have to specify the CoreRT runtime in an explicit way, either by using [CoreRtJob] attribute or by using the fluent Job config API Job.ShortRun.With(Runtime.CoreRT) to run CoreRT benchmark you run the app as a .NET Core/.NET process ( dotnet run -c Release -f netcoreapp2.1 ) and BenchmarkDotNet does all the CoreRT compilation for you. If you want to check what files are generated you need to apply [KeepBenchmarkFiles] attribute to the class which defines benchmarks. By default BenchmarkDotNet uses the latest version of Microsoft.DotNet.ILCompiler to build the CoreRT benchmark according to this instructions . var config = DefaultConfig.Instance .With(Job.Default.With(Runtime.CoreRT)); // uses the latest CoreRT version BenchmarkSwitcher .FromAssembly(typeof(Program).Assembly) .Run(args, config); [CoreRtJob] // uses the latest CoreRT version public class TheTypeWithBenchmarks { [Benchmark] // the benchmarks go here } Note : BenchmarkDotNet is going to run dotnet restore on the auto-generated project. The first time it does so, it's going to take a LOT of time to download all the dependencies (few minutes). Just give it some time and don't press Ctrl+C too fast ;) If you want to benchmark some particular version of CoreRT you have to specify it in an explicit way: var config = DefaultConfig.Instance .With(Job.ShortRun .With(Runtime.CoreRT) .With(CoreRtToolchain.CreateBuilder() .UseCoreRtNuGet(microsoftDotNetILCompilerVersion: \"1.0.0-alpha-26412-02\") // the version goes here .DisplayName(\"CoreRT NuGet\") .ToToolchain())); Compiling source to native code using the ILCompiler you built If you are an CoreRT contributor and you want to benchmark your local build of CoreRT you have to provide necessary info (IlcPath): var config = DefaultConfig.Instance .With(Job.ShortRun .With(Runtime.CoreRT) .With(CoreRtToolchain.CreateBuilder() .UseCoreRtLocal(@\"C:\\Projects\\corert\\bin\\Windows_NT.x64.Release\") // IlcPath .DisplayName(\"Core RT RyuJit\") .ToToolchain())); BenchmarkDotNet is going to follow these instructrions to get it working for you. Using CPP Code Generator This approach uses transpiler to convert IL to C++, and then uses platform specific C++ compiler and linker for compiling/linking the application. The transpiler is a lot less mature than the RyuJIT path. If you came here to give CoreRT a try on your .NET Core program, use the RyuJIT option above. If you want to test CPP Code Generator you have to use UseCppCodeGenerator method: var config = DefaultConfig.Instance .With(Job.CoreRT.With( CoreRtToolchain.CreateBuilder() .UseCoreRtLocal(@\"C:\\Projects\\corert\\bin\\Windows_NT.x64.Release\") // IlcPath .UseCppCodeGenerator() // ENABLE IT .DisplayName(\"CPP\") .ToToolchain())); Note : You might get some The method or operation is not implemented. errors as of today if the code that you are trying to benchmark is using some features that are not implemented by CoreRT/transpiler yet..."
  },
  "articles/configs/order-provider.html": {
    "href": "articles/configs/order-provider.html",
    "title": "OrderProvider | BenchmarkDotNet",
    "keywords": "OrderProvider OrderProviders allows customizing the order of benchmark results in the summary table. A usage example: [Config(typeof(Config))] [RankColumn] public class IntroOrderManual { private class Config : ManualConfig { public Config() { Set(new FastestToSlowestOrderProvider()); } private class FastestToSlowestOrderProvider : IOrderProvider { public IEnumerable<Benchmark> GetExecutionOrder(Benchmark[] benchmarks) => from benchmark in benchmarks orderby benchmark.Parameters[\"X\"] descending, benchmark.Target.MethodDisplayInfo select benchmark; public IEnumerable<Benchmark> GetSummaryOrder(Benchmark[] benchmarks, Summary summary) => from benchmark in benchmarks orderby summary[benchmark].ResultStatistics.Mean select benchmark; public string GetGroupKey(Benchmark benchmark, Summary summary) => null; } } [Params(1, 2, 3)] public int X { get; set; } [Benchmark] public void Fast() => Thread.Sleep(X * 50); [Benchmark] public void Slow() => Thread.Sleep(X * 100); }"
  },
  "articles/configs/loggers.html": {
    "href": "articles/configs/loggers.html",
    "title": "Loggers | BenchmarkDotNet",
    "keywords": "Loggers A logger allows you to log results of your benchmark. By default, you can see log on console and in a file ( <BenchmarkName>.log )."
  },
  "articles/configs/analyzers.html": {
    "href": "articles/configs/analyzers.html",
    "title": "Analysers | BenchmarkDotNet",
    "keywords": "Analysers An analyser can analyse summary of your benchmarks and produce some useful warnings. For example, EnvironmentAnalyser warns you, if you build your application in the DEBUG mode or run it with an attached debugger."
  },
  "articles/team.html": {
    "href": "articles/team.html",
    "title": "Team | BenchmarkDotNet",
    "keywords": "Team This project is supported by the .NET Foundation . Maintainers: Andrey Akinshin (Project Lead), Adam Sitnik Contributors: Jon Skeet , Matt Warren , Sasha Goldshtein , and others"
  },
  "articles/license.html": {
    "href": "articles/license.html",
    "title": "The MIT License | BenchmarkDotNet",
    "keywords": "The MIT License Copyright (c) 2013–2017 .NET Foundation and contributors Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "articles/faq.html": {
    "href": "articles/faq.html",
    "title": "FAQ (Frequently asked questions) | BenchmarkDotNet",
    "keywords": "FAQ (Frequently asked questions) Q Why can't I install BenchmarkDotNet in Visual Studio 2010/2012/2013? A BenchmarkDotNet requires NuGet 3.x+ and can't be installed in old versions of Visual Studio which use NuGet 2.x. Consider to use Visual Studio 2015/2017 or Rider . See also: BenchmarkDotNet#237 , roslyn#12780 . Q Why can't I install BenchmarkDotNet in a new .NET Core Console App in Visual Studio 2017? A BenchmarkDotNet supports only netcoreapp2.0+. Some old Visual Studio 2017 can create a new application which targets netcoreapp1.0. You should upgrade it up to 2.0. If you want to target netcoreapp1.0 in your main assembly, it's recommended to create a separated project for benchmarks. Q I created a new .NET Core Console App in Visual Studio 2017. Now I want to run my code on CoreCLR, full .NET Framework, and Mono. How can I do it? A Use the following lines in your .csproj file: <TargetFrameworks>netcoreapp2.0;net46</TargetFrameworks> <PlatformTarget>AnyCPU</PlatformTarget> And mark your benchmark class with the following attributes: [CoreJob, ClrJob, MonoJob] Q My source code targets old versions of .NET Framework or .NET Core, but BenchmarkDotNet requires net46 and netcoreapp2.0 . How can I run benchmarks in this case? A It's a good practice to introduce an additional console application (e.g. MyAwesomeLibrary.Benchmarks ) which will depend on your code and BenchmarkDotNet. Due to the fact that users usually run benchmarks in a develop environment and don't distribute benchmarks for users, it shouldn't be a problem. Q I wrote a small benchmark, but BenchmarkDotNet requires a lot of time for time measurements. How can I reduce this time? A By default, BenchmarkDotNet automatically chooses a number of iterations which allows achieving the best precision. If you don't need such level of precision and just want to have a quick way to get approximated results, you can specify all parameters manually. For example, you can use the SimpleJob or ShortRunJob attributes: [SimpleJob(launchCount: 1, warmupCount: 3, targetCount: 5, invocationCount:100, id: \"QuickJob\")] [ShortRunJob] Q My benchmark unexpectedly stopped and I saw the information about error code. What can I do? A BenchmarkDotNet generates, builds and runs new process for every benchmark. This behavior is sometimes interpreted by anti-virus as dangerous, and the process is killed. Use EnvironmentAnalyser to detect antivirus software and configure your benchmark to use InProcessToolchain . Q Can I run benchmark on the virtual machine? A Yes, of course. However, it can affect results because of the shared, physical machine, virtualization process and incorrect Stopwatch.Frequency . If you are unsure whether an application is running on virtual environment, use EnvironmentAnalyser to detect VM hypervisor. Q I have failed to run my benchmarks, I am getting following errors about non-optimized dll. What can I do? Assembly BenchmarkDotNet.Samples which defines benchmarks references non-optimized BenchmarkDotNet If you own this dependency, please, build it in RELEASE. If you don't, you can create custom config with DontFailOnError to disable our custom policy and allow this b Assembly BenchmarkDotNet.Samples which defines benchmarks is non-optimized Benchmark was built without optimization enabled (most probably a DEBUG configuration). Please, build it in RELEASE. A You should always run your benchmarks in RELEASE mode with optimizations enabled (default setting for RELEASE). However if you have to use non-optimized 3rd party assembly you have to create custom config to disable our default policy. public class AllowNonOptimized : ManualConfig { public AllowNonOptimized() { Add(JitOptimizationsValidator.DontFailOnError); // ALLOW NON-OPTIMIZED DLLS Add(DefaultConfig.Instance.GetLoggers().ToArray()); // manual config has no loggers by default Add(DefaultConfig.Instance.GetExporters().ToArray()); // manual config has no exporters by default Add(DefaultConfig.Instance.GetColumnProviders().ToArray()); // manual config has no columns by default } } Q I have failed to run my benchmarks from LINQPad. How can I fix this problem? Assembly LINQPadQuery which defines benchmarks references non-optimized LINQPad Assembly LINQPadQuery which defines benchmarks is non-optimized Benchmark was built without optimization enabled (most probably a DEBUG configuration). Please, build it in RELEASE. A You need to make sure that you are using AnyCPU 5.22.05+ build of LINQPad with optimizations enabled. To enable the optimizations you need to go to Preferences -> Query and select compile with /optimize+ Q I'm trying to use RPlotExporter but there are no any images in the results folder A Try to specify R_LIBS_USER (e.g. R_LIBS_USER=/usr/local/lib/R/ on Linux/macOS, see also: #692 ) Q My benchmark failed with OutOfMemoryException. How can I fix this problem? A BenchmarkDotNet continues to run additional iterations until desired accuracy level is achieved. It's possible only if the benchmark method doesn't have any side-effects. If your benchmark allocates memory and keeps it alive, you are creating a memory leak. You should redesign your benchmark and remove the side-effects. You can use OperationsPerInvoke , IterationSetup and IterationCleanup to do that. An example: public class OOM { private StringBuilder buffer = new StringBuilder(); [Benchmark] public void HasSideEffects() { buffer.Append('a'); // This method is growing the buffer to infinity because it's executed millions of times } [Benchmark(OperationsPerInvoke = 16)] public void HasNoSideEffects() { buffer.Clear(); for (int i = 0; i < 1024; i++) buffer.Append('a'); } }"
  },
  "articles/configs/jobs.html": {
    "href": "articles/configs/jobs.html",
    "title": "Jobs | BenchmarkDotNet",
    "keywords": "Jobs Basically, a job describes how to run your benchmark. Practically, it's a set of characteristics which can be specified. You can specify one or several jobs for your benchmarks. Characteristics There are several categories of characteristics which you can specify. Let's consider each category in detail. Id It's a single string characteristic. It allows to name your job. This name will be used in logs and a part of a folder name with generated files for this job. Id doesn't affect benchmark results, but it can be useful for diagnostics. If you don't specify Id , random value will be chosen based on other characteristics Env Env specifies an environment of the job. You can specify the following characteristics: Platform : x86 or x64 Runtime : Clr : Full .NET Framework (available only on Windows) Core : CoreCLR (x-plat) Mono : Mono (x-plat) Jit : LegacyJit (available only for Runtime.Clr ) RyuJit (available only for Runtime.Clr and Runtime.Core ) Llvm (available only for Runtime.Mono ) Affinity : Affinity of a benchmark process GcMode : settings of Garbage Collector Server : true (Server mode) or false (Workstation mode) Concurrent : true (Concurrent mode) or false (NonConcurrent mode) CpuGroups : Specifies whether garbage collection supports multiple CPU groups Force : Specifies whether the BenchmarkDotNet's benchmark runner forces full garbage collection after each benchmark invocation AllowVeryLargeObjects : On 64-bit platforms, enables arrays that are greater than 2 gigabytes (GB) in total size BenchmarkDotNet will use host process environment characteristics for non specified values. Run In this category, you can specifiy how to benchmark each method. RunStrategy : Throughput : default strategy which allows to get good precision level ColdStart : should be used only for measuring cold start of the application or testing purpose Monitoring : A mode without overhead evaluating, with several target iterations LaunchCount : how many times we should launch process with target benchmark WarmupCount : how many warmup iterations should be performed TargetCount : how many target iterations should be performed IterationTime : desired time of a single iteration UnrollFactor : how many times the benchmark method will be invoked per one iteration of a generated loop InvocationCount : count of invocation in a single iteration (if specified, IterationTime will be ignored), must be a multiple of UnrollFactor Usually, you shouldn't specify such characteristics like LaunchCount , WarmupCount , TargetCount , or IterationTime because BenchmarkDotNet has a smart algorithm to choose these values automatically based on received measurements. You can specify it for testing purposes or when you are damn sure that you know the right characteristics for your benchmark (when you set TargetCount = 20 you should understand why 20 is a good value for your case). Accuracy If you want to change the accuracy level, you should use the following characteristics instead of manually adjusting values of WarmupCount , TargetCount , and so on. MaxRelativeError , MaxAbsoluteError : Maximum acceptable error for a benchmark (by default, BenchmarkDotNet continue iterations until the actual error is less than the specified error). In these two characteristics , the error means half of 99.9% confidence interval. MaxAbsoluteError is an absolute TimeInterval ; doesn't have a default value. MaxRelativeError defines max acceptable ( (<half of CI 99.9%>) / Mean ). MinIterationTime : Minimum time of a single iteration. Unlike Run.IterationTime , this characteristic specifies only the lower limit. In case of need, BenchmarkDotNet can increase this value. MinInvokeCount : Minimum about of target method invocation. Default value if 4 but you can decrease this value for cases when single invocations takes a lot of time. EvaluateOverhead : if you benchmark method takes nanoseconds, BenchmarkDotNet overhead can significantly affect measurements. If this characterics is enable, the overhead will be evaluated and subtracted from the result measurements. Default value is true . WithOutlierMode : sometimes you could have outliers in your measurements. Usually these are unexpected outliers which arose because of other processes activities. By default ( OutlierMode.OnlyUpper ), all upper outliers (which is larger than Q3) will be removed from the result measurements. However, some of benchmarks have expected outliers. In these situation, you expect that some of invocation can produce outliers measurements (e.g. in case of network activities, cache operations, and so on). If you want to see result statistics with these outliers, you should use OutlierMode.None . If you can also choose OutlierMode.OnlyLower (outliers which are smaller than Q1 will be removed) or OutlierMode.All (all outliers will be removed). See also: OutlierMode AnalyzeLaunchVariance : this characteristic makes sense only if Run.LaunchCount is default. If this mode is enabled and, BenchmarkDotNet will try to perform several launches and detect if there is a veriance between launches. If this mode is disable, only one launch will be performed. Infrastructure Usually, you shouldn't specify any characteristics from this section, it can be used for advanced cases only. Toolchain : a toolchain which generate source code for target benchmark methods, build it, and execute it. BenchmarkDotNet has own toolchains for CoreCLR projects and classic projects (the last one is RoslynToolchain , you can find it in the BenchmarkDotNet.Toolchains.Roslyn NuGet package). If you want, you can define own toolchain. Clock : a clock which will be used for measurements. BenchmarkDotNet automatically choose the best available clock source, but you can specify own clock source. EngineFactory : a provider for measurement engine which performs all the measurement magic. If you don't trust BenchmarkDotNet, you can define own engine and implement all the measurement stages manually. Usage There are several ways to specify a job. Object style You can create own jobs directly from the source code via a cusom config: [Config(typeof(Config))] public class MyBenchmarks { private class Config : ManualConfig { public Config() { Add( new Job(\"MySuperJob\", RunMode.Dry, EnvMode.RyuJitX64) { Env = { Runtime = Runtime.Core }, Run = { LaunchCount = 5, IterationTime = TimeInterval.Millisecond * 200 }, Accuracy = { MaxStdErrRelative = 0.01 } }); // The same, using the .With() factory methods: Add( Job.Dry .With(Platform.X64) .With(Jit.RyuJit) .With(Runtime.Core) .WithLaunchCount(5) .WithIterationTime(TimeInterval.Millisecond * 200) .WithMaxStdErrRelative(0.01) .WithId(\"MySuperJob\")); // IMPORTANT: Id assignment should be the last call in the chain or the id will be lost. } } // Benchmarks } Basically, it's a good idea to start with predefined values (e.g. EnvMode.RyuJitX64 and RunMode.Dry passed as constructor args) and modify rest of the properties using property setters or with help of object initializer syntax. Note that the job cannot be modified after it's added into config. Trying to set a value on property of the frozen job will throw an InvalidOperationException . Use the Job.Frozen property to determine if the code properties can be altered. If you do want to create a new job based on frozen one (all predefined job values are frozen) you can use the .With() extension method var newJob = Job.Dry.With(Platform.X64); or pass the frozen value as a constructor argument var newJob = new Job(Job.Dry) { Env = { Platform = Platform.X64 } }; or use the .Apply() method on unfrozen job var newJob = new Job() { Env = { Platform = Platform.X64 } }.Apply(Job.Dry); in any case the Id property will not be transfered and you must pass it explicitly (using the .ctor id argument or the .WithId() extension method). Attribute style You can also add new jobs via attributes. Examples: [DryJob] [ClrJob, CoreJob, MonoJob] [LegacyJitX86Job, LegacyJitX64Job, RyuJitX64Job] [SimpleJob(RunStrategy.ColdStart, launchCount: 1, warmupCount: 5, targetCount: 5, id: \"FastAndDirtyJob\")] public class MyBenchmarkClass Note that each of the attributes identifies a separate job, the sample above will result in 8 different jobs, not a single merged job. Custom attributes You can also create your own custom attributes with your favourite set of jobs. Example: [AttributeUsage(AttributeTargets.Class | AttributeTargets.Assembly)] public class MySuperJobAttribute : Attribute, IConfigSource { protected MySuperJobAttribute() { var job = new Job(\"MySuperJob\", RunMode.Core); job.Env.Platform = Platform.X64; Config = ManualConfig.CreateEmpty().With(job); } public IConfig Config { get; } } [MySuperJob] public class MyBenchmarks"
  },
  "index.html": {
    "href": "index.html",
    "title": "Showtime | BenchmarkDotNet",
    "keywords": "BenchmarkDotNet is a powerful .NET library for benchmarking. Source code is available at github.com/dotnet/BenchmarkDotNet Benchmarking is really hard (especially microbenchmarking), you can easily make a mistake during performance measurements. BenchmarkDotNet will protect you from the common pitfalls (even for experienced developers) because it does all the dirty work for you: it generates an isolated project per each benchmark method, does several launches of this project, run multiple iterations of the method (include warm-up), and so on. Usually, you even shouldn't care about a number of iterations because BenchmarkDotNet chooses it automatically to achieve the requested level of precision. It's really easy to design a performance experiment with BenchmarkDotNet. Just mark your method with the [Benchmark] attribute and the benchmark is ready. Want to run your code on .NET Framework, .NET Core, and Mono? No problem: a few more attributes and the corresponded projects will be generated; the results will be presented at the same summary table. In fact, you can compare any environment that you want: you can check performance difference between processor architectures (x86/x64), JIT versions (LegacyJIT/RyuJIT), different sets of GC flags (like Server/Workstation), and so on. You can also introduce one or several parameters and check the performance on different inputs at once. BenchmarkDotNet helps you not only run benchmarks but also analyze the results: it generates reports in different formats and renders nice plots. It calculates many statistics, allows you to run statistical tests, and compares results of different benchmark methods. So it doesn't overload you with data, by default BenchmarkDotNet prints only the really important statistical values depending on your results: it allows you to keep summary small and simple for primitive cases but notify you about an additional important area for complicated cases (of course, you can request any numbers manually via additional attributes). BenchmarkDotNet doesn't just blindly run your code: it tries to help you to conduct a qualitative performance investigation. Showtime It's very easy to start using BenchmarkDotNet. Let's look at an example: [ClrJob(isBaseline: true), CoreJob, MonoJob, CoreRtJob] [RPlotExporter, RankColumn] public class Md5VsSha256 { private SHA256 sha256 = SHA256.Create(); private MD5 md5 = MD5.Create(); private byte[] data; [Params(1000, 10000)] public int N; [GlobalSetup] public void Setup() { data = new byte[N]; new Random(42).NextBytes(data); } [Benchmark] public byte[] Sha256() => sha256.ComputeHash(data); [Benchmark] public byte[] Md5() => md5.ComputeHash(data); } BenchmarkDotNet allows designing a performance experiment in a user-friendly declarative way. At the end of an experiment, it will generate a summary table which contains only important data in a compact and understandable form: BenchmarkDotNet=v0.11.0, OS=Windows 10.0.16299.309 (1709/FallCreatorsUpdate/Redstone3) Intel Xeon CPU E5-1650 v4 3.60GHz, 1 CPU, 12 logical and 6 physical cores Frequency=3507504 Hz, Resolution=285.1030 ns, Timer=TSC .NET Core SDK=2.1.300-preview1-008174 [Host] : .NET Core 2.1.0-preview1-26216-03 (CoreCLR 4.6.26216.04, CoreFX 4.6.26216.02), 64bit RyuJIT Job-HKEEXO : .NET Framework 4.7.1 (CLR 4.0.30319.42000), 64bit RyuJIT-v4.7.2633.0 Core : .NET Core 2.1.0-preview1-26216-03 (CoreCLR 4.6.26216.04, CoreFX 4.6.26216.02), 64bit RyuJIT CoreRT : .NET CoreRT 1.0.26414.01, 64bit AOT Mono : Mono 5.10.0 (Visual Studio), 64bit | Method | Runtime | N | Mean | Error | StdDev | Scaled | Rank | |------- |-------- |------ |-----------:|----------:|----------:|-------:|-----:| | Sha256 | Clr | 1000 | 8.009 us | 0.0370 us | 0.0346 us | 1.00 | 3 | | Sha256 | Core | 1000 | 4.447 us | 0.0117 us | 0.0110 us | 0.56 | 2 | | Sha256 | CoreRT | 1000 | 4.321 us | 0.0139 us | 0.0130 us | 0.54 | 1 | | Sha256 | Mono | 1000 | 14.924 us | 0.0574 us | 0.0479 us | 1.86 | 4 | | | | | | | | | | | Md5 | Clr | 1000 | 3.051 us | 0.0604 us | 0.0742 us | 1.00 | 3 | | Md5 | Core | 1000 | 2.004 us | 0.0058 us | 0.0054 us | 0.66 | 2 | | Md5 | CoreRT | 1000 | 1.892 us | 0.0087 us | 0.0077 us | 0.62 | 1 | | Md5 | Mono | 1000 | 3.878 us | 0.0181 us | 0.0170 us | 1.27 | 4 | | | | | | | | | | | Sha256 | Clr | 10000 | 75.780 us | 1.0445 us | 0.9771 us | 1.00 | 3 | | Sha256 | Core | 10000 | 41.134 us | 0.2185 us | 0.1937 us | 0.54 | 2 | | Sha256 | CoreRT | 10000 | 40.895 us | 0.0804 us | 0.0628 us | 0.54 | 1 | | Sha256 | Mono | 10000 | 141.377 us | 0.5598 us | 0.5236 us | 1.87 | 4 | | | | | | | | | | | Md5 | Clr | 10000 | 18.575 us | 0.0727 us | 0.0644 us | 1.00 | 3 | | Md5 | Core | 10000 | 17.562 us | 0.0436 us | 0.0408 us | 0.95 | 2 | | Md5 | CoreRT | 10000 | 17.447 us | 0.0293 us | 0.0244 us | 0.94 | 1 | | Md5 | Mono | 10000 | 34.500 us | 0.1553 us | 0.1452 us | 1.86 | 4 | In artifacts, you can also find detailed information about each iteration. You can export the data in different formats like (CSV, XML, JSON, and so on) or even generate beautiful plots: Main features BenchmarkDotNet has a lot of awesome features for deep performance investigations: Standard benchmarking routine: generating an isolated project per each benchmark method; auto-selection of iteration amount; warmup; overhead evaluation; and so on Execution control: BenchmarkDotNet tries to choose the best possible way to evaluate performance, but you can also manually control amount of iterations, switch between cold start and warmed state, set the accuracy level, tune GC parameters, change environment variables, and more Statistics: by default, you will see the most important statistics like mean and standard deviation; but you can also manually ask for min/max values, confidence intervals, skewness, kurtosis, quartile, percentiles, or define own metrics Comparing environments: Easy way to compare different environments (x86 vs x64, LegacyJit vs RyuJit, Mono vs .NET Core, and so on) Relative performance: you can easily evaluate difference between different methods of environments Memory diagnostics: the library not only measure performance of your code, but also prints information about memory traffic and amount of GC collections Disassembly diagnostics: you can ask for an assembly listing with the help of single additional attribute Parametrization: performance can be evaluated for different sets of input parameters like in popular unit test frameworks Environment information: when your share performance results, it's very important to share information about your environment; BenchmarkDotNet automatically prints the exact version of your OS and processor; amount of physical CPU, physical cores, and logic cores; hypervisor (if you use it); frequency of the hardware timer; the JIT-compiler version; and more Command-line support: you can manage thousands of benchmark, group them by categories, filter and run them from command line Powerful reporting system: it's possible to export benchmark results to markdown, csv, html, plain text, png plots A few useful links for you: If you want to know more about BenchmarkDotNet features, check out the Overview Page . If you want to use BenchmarkDotNet for the first time, the Getting Started will help you. If you want to ask a quick question or discuss performance topics, use the gitter channel. Supported technologies BenchmarkDotNet supports all kinds of .NET stacks: Supported runtimes: .NET Framework (4.6+), .NET Core (2.0+), Mono, CoreRT Supported languages: C#, F#, Visual Basic Supported OS: Windows, Linux, macOS Our users The library is used by a large number of projects for performance discussions or as a part of the codebase: CoreCLR (.NET Core runtime) CoreFX (.NET Core foundational libraries; see also official benchmarking guide ), Roslyn (C# and Visual Basic compiler) KestrelHttpServer (A cross platform web server for ASP.NET Core) SignalR EntityFrameworkCore F# Orleans Newtonsoft.Json Elasticsearch.Net Dapper Expecto Accord.NET Framework ImageSharp RavenDB NodeTime Jint NServiceBus Serilog Autofac Npgsql It's not the full list. On GitHub, you can find hundreds of issues and commits which involve BenchmarkDotNet. There are tens of thousands of files which contain \"BenchmarkDotNet\". Contributions are welcome! BenchmarkDotNet is already a stable full-featured library which allows performing performance investigation on a professional level. And it continues to evolve! We add new features all the time, but we have too many new cool ideas. Any help will be appreciated. You can develop new features, fix bugs, improve the documentation, or do some other cool stuff. If you want to contribute, check out the Contributing guide and up-for-grabs issues. If you have new ideas or want to complain about bugs, feel free to create a new issue . Let's build the best tool for benchmarking together! Code of Conduct This project has adopted the code of conduct defined by the Contributor Covenant to clarify expected behavior in our community. For more information see the .NET Foundation Code of Conduct . .NET Foundation This project is supported by the .NET Foundation ."
  },
  "api/BenchmarkDotNet.Mathematics.MathHelper.html": {
    "href": "api/BenchmarkDotNet.Mathematics.MathHelper.html",
    "title": "Class MathHelper | BenchmarkDotNet",
    "keywords": "Class MathHelper Inheritance System.Object MathHelper Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Mathematics Assembly : BenchmarkDotNet.dll Syntax public static class MathHelper Methods CalculateMValue(Statistics) Declaration public static double CalculateMValue(Statistics originalStatistics) Parameters Type Name Description Statistics originalStatistics Returns Type Description System.Double Clamp(Int32, Int32, Int32) Declaration public static int Clamp(int value, int min, int max) Parameters Type Name Description System.Int32 value System.Int32 min System.Int32 max Returns Type Description System.Int32 Gauss(Double) ACM Algorithm 209: Gauss Calculates $(1/\\sqrt{2\\pi}) \\int_{-\\infty}^x e^{-u^2 / 2} du$ by means of polynomial approximations due to A. M. Murray of Aberdeen University; See: http://dl.acm.org/citation.cfm?id=367664 Declaration public static double Gauss(double x) Parameters Type Name Description System.Double x -infinity..+infinity Returns Type Description System.Double Area under the Standard Normal Curve from -infinity to x InverseStudent(Double, Double) Declaration public static double InverseStudent(double p, double n) Parameters Type Name Description System.Double p System.Double n Returns Type Description System.Double Student(Double, Double) ACM Algorithm 395: Student's t-distribution Evaluates the two-tail probability P(t|n) that t is exceeded in magnitude for Student's t-distribution with n degrees of freedom. http://dl.acm.org/citation.cfm?id=355599 Declaration public static double Student(double t, double n) Parameters Type Name Description System.Double t t-value System.Double n Degree of freedom, n >= 20 Returns Type Description System.Double 2-tail p-value"
  },
  "api/BenchmarkDotNet.Mathematics.NumeralSystem.html": {
    "href": "api/BenchmarkDotNet.Mathematics.NumeralSystem.html",
    "title": "Enum NumeralSystem | BenchmarkDotNet",
    "keywords": "Enum NumeralSystem Namespace : BenchmarkDotNet.Mathematics Assembly : BenchmarkDotNet.dll Syntax public enum NumeralSystem Fields Name Description Arabic Arabic numerals (1, 2, 3, 4, ...) Roman Roman numerals (I, II, III, IV, ...) Stars Unary numeral system (*, **, ***, ****, ...) Extension Methods CommonExtensions.IsOneOf<NumeralSystem>(NumeralSystem[]) NumeralSystemExtensions.ToPresentation(Int32)"
  },
  "api/BenchmarkDotNet.Mathematics.NumeralSystemExtensions.html": {
    "href": "api/BenchmarkDotNet.Mathematics.NumeralSystemExtensions.html",
    "title": "Class NumeralSystemExtensions | BenchmarkDotNet",
    "keywords": "Class NumeralSystemExtensions Inheritance System.Object NumeralSystemExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Mathematics Assembly : BenchmarkDotNet.dll Syntax public static class NumeralSystemExtensions Methods ToPresentation(NumeralSystem, Int32) Declaration public static string ToPresentation(this NumeralSystem system, int value) Parameters Type Name Description NumeralSystem system System.Int32 value Returns Type Description System.String"
  },
  "api/BenchmarkDotNet.Toolchains.Results.ExecuteResult.html": {
    "href": "api/BenchmarkDotNet.Toolchains.Results.ExecuteResult.html",
    "title": "Class ExecuteResult | BenchmarkDotNet",
    "keywords": "Class ExecuteResult Inheritance System.Object ExecuteResult Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Toolchains.Results Assembly : BenchmarkDotNet.dll Syntax public class ExecuteResult Constructors ExecuteResult(Boolean, Int32, IReadOnlyList<String>, IReadOnlyList<String>) Declaration public ExecuteResult(bool foundExecutable, int exitCode, IReadOnlyList<string> data, IReadOnlyList<string> linesWithExtraOutput) Parameters Type Name Description System.Boolean foundExecutable System.Int32 exitCode System.Collections.Generic.IReadOnlyList < System.String > data System.Collections.Generic.IReadOnlyList < System.String > linesWithExtraOutput Properties Data Declaration public IReadOnlyList<string> Data { get; } Property Value Type Description System.Collections.Generic.IReadOnlyList < System.String > ExitCode Declaration public int ExitCode { get; } Property Value Type Description System.Int32 ExtraOutput Declaration public IReadOnlyList<string> ExtraOutput { get; } Property Value Type Description System.Collections.Generic.IReadOnlyList < System.String > FoundExecutable Declaration public bool FoundExecutable { get; } Property Value Type Description System.Boolean Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Toolchains.Results.GenerateResult.html": {
    "href": "api/BenchmarkDotNet.Toolchains.Results.GenerateResult.html",
    "title": "Class GenerateResult | BenchmarkDotNet",
    "keywords": "Class GenerateResult Inheritance System.Object GenerateResult BuildResult Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Toolchains.Results Assembly : BenchmarkDotNet.dll Syntax public class GenerateResult Constructors GenerateResult(ArtifactsPaths, Boolean, Exception, IReadOnlyCollection<String>) Declaration public GenerateResult(ArtifactsPaths artifactsPaths, bool isGenerateSuccess, Exception generateException, IReadOnlyCollection<string> artifactsToCleanup) Parameters Type Name Description ArtifactsPaths artifactsPaths System.Boolean isGenerateSuccess System.Exception generateException System.Collections.Generic.IReadOnlyCollection < System.String > artifactsToCleanup Properties ArtifactsPaths Declaration public ArtifactsPaths ArtifactsPaths { get; } Property Value Type Description ArtifactsPaths ArtifactsToCleanup Declaration public IReadOnlyCollection<string> ArtifactsToCleanup { get; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection < System.String > GenerateException Declaration public Exception GenerateException { get; } Property Value Type Description System.Exception IsGenerateSuccess Declaration public bool IsGenerateSuccess { get; } Property Value Type Description System.Boolean Methods Failure(ArtifactsPaths, IReadOnlyCollection<String>, Exception) Declaration public static GenerateResult Failure(ArtifactsPaths artifactsPaths, IReadOnlyCollection<string> artifactsToCleanup, Exception exception = null) Parameters Type Name Description ArtifactsPaths artifactsPaths System.Collections.Generic.IReadOnlyCollection < System.String > artifactsToCleanup System.Exception exception Returns Type Description GenerateResult Success(ArtifactsPaths, IReadOnlyCollection<String>) Declaration public static GenerateResult Success(ArtifactsPaths artifactsPaths, IReadOnlyCollection<string> artifactsToCleanup) Parameters Type Name Description ArtifactsPaths artifactsPaths System.Collections.Generic.IReadOnlyCollection < System.String > artifactsToCleanup Returns Type Description GenerateResult ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Analysers.ConclusionHelper.html": {
    "href": "api/BenchmarkDotNet.Analysers.ConclusionHelper.html",
    "title": "Class ConclusionHelper | BenchmarkDotNet",
    "keywords": "Class ConclusionHelper Inheritance System.Object ConclusionHelper Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Analysers Assembly : BenchmarkDotNet.dll Syntax public static class ConclusionHelper Methods Print(ILogger, List<Conclusion>) Declaration public static void Print(ILogger logger, List<Conclusion> conclusions) Parameters Type Name Description ILogger logger System.Collections.Generic.List < Conclusion > conclusions"
  },
  "api/BenchmarkDotNet.Attributes.MemoryDiagnoserAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.MemoryDiagnoserAttribute.html",
    "title": "Class MemoryDiagnoserAttribute | BenchmarkDotNet",
    "keywords": "Class MemoryDiagnoserAttribute Inheritance System.Object System.Attribute MemoryDiagnoserAttribute Implements IConfigSource Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes Assembly : BenchmarkDotNet.dll Syntax public class MemoryDiagnoserAttribute : Attribute, IConfigSource Constructors MemoryDiagnoserAttribute() Declaration public MemoryDiagnoserAttribute() Properties Config Declaration public IConfig Config { get; } Property Value Type Description IConfig Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.OrderProviderAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.OrderProviderAttribute.html",
    "title": "Class OrderProviderAttribute | BenchmarkDotNet",
    "keywords": "Class OrderProviderAttribute Inheritance System.Object System.Attribute OrderProviderAttribute Implements IConfigSource Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes Assembly : BenchmarkDotNet.dll Syntax [AttributeUsage(AttributeTargets.Assembly | AttributeTargets.Class)] public class OrderProviderAttribute : Attribute, IConfigSource Constructors OrderProviderAttribute(SummaryOrderPolicy, MethodOrderPolicy) Declaration public OrderProviderAttribute(SummaryOrderPolicy summaryOrderPolicy = SummaryOrderPolicy.Default, MethodOrderPolicy methodOrderPolicy = MethodOrderPolicy.Declared) Parameters Type Name Description SummaryOrderPolicy summaryOrderPolicy MethodOrderPolicy methodOrderPolicy Properties Config Declaration public IConfig Config { get; } Property Value Type Description IConfig Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Characteristics.CharacteristicSetPresenter.html": {
    "href": "api/BenchmarkDotNet.Characteristics.CharacteristicSetPresenter.html",
    "title": "Class CharacteristicSetPresenter | BenchmarkDotNet",
    "keywords": "Class CharacteristicSetPresenter Inheritance System.Object CharacteristicSetPresenter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Characteristics Assembly : BenchmarkDotNet.dll Syntax public abstract class CharacteristicSetPresenter Fields Default Declaration public static readonly CharacteristicSetPresenter Default Field Value Type Description CharacteristicSetPresenter Display Declaration public static readonly CharacteristicSetPresenter Display Field Value Type Description CharacteristicSetPresenter Folder Declaration public static readonly CharacteristicSetPresenter Folder Field Value Type Description CharacteristicSetPresenter SourceCode Declaration public static readonly CharacteristicSetPresenter SourceCode Field Value Type Description CharacteristicSetPresenter Methods GetPresentableCharacteristics(CharacteristicObject, Boolean) Declaration protected virtual IEnumerable<Characteristic> GetPresentableCharacteristics(CharacteristicObject obj, bool includeIgnoreOnApply = false) Parameters Type Name Description CharacteristicObject obj System.Boolean includeIgnoreOnApply Returns Type Description System.Collections.Generic.IEnumerable < Characteristic > ToPresentation(CharacteristicObject) Declaration public abstract string ToPresentation(CharacteristicObject obj) Parameters Type Name Description CharacteristicObject obj Returns Type Description System.String Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Characteristics.CompositeResolver.html": {
    "href": "api/BenchmarkDotNet.Characteristics.CompositeResolver.html",
    "title": "Class CompositeResolver | BenchmarkDotNet",
    "keywords": "Class CompositeResolver Inheritance System.Object CompositeResolver Implements IResolver Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Characteristics Assembly : BenchmarkDotNet.dll Syntax public class CompositeResolver : IResolver Constructors CompositeResolver(IResolver[]) Declaration public CompositeResolver(params IResolver[] resolvers) Parameters Type Name Description IResolver [] resolvers Methods CanResolve(Characteristic) Declaration public bool CanResolve(Characteristic characteristic) Parameters Type Name Description Characteristic characteristic Returns Type Description System.Boolean Resolve(CharacteristicObject, Characteristic) Declaration public object Resolve(CharacteristicObject obj, Characteristic characteristic) Parameters Type Name Description CharacteristicObject obj Characteristic characteristic Returns Type Description System.Object Resolve<T>(CharacteristicObject, Characteristic<T>) Declaration public T Resolve<T>(CharacteristicObject obj, Characteristic<T> characteristic) Parameters Type Name Description CharacteristicObject obj Characteristic <T> characteristic Returns Type Description T Type Parameters Name Description T Implements IResolver Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Columns.Q3ColumnAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Columns.Q3ColumnAttribute.html",
    "title": "Class Q3ColumnAttribute | BenchmarkDotNet",
    "keywords": "Class Q3ColumnAttribute Inheritance System.Object System.Attribute ColumnConfigBaseAttribute Q3ColumnAttribute Implements IConfigSource Inherited Members ColumnConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Columns Assembly : BenchmarkDotNet.dll Syntax public class Q3ColumnAttribute : ColumnConfigBaseAttribute, IConfigSource Constructors Q3ColumnAttribute() Declaration public Q3ColumnAttribute() Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.ConfigAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.ConfigAttribute.html",
    "title": "Class ConfigAttribute | BenchmarkDotNet",
    "keywords": "Class ConfigAttribute Inheritance System.Object System.Attribute ConfigAttribute Implements IConfigSource Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes Assembly : BenchmarkDotNet.dll Syntax [AttributeUsage(AttributeTargets.Assembly | AttributeTargets.Class)] public class ConfigAttribute : Attribute, IConfigSource Constructors ConfigAttribute(String) Declaration public ConfigAttribute(string command) Parameters Type Name Description System.String command ConfigAttribute(Type) Declaration public ConfigAttribute(Type type) Parameters Type Name Description System.Type type Properties Config Declaration public IConfig Config { get; } Property Value Type Description IConfig Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Exporters.JsonExporterAttribute.BriefCompressed.html": {
    "href": "api/BenchmarkDotNet.Attributes.Exporters.JsonExporterAttribute.BriefCompressed.html",
    "title": "Class JsonExporterAttribute.BriefCompressed | BenchmarkDotNet",
    "keywords": "Class JsonExporterAttribute.BriefCompressed Inheritance System.Object System.Attribute ExporterConfigBaseAttribute JsonExporterAttribute JsonExporterAttribute.BriefCompressed Implements IConfigSource Inherited Members ExporterConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Exporters Assembly : BenchmarkDotNet.dll Syntax public class BriefCompressed : JsonExporterAttribute, IConfigSource Constructors BriefCompressed() Declaration public BriefCompressed() Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Exporters.MarkdownExporterAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Exporters.MarkdownExporterAttribute.html",
    "title": "Class MarkdownExporterAttribute | BenchmarkDotNet",
    "keywords": "Class MarkdownExporterAttribute Inheritance System.Object System.Attribute ExporterConfigBaseAttribute MarkdownExporterAttribute Implements IConfigSource Inherited Members ExporterConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Exporters Assembly : BenchmarkDotNet.dll Syntax public class MarkdownExporterAttribute : ExporterConfigBaseAttribute, IConfigSource Constructors MarkdownExporterAttribute() Declaration public MarkdownExporterAttribute() Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Exporters.XmlExporterAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Exporters.XmlExporterAttribute.html",
    "title": "Class XmlExporterAttribute | BenchmarkDotNet",
    "keywords": "Class XmlExporterAttribute Inheritance System.Object System.Attribute ExporterConfigBaseAttribute XmlExporterAttribute XmlExporterAttribute.Brief XmlExporterAttribute.BriefCompressed XmlExporterAttribute.Full XmlExporterAttribute.FullCompressed Implements IConfigSource Inherited Members ExporterConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Exporters Assembly : BenchmarkDotNet.dll Syntax [AttributeUsage(AttributeTargets.Assembly | AttributeTargets.Class, AllowMultiple = true)] public class XmlExporterAttribute : ExporterConfigBaseAttribute, IConfigSource Constructors XmlExporterAttribute(IExporter) Declaration public XmlExporterAttribute(IExporter exporter) Parameters Type Name Description IExporter exporter XmlExporterAttribute(String, Boolean, Boolean) Declaration public XmlExporterAttribute(string fileNameSuffix = \"\", bool indentXml = false, bool excludeMeasurements = false) Parameters Type Name Description System.String fileNameSuffix System.Boolean indentXml System.Boolean excludeMeasurements Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Jobs.DryCoreJobAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Jobs.DryCoreJobAttribute.html",
    "title": "Class DryCoreJobAttribute | BenchmarkDotNet",
    "keywords": "Class DryCoreJobAttribute Inheritance System.Object System.Attribute JobConfigBaseAttribute DryCoreJobAttribute Implements IConfigSource Inherited Members JobConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Jobs Assembly : BenchmarkDotNet.dll Syntax public class DryCoreJobAttribute : JobConfigBaseAttribute, IConfigSource Constructors DryCoreJobAttribute() Declaration public DryCoreJobAttribute() Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Exporters.Xml.XmlExporterBase.html": {
    "href": "api/BenchmarkDotNet.Exporters.Xml.XmlExporterBase.html",
    "title": "Class XmlExporterBase | BenchmarkDotNet",
    "keywords": "Class XmlExporterBase Inheritance System.Object ExporterBase XmlExporterBase XmlExporter Implements IExporter Inherited Members ExporterBase.Name ExporterBase.FileNameSuffix ExporterBase.FileCaption ExporterBase.ExportToFiles(Summary, ILogger) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Exporters.Xml Assembly : BenchmarkDotNet.dll Syntax public abstract class XmlExporterBase : ExporterBase, IExporter Constructors XmlExporterBase(Boolean, Boolean) Declaration public XmlExporterBase(bool indentXml = false, bool excludeMeasurements = false) Parameters Type Name Description System.Boolean indentXml System.Boolean excludeMeasurements Properties FileExtension Declaration protected override string FileExtension { get; } Property Value Type Description System.String Overrides ExporterBase.FileExtension Methods ExportToLog(Summary, ILogger) Declaration public override void ExportToLog(Summary summary, ILogger logger) Parameters Type Name Description Summary summary ILogger logger Overrides ExporterBase.ExportToLog(Summary, ILogger) Implements IExporter Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Extensions.CommonExtensions.html": {
    "href": "api/BenchmarkDotNet.Extensions.CommonExtensions.html",
    "title": "Class CommonExtensions | BenchmarkDotNet",
    "keywords": "Class CommonExtensions Inheritance System.Object CommonExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Extensions Assembly : BenchmarkDotNet.dll Syntax public static class CommonExtensions Methods GetColumnTitle(IColumn, ISummaryStyle) Gets column title formatted using the specified style Declaration public static string GetColumnTitle(this IColumn column, ISummaryStyle style) Parameters Type Name Description IColumn column ISummaryStyle style Returns Type Description System.String GetValueOrDefault<TKey, TValue>(IDictionary<TKey, TValue>, TKey) Declaration public static TValue GetValueOrDefault<TKey, TValue>(this IDictionary<TKey, TValue> dictionary, TKey key) Parameters Type Name Description System.Collections.Generic.IDictionary <TKey, TValue> dictionary TKey key Returns Type Description TValue Type Parameters Name Description TKey TValue IsEmpty<T>(IEnumerable<T>) Declaration public static bool IsEmpty<T>(this IEnumerable<T> value) Parameters Type Name Description System.Collections.Generic.IEnumerable <T> value Returns Type Description System.Boolean Type Parameters Name Description T IsEmpty<T>(IReadOnlyCollection<T>) Declaration public static bool IsEmpty<T>(this IReadOnlyCollection<T> value) Parameters Type Name Description System.Collections.Generic.IReadOnlyCollection <T> value Returns Type Description System.Boolean Type Parameters Name Description T IsNullOrEmpty<T>(IReadOnlyCollection<T>) Declaration public static bool IsNullOrEmpty<T>(this IReadOnlyCollection<T> value) Parameters Type Name Description System.Collections.Generic.IReadOnlyCollection <T> value Returns Type Description System.Boolean Type Parameters Name Description T IsOneOf<T>(T, T[]) Declaration public static bool IsOneOf<T>(this T value, params T[] values) Parameters Type Name Description T value T[] values Returns Type Description System.Boolean Type Parameters Name Description T Penult<T>(IList<T>) Declaration public static T Penult<T>(this IList<T> list) Parameters Type Name Description System.Collections.Generic.IList <T> list Returns Type Description T Type Parameters Name Description T Pow(Double, Double) Declaration public static double Pow(this double x, double k) Parameters Type Name Description System.Double x System.Double k Returns Type Description System.Double RoundToInt(Double) Declaration public static int RoundToInt(this double x) Parameters Type Name Description System.Double x Returns Type Description System.Int32 RoundToLong(Double) Declaration public static long RoundToLong(this double x) Parameters Type Name Description System.Double x Returns Type Description System.Int64 Sqr(Double) Declaration public static double Sqr(this double x) Parameters Type Name Description System.Double x Returns Type Description System.Double ToSizeStr(Int64, SizeUnit, Int32, Boolean) Declaration public static string ToSizeStr(this long value, SizeUnit unit = null, int unitNameWidth = 1, bool showUnit = true) Parameters Type Name Description System.Int64 value SizeUnit unit System.Int32 unitNameWidth System.Boolean showUnit Returns Type Description System.String ToSortedList<T>(IEnumerable<T>) Declaration public static List<T> ToSortedList<T>(this IEnumerable<T> values) Parameters Type Name Description System.Collections.Generic.IEnumerable <T> values Returns Type Description System.Collections.Generic.List <T> Type Parameters Name Description T ToStr(Double, String) Declaration public static string ToStr(this double value, string format = \"0.##\") Parameters Type Name Description System.Double value System.String format Returns Type Description System.String ToTimeStr(Double, TimeUnit, Int32, Boolean, String) Declaration public static string ToTimeStr(this double value, TimeUnit unit = null, int unitNameWidth = 1, bool showUnit = true, string format = \"N4\") Parameters Type Name Description System.Double value TimeUnit unit System.Int32 unitNameWidth System.Boolean showUnit System.String format Returns Type Description System.String"
  },
  "api/BenchmarkDotNet.Attributes.GenericTypeArgumentsAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.GenericTypeArgumentsAttribute.html",
    "title": "Class GenericTypeArgumentsAttribute | BenchmarkDotNet",
    "keywords": "Class GenericTypeArgumentsAttribute Inheritance System.Object System.Attribute GenericTypeArgumentsAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes Assembly : BenchmarkDotNet.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = true)] public class GenericTypeArgumentsAttribute : Attribute Constructors GenericTypeArgumentsAttribute() Declaration public GenericTypeArgumentsAttribute() GenericTypeArgumentsAttribute(Type[]) Declaration public GenericTypeArgumentsAttribute(params Type[] genericTypeArguments) Parameters Type Name Description System.Type [] genericTypeArguments Properties GenericTypeArguments Declaration public Type[] GenericTypeArguments { get; } Property Value Type Description System.Type [] Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Jobs.InProcessAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Jobs.InProcessAttribute.html",
    "title": "Class InProcessAttribute | BenchmarkDotNet",
    "keywords": "Class InProcessAttribute Inheritance System.Object System.Attribute JobConfigBaseAttribute InProcessAttribute Implements IConfigSource Inherited Members JobConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Jobs Assembly : BenchmarkDotNet.dll Syntax public class InProcessAttribute : JobConfigBaseAttribute, IConfigSource Constructors InProcessAttribute(Boolean) Declaration public InProcessAttribute(bool dontLogOutput = false) Parameters Type Name Description System.Boolean dontLogOutput Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Jobs.JobConfigBaseAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Jobs.JobConfigBaseAttribute.html",
    "title": "Class JobConfigBaseAttribute | BenchmarkDotNet",
    "keywords": "Class JobConfigBaseAttribute Inheritance System.Object System.Attribute JobConfigBaseAttribute ClrJobAttribute CoreJobAttribute CoreRtJobAttribute DryClrJobAttribute DryCoreJobAttribute DryCoreRtJobAttribute DryJobAttribute DryMonoJobAttribute InProcessAttribute LegacyJitX64JobAttribute LegacyJitX86JobAttribute LongRunJobAttribute MediumRunJobAttribute MonoJobAttribute RyuJitX64JobAttribute RyuJitX86JobAttribute ShortRunJobAttribute SimpleJobAttribute VeryLongRunJobAttribute Implements IConfigSource Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Jobs Assembly : BenchmarkDotNet.dll Syntax [AttributeUsage(AttributeTargets.Assembly | AttributeTargets.Class)] public class JobConfigBaseAttribute : Attribute, IConfigSource Constructors JobConfigBaseAttribute() Declaration protected JobConfigBaseAttribute() JobConfigBaseAttribute(Job[]) Declaration protected JobConfigBaseAttribute(params Job[] jobs) Parameters Type Name Description Job [] jobs Properties Config Declaration public IConfig Config { get; } Property Value Type Description IConfig Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Validators.ReturnValueValidator.html": {
    "href": "api/BenchmarkDotNet.Validators.ReturnValueValidator.html",
    "title": "Class ReturnValueValidator | BenchmarkDotNet",
    "keywords": "Class ReturnValueValidator Inheritance System.Object ExecutionValidatorBase ReturnValueValidator Implements IValidator Inherited Members ExecutionValidatorBase.TreatsWarningsAsErrors ExecutionValidatorBase.Validate(ValidationParameters) ExecutionValidatorBase.GetDisplayExceptionMessage(Exception) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Validators Assembly : BenchmarkDotNet.dll Syntax public class ReturnValueValidator : ExecutionValidatorBase, IValidator Properties DontFailOnError Declaration public static ReturnValueValidator DontFailOnError { get; } Property Value Type Description ReturnValueValidator FailOnError Declaration public static ReturnValueValidator FailOnError { get; } Property Value Type Description ReturnValueValidator Methods ExecuteBenchmarks(Object, IEnumerable<Benchmark>, List<ValidationError>) Declaration protected override void ExecuteBenchmarks(object benchmarkTypeInstance, IEnumerable<Benchmark> benchmarks, List<ValidationError> errors) Parameters Type Name Description System.Object benchmarkTypeInstance System.Collections.Generic.IEnumerable < Benchmark > benchmarks System.Collections.Generic.List < ValidationError > errors Overrides ExecutionValidatorBase.ExecuteBenchmarks(Object, IEnumerable<Benchmark>, List<ValidationError>) Implements IValidator Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Validators.RunModeValidator.html": {
    "href": "api/BenchmarkDotNet.Validators.RunModeValidator.html",
    "title": "Class RunModeValidator | BenchmarkDotNet",
    "keywords": "Class RunModeValidator Inheritance System.Object RunModeValidator Implements IValidator Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Validators Assembly : BenchmarkDotNet.dll Syntax public class RunModeValidator : IValidator Fields FailOnError Declaration public static readonly IValidator FailOnError Field Value Type Description IValidator Properties TreatsWarningsAsErrors Declaration public bool TreatsWarningsAsErrors { get; } Property Value Type Description System.Boolean Methods Validate(ValidationParameters) Declaration public IEnumerable<ValidationError> Validate(ValidationParameters validationParameters) Parameters Type Name Description ValidationParameters validationParameters Returns Type Description System.Collections.Generic.IEnumerable < ValidationError > Implements IValidator Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Validators.SetupCleanupValidator.html": {
    "href": "api/BenchmarkDotNet.Validators.SetupCleanupValidator.html",
    "title": "Class SetupCleanupValidator | BenchmarkDotNet",
    "keywords": "Class SetupCleanupValidator Inheritance System.Object SetupCleanupValidator Implements IValidator Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Validators Assembly : BenchmarkDotNet.dll Syntax public class SetupCleanupValidator : IValidator Fields FailOnError Declaration public static readonly SetupCleanupValidator FailOnError Field Value Type Description SetupCleanupValidator Properties TreatsWarningsAsErrors Declaration public bool TreatsWarningsAsErrors { get; } Property Value Type Description System.Boolean Methods Validate(ValidationParameters) Declaration public IEnumerable<ValidationError> Validate(ValidationParameters input) Parameters Type Name Description ValidationParameters input Returns Type Description System.Collections.Generic.IEnumerable < ValidationError > Implements IValidator Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Validators.ShadowCopyValidator.html": {
    "href": "api/BenchmarkDotNet.Validators.ShadowCopyValidator.html",
    "title": "Class ShadowCopyValidator | BenchmarkDotNet",
    "keywords": "Class ShadowCopyValidator Inheritance System.Object ShadowCopyValidator Implements IValidator Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Validators Assembly : BenchmarkDotNet.dll Syntax public class ShadowCopyValidator : IValidator Fields Default Declaration public static readonly IValidator Default Field Value Type Description IValidator Properties TreatsWarningsAsErrors Declaration public bool TreatsWarningsAsErrors { get; } Property Value Type Description System.Boolean Methods Validate(ValidationParameters) Declaration public IEnumerable<ValidationError> Validate(ValidationParameters validationParameters) Parameters Type Name Description ValidationParameters validationParameters Returns Type Description System.Collections.Generic.IEnumerable < ValidationError > Implements IValidator Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Diagnosers.DisassembledMethod.html": {
    "href": "api/BenchmarkDotNet.Diagnosers.DisassembledMethod.html",
    "title": "Class DisassembledMethod | BenchmarkDotNet",
    "keywords": "Class DisassembledMethod Inheritance System.Object DisassembledMethod Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Diagnosers Assembly : BenchmarkDotNet.dll Syntax public class DisassembledMethod Properties CommandLine Declaration public string CommandLine { get; set; } Property Value Type Description System.String Maps Declaration public Map[] Maps { get; set; } Property Value Type Description Map [] Name Declaration public string Name { get; set; } Property Value Type Description System.String NativeCode Declaration public ulong NativeCode { get; set; } Property Value Type Description System.UInt64 Problem Declaration public string Problem { get; set; } Property Value Type Description System.String Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Diagnosers.DisassemblerConstants.html": {
    "href": "api/BenchmarkDotNet.Diagnosers.DisassemblerConstants.html",
    "title": "Class DisassemblerConstants | BenchmarkDotNet",
    "keywords": "Class DisassemblerConstants Inheritance System.Object DisassemblerConstants Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Diagnosers Assembly : BenchmarkDotNet.dll Syntax public static class DisassemblerConstants Fields DiassemblerEntryMethodName Declaration public const string DiassemblerEntryMethodName = \"__ForDisassemblyDiagnoser__\" Field Value Type Description System.String NotManagedMethod Declaration public const string NotManagedMethod = \"not managed method\" Field Value Type Description System.String"
  },
  "api/BenchmarkDotNet.Diagnosers.PreciseMachineCounter.html": {
    "href": "api/BenchmarkDotNet.Diagnosers.PreciseMachineCounter.html",
    "title": "Class PreciseMachineCounter | BenchmarkDotNet",
    "keywords": "Class PreciseMachineCounter Inheritance System.Object PreciseMachineCounter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Diagnosers Assembly : BenchmarkDotNet.dll Syntax public class PreciseMachineCounter Properties Count Declaration public ulong Count { get; } Property Value Type Description System.UInt64 Counter Declaration public HardwareCounter Counter { get; } Property Value Type Description HardwareCounter Interval Declaration public int Interval { get; } Property Value Type Description System.Int32 Name Declaration public string Name { get; } Property Value Type Description System.String PerInstructionPointer Declaration public Dictionary<ulong, ulong> PerInstructionPointer { get; } Property Value Type Description System.Collections.Generic.Dictionary < System.UInt64 , System.UInt64 > ProfileSourceId Declaration public int ProfileSourceId { get; } Property Value Type Description System.Int32 Methods OnSample(UInt64) Declaration public void OnSample(ulong instructionPointer) Parameters Type Name Description System.UInt64 instructionPointer Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Diagnosers.RunMode.html": {
    "href": "api/BenchmarkDotNet.Diagnosers.RunMode.html",
    "title": "Enum RunMode | BenchmarkDotNet",
    "keywords": "Enum RunMode Namespace : BenchmarkDotNet.Diagnosers Assembly : BenchmarkDotNet.dll Syntax public enum RunMode : byte Fields Name Description ExtraRun needs extra run of the benchmark None given diagnoser should not be executed for given benchmark NoOverhead no overhead, can be executed without extra run SeparateLogic implements some separate logic, that can be executed at any time Extension Methods CommonExtensions.IsOneOf<RunMode>(RunMode[])"
  },
  "api/BenchmarkDotNet.Engines.RunResults.html": {
    "href": "api/BenchmarkDotNet.Engines.RunResults.html",
    "title": "Struct RunResults | BenchmarkDotNet",
    "keywords": "Struct RunResults Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Engines Assembly : BenchmarkDotNet.dll Syntax public struct RunResults Constructors RunResults(IReadOnlyList<Measurement>, IReadOnlyList<Measurement>, OutlierMode, GcStats) Declaration public RunResults(IReadOnlyList<Measurement> idle, IReadOnlyList<Measurement> main, OutlierMode outlierMode, GcStats gcStats) Parameters Type Name Description System.Collections.Generic.IReadOnlyList < Measurement > idle System.Collections.Generic.IReadOnlyList < Measurement > main OutlierMode outlierMode GcStats gcStats Properties GCStats Declaration public GcStats GCStats { get; } Property Value Type Description GcStats Idle Declaration public IReadOnlyList<Measurement> Idle { get; } Property Value Type Description System.Collections.Generic.IReadOnlyList < Measurement > Main Declaration public IReadOnlyList<Measurement> Main { get; } Property Value Type Description System.Collections.Generic.IReadOnlyList < Measurement > Methods GetMeasurements() Declaration public IEnumerable<Measurement> GetMeasurements() Returns Type Description System.Collections.Generic.IEnumerable < Measurement > Print(TextWriter) Declaration public void Print(TextWriter outWriter) Parameters Type Name Description System.IO.TextWriter outWriter Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Engines.RunStrategy.html": {
    "href": "api/BenchmarkDotNet.Engines.RunStrategy.html",
    "title": "Enum RunStrategy | BenchmarkDotNet",
    "keywords": "Enum RunStrategy Namespace : BenchmarkDotNet.Engines Assembly : BenchmarkDotNet.dll Syntax public enum RunStrategy Fields Name Description ColdStart A mode without overhead evaluating and warmup, with single invocation. Perfect for startup time evaluation. Monitoring A mode without overhead evaluating, with several target iterations. Perfect for macrobenchmarks without a steady state with high variance. Throughput Throughput mode. Perfect for microbenchmarking. Extension Methods RunStrategyExtensions.NeedsJitting() CommonExtensions.IsOneOf<RunStrategy>(RunStrategy[])"
  },
  "api/BenchmarkDotNet.Engines.RunStrategyExtensions.html": {
    "href": "api/BenchmarkDotNet.Engines.RunStrategyExtensions.html",
    "title": "Class RunStrategyExtensions | BenchmarkDotNet",
    "keywords": "Class RunStrategyExtensions Inheritance System.Object RunStrategyExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Engines Assembly : BenchmarkDotNet.dll Syntax public static class RunStrategyExtensions Methods NeedsJitting(RunStrategy) Declaration public static bool NeedsJitting(this RunStrategy runStrategy) Parameters Type Name Description RunStrategy runStrategy Returns Type Description System.Boolean"
  },
  "api/BenchmarkDotNet.Diagnosers.Map.html": {
    "href": "api/BenchmarkDotNet.Diagnosers.Map.html",
    "title": "Class Map | BenchmarkDotNet",
    "keywords": "Class Map Inheritance System.Object Map Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Diagnosers Assembly : BenchmarkDotNet.dll Syntax public class Map Properties Instructions Declaration public Code[] Instructions { get; set; } Property Value Type Description Code [] Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Engines.EngineResolver.html": {
    "href": "api/BenchmarkDotNet.Engines.EngineResolver.html",
    "title": "Class EngineResolver | BenchmarkDotNet",
    "keywords": "Class EngineResolver Inheritance System.Object Resolver EngineResolver Implements IResolver Inherited Members Resolver.Register<T>(Characteristic<T>, Func<T>) Resolver.Register<T>(Characteristic<T>, Func<CharacteristicObject, T>) Resolver.CanResolve(Characteristic) Resolver.Resolve(CharacteristicObject, Characteristic) Resolver.Resolve<T>(CharacteristicObject, Characteristic<T>) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Engines Assembly : BenchmarkDotNet.dll Syntax public class EngineResolver : Resolver, IResolver Fields Instance Declaration public static readonly IResolver Instance Field Value Type Description IResolver Implements IResolver Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Engines.EngineStage.html": {
    "href": "api/BenchmarkDotNet.Engines.EngineStage.html",
    "title": "Class EngineStage | BenchmarkDotNet",
    "keywords": "Class EngineStage Inheritance System.Object EngineStage EngineTargetStage Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Engines Assembly : BenchmarkDotNet.dll Syntax public class EngineStage Constructors EngineStage(IEngine) Declaration protected EngineStage(IEngine engine) Parameters Type Name Description IEngine engine Properties TargetJob Declaration protected Job TargetJob { get; } Property Value Type Description Job Methods RunIteration(IterationMode, Int32, Int64, Int32) Declaration protected Measurement RunIteration(IterationMode mode, int index, long invokeCount, int unrollFactor) Parameters Type Name Description IterationMode mode System.Int32 index System.Int64 invokeCount System.Int32 unrollFactor Returns Type Description Measurement ShouldRunAuto(RunMode, Characteristic<Int32>) Declaration protected bool ShouldRunAuto(RunMode runMode, Characteristic<int> iterationCount) Parameters Type Name Description RunMode runMode Characteristic < System.Int32 > iterationCount Returns Type Description System.Boolean WriteLine() Declaration protected void WriteLine() WriteLine(String) Declaration protected void WriteLine(string line) Parameters Type Name Description System.String line Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Engines.EngineTargetStage.html": {
    "href": "api/BenchmarkDotNet.Engines.EngineTargetStage.html",
    "title": "Class EngineTargetStage | BenchmarkDotNet",
    "keywords": "Class EngineTargetStage Inheritance System.Object EngineStage EngineTargetStage Inherited Members EngineStage.TargetJob EngineStage.RunIteration(IterationMode, Int32, Int64, Int32) EngineStage.ShouldRunAuto(RunMode, Characteristic<Int32>) EngineStage.WriteLine() EngineStage.WriteLine(String) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Engines Assembly : BenchmarkDotNet.dll Syntax public class EngineTargetStage : EngineStage Constructors EngineTargetStage(IEngine) Declaration public EngineTargetStage(IEngine engine) Parameters Type Name Description IEngine engine Methods RunIdle(Int64, Int32) Declaration public IReadOnlyList<Measurement> RunIdle(long invokeCount, int unrollFactor) Parameters Type Name Description System.Int64 invokeCount System.Int32 unrollFactor Returns Type Description System.Collections.Generic.IReadOnlyList < Measurement > RunMain(Int64, Int32, Boolean) Declaration public IReadOnlyList<Measurement> RunMain(long invokeCount, int unrollFactor, bool forceSpecific = false) Parameters Type Name Description System.Int64 invokeCount System.Int32 unrollFactor System.Boolean forceSpecific Returns Type Description System.Collections.Generic.IReadOnlyList < Measurement > Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Engines.GcStats.html": {
    "href": "api/BenchmarkDotNet.Engines.GcStats.html",
    "title": "Struct GcStats | BenchmarkDotNet",
    "keywords": "Struct GcStats Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Engines Assembly : BenchmarkDotNet.dll Syntax public struct GcStats Fields AllocationQuantum Declaration public static readonly long AllocationQuantum Field Value Type Description System.Int64 Empty Declaration public static readonly GcStats Empty Field Value Type Description GcStats Properties BytesAllocatedPerOperation Declaration public long BytesAllocatedPerOperation { get; } Property Value Type Description System.Int64 Gen0Collections Declaration public int Gen0Collections { get; } Property Value Type Description System.Int32 Gen1Collections Declaration public int Gen1Collections { get; } Property Value Type Description System.Int32 Gen2Collections Declaration public int Gen2Collections { get; } Property Value Type Description System.Int32 TotalOperations Declaration public long TotalOperations { get; } Property Value Type Description System.Int64 Methods FromForced(Int32) Declaration public static GcStats FromForced(int forcedFullGarbageCollections) Parameters Type Name Description System.Int32 forcedFullGarbageCollections Returns Type Description GcStats GetCollectionsCount(Int32) Declaration public int GetCollectionsCount(int generation) Parameters Type Name Description System.Int32 generation Returns Type Description System.Int32 GetTotalAllocatedBytes(Boolean) returns total allocated bytes (not per operation) Declaration public long GetTotalAllocatedBytes(bool excludeAllocationQuantumSideEffects) Parameters Type Name Description System.Boolean excludeAllocationQuantumSideEffects Allocation quantum can affecting some of our nano-benchmarks in non-deterministic way. when this parameter is set to true and the number of all allocated bytes is less or equal AQ, we ignore AQ and put 0 to the results Returns Type Description System.Int64 Parse(String) Declaration public static GcStats Parse(string line) Parameters Type Name Description System.String line Returns Type Description GcStats ReadFinal() Declaration public static GcStats ReadFinal() Returns Type Description GcStats ReadInitial() Declaration public static GcStats ReadInitial() Returns Type Description GcStats ToOutputLine() Declaration public string ToOutputLine() Returns Type Description System.String ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() WithTotalOperations(Int64) Declaration public GcStats WithTotalOperations(long totalOperationsCount) Parameters Type Name Description System.Int64 totalOperationsCount Returns Type Description GcStats Operators Addition(GcStats, GcStats) Declaration public static GcStats operator +(GcStats left, GcStats right) Parameters Type Name Description GcStats left GcStats right Returns Type Description GcStats Subtraction(GcStats, GcStats) Declaration public static GcStats operator -(GcStats left, GcStats right) Parameters Type Name Description GcStats left GcStats right Returns Type Description GcStats Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Analysers.Conclusion.html": {
    "href": "api/BenchmarkDotNet.Analysers.Conclusion.html",
    "title": "Class Conclusion | BenchmarkDotNet",
    "keywords": "Class Conclusion Inheritance System.Object Conclusion Implements System.IEquatable < Conclusion > Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Analysers Assembly : BenchmarkDotNet.dll Syntax public sealed class Conclusion : IEquatable<Conclusion> Properties AnalyserId Declaration public string AnalyserId { get; } Property Value Type Description System.String Kind Declaration public ConclusionKind Kind { get; } Property Value Type Description ConclusionKind Message Declaration public string Message { get; } Property Value Type Description System.String Report Declaration public BenchmarkReport Report { get; } Property Value Type Description BenchmarkReport Methods CreateError(String, String, BenchmarkReport) Declaration public static Conclusion CreateError(string analyserId, string message, BenchmarkReport report = null) Parameters Type Name Description System.String analyserId System.String message BenchmarkReport report Returns Type Description Conclusion CreateHint(String, String, BenchmarkReport) Declaration public static Conclusion CreateHint(string analyserId, string message, BenchmarkReport report = null) Parameters Type Name Description System.String analyserId System.String message BenchmarkReport report Returns Type Description Conclusion CreateWarning(String, String, BenchmarkReport) Declaration public static Conclusion CreateWarning(string analyserId, string message, BenchmarkReport report = null) Parameters Type Name Description System.String analyserId System.String message BenchmarkReport report Returns Type Description Conclusion Equals(Conclusion) Declaration public bool Equals(Conclusion other) Parameters Type Name Description Conclusion other Returns Type Description System.Boolean Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() Implements System.IEquatable<T> Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Portability.Cpu.CpuInfoFormatter.html": {
    "href": "api/BenchmarkDotNet.Portability.Cpu.CpuInfoFormatter.html",
    "title": "Class CpuInfoFormatter | BenchmarkDotNet",
    "keywords": "Class CpuInfoFormatter Inheritance System.Object CpuInfoFormatter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Portability.Cpu Assembly : BenchmarkDotNet.dll Syntax public static class CpuInfoFormatter Methods Format(CpuInfo) Declaration public static string Format(CpuInfo cpuInfo) Parameters Type Name Description CpuInfo cpuInfo Returns Type Description System.String"
  },
  "api/BenchmarkDotNet.Portability.HyperV.html": {
    "href": "api/BenchmarkDotNet.Portability.HyperV.html",
    "title": "Class HyperV | BenchmarkDotNet",
    "keywords": "Class HyperV Inheritance System.Object VirtualMachineHypervisor HyperV Inherited Members VirtualMachineHypervisor.ContainsVmIdentifier(String, String) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Portability Assembly : BenchmarkDotNet.dll Syntax public class HyperV : VirtualMachineHypervisor Properties Default Declaration public static HyperV Default { get; } Property Value Type Description HyperV Name Declaration public override string Name { get; } Property Value Type Description System.String Overrides VirtualMachineHypervisor.Name Methods IsVirtualMachine(String, String) Declaration public override bool IsVirtualMachine(string manufacturer, string model) Parameters Type Name Description System.String manufacturer System.String model Returns Type Description System.Boolean Overrides VirtualMachineHypervisor.IsVirtualMachine(String, String) Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Running.Target.html": {
    "href": "api/BenchmarkDotNet.Running.Target.html",
    "title": "Class Target | BenchmarkDotNet",
    "keywords": "Class Target Inheritance System.Object Target Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Running Assembly : BenchmarkDotNet.dll Syntax public class Target Constructors Target(Type, MethodInfo, MethodInfo, MethodInfo, MethodInfo, MethodInfo, String, String, Boolean, String[], Int32, Int32) Declaration public Target(Type type, MethodInfo method, MethodInfo globalSetupMethod = null, MethodInfo globalCleanupMethod = null, MethodInfo iterationSetupMethod = null, MethodInfo iterationCleanupMethod = null, string description = null, string additionalLogic = null, bool baseline = false, string[] categories = null, int operationsPerInvoke = 1, int methodIndex = 0) Parameters Type Name Description System.Type type System.Reflection.MethodInfo method System.Reflection.MethodInfo globalSetupMethod System.Reflection.MethodInfo globalCleanupMethod System.Reflection.MethodInfo iterationSetupMethod System.Reflection.MethodInfo iterationCleanupMethod System.String description System.String additionalLogic System.Boolean baseline System.String [] categories System.Int32 operationsPerInvoke System.Int32 methodIndex Properties AdditionalLogic Declaration public string AdditionalLogic { get; } Property Value Type Description System.String Baseline Declaration public bool Baseline { get; } Property Value Type Description System.Boolean Categories Declaration public string[] Categories { get; } Property Value Type Description System.String [] DisplayInfo Declaration public string DisplayInfo { get; } Property Value Type Description System.String FolderInfo Declaration public string FolderInfo { get; } Property Value Type Description System.String GlobalCleanupMethod Declaration public MethodInfo GlobalCleanupMethod { get; } Property Value Type Description System.Reflection.MethodInfo GlobalSetupMethod Declaration public MethodInfo GlobalSetupMethod { get; } Property Value Type Description System.Reflection.MethodInfo IterationCleanupMethod Declaration public MethodInfo IterationCleanupMethod { get; } Property Value Type Description System.Reflection.MethodInfo IterationSetupMethod Declaration public MethodInfo IterationSetupMethod { get; } Property Value Type Description System.Reflection.MethodInfo Method Declaration public MethodInfo Method { get; } Property Value Type Description System.Reflection.MethodInfo MethodDisplayInfo Declaration public string MethodDisplayInfo { get; } Property Value Type Description System.String MethodIndex Declaration public int MethodIndex { get; } Property Value Type Description System.Int32 OperationsPerInvoke Declaration public int OperationsPerInvoke { get; } Property Value Type Description System.Int32 Type Declaration public Type Type { get; } Property Value Type Description System.Type Methods HasCategory(String) Declaration public bool HasCategory(string category) Parameters Type Name Description System.String category Returns Type Description System.Boolean ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Toolchains.ArtifactsPaths.html": {
    "href": "api/BenchmarkDotNet.Toolchains.ArtifactsPaths.html",
    "title": "Class ArtifactsPaths | BenchmarkDotNet",
    "keywords": "Class ArtifactsPaths Inheritance System.Object ArtifactsPaths Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Toolchains Assembly : BenchmarkDotNet.dll Syntax public class ArtifactsPaths Constructors ArtifactsPaths(String, String, String, String, String, String, String, String, String, String, String) Declaration public ArtifactsPaths(string rootArtifactsFolderPath, string buildArtifactsDirectoryPath, string binariesDirectoryPath, string programCodePath, string appConfigPath, string nugetConfigPath, string projectFilePath, string buildScriptFilePath, string executablePath, string programName, string packagesDirectoryName) Parameters Type Name Description System.String rootArtifactsFolderPath System.String buildArtifactsDirectoryPath System.String binariesDirectoryPath System.String programCodePath System.String appConfigPath System.String nugetConfigPath System.String projectFilePath System.String buildScriptFilePath System.String executablePath System.String programName System.String packagesDirectoryName Fields Empty Declaration public static ArtifactsPaths Empty Field Value Type Description ArtifactsPaths Properties AppConfigPath Declaration public string AppConfigPath { get; } Property Value Type Description System.String BinariesDirectoryPath Declaration public string BinariesDirectoryPath { get; } Property Value Type Description System.String BuildArtifactsDirectoryPath Declaration public string BuildArtifactsDirectoryPath { get; } Property Value Type Description System.String BuildScriptFilePath Declaration public string BuildScriptFilePath { get; } Property Value Type Description System.String ExecutablePath Declaration public string ExecutablePath { get; } Property Value Type Description System.String NuGetConfigPath Declaration public string NuGetConfigPath { get; } Property Value Type Description System.String PackagesDirectoryName Declaration public string PackagesDirectoryName { get; } Property Value Type Description System.String ProgramCodePath Declaration public string ProgramCodePath { get; } Property Value Type Description System.String ProgramName Declaration public string ProgramName { get; } Property Value Type Description System.String ProjectFilePath Declaration public string ProjectFilePath { get; } Property Value Type Description System.String RootArtifactsFolderPath Declaration public string RootArtifactsFolderPath { get; } Property Value Type Description System.String Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Toolchains.CoreRt.CoreRtToolchain.html": {
    "href": "api/BenchmarkDotNet.Toolchains.CoreRt.CoreRtToolchain.html",
    "title": "Class CoreRtToolchain | BenchmarkDotNet",
    "keywords": "Class CoreRtToolchain Inheritance System.Object Toolchain CoreRtToolchain Implements IToolchain Inherited Members Toolchain.Name Toolchain.Generator Toolchain.Builder Toolchain.Executor Toolchain.IsSupported(Benchmark, ILogger, IResolver) Toolchain.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Toolchains.CoreRt Assembly : BenchmarkDotNet.dll Syntax public class CoreRtToolchain : Toolchain, IToolchain Fields LatestMyGetBuild target latest (1.0.0-alpha-*) CoreRT build from https://dotnet.myget.org/F/dotnet-core/api/v3/index.json Declaration public static readonly IToolchain LatestMyGetBuild Field Value Type Description IToolchain Methods CreateBuilder() Declaration public static CoreRtToolchainBuilder CreateBuilder() Returns Type Description CoreRtToolchainBuilder Implements IToolchain Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Toolchains.InProcess.InProcessBuilder.html": {
    "href": "api/BenchmarkDotNet.Toolchains.InProcess.InProcessBuilder.html",
    "title": "Class InProcessBuilder | BenchmarkDotNet",
    "keywords": "Class InProcessBuilder Inheritance System.Object InProcessBuilder Implements IBuilder Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Toolchains.InProcess Assembly : BenchmarkDotNet.dll Syntax public class InProcessBuilder : IBuilder Methods Build(GenerateResult, BuildPartition, ILogger) always returns success Declaration public BuildResult Build(GenerateResult generateResult, BuildPartition buildPartition, ILogger logger) Parameters Type Name Description GenerateResult generateResult BuildPartition buildPartition ILogger logger Returns Type Description BuildResult Implements IBuilder Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Toolchains.InProcess.InProcessExecutor.html": {
    "href": "api/BenchmarkDotNet.Toolchains.InProcess.InProcessExecutor.html",
    "title": "Class InProcessExecutor | BenchmarkDotNet",
    "keywords": "Class InProcessExecutor Implementation of IExecutor for in-process benchmarks. Inheritance System.Object InProcessExecutor Implements IExecutor Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Toolchains.InProcess Assembly : BenchmarkDotNet.dll Syntax public class InProcessExecutor : IExecutor Constructors InProcessExecutor(TimeSpan, BenchmarkActionCodegen, Boolean) Initializes a new instance of the InProcessExecutor class. Declaration public InProcessExecutor(TimeSpan timeout, BenchmarkActionCodegen codegenMode, bool logOutput) Parameters Type Name Description System.TimeSpan timeout Timeout for the run. BenchmarkActionCodegen codegenMode Describes how benchmark action code is generated. System.Boolean logOutput true if the output should be logged. Fields DefaultTimeout Default timeout for in-process benchmarks. Declaration public static readonly TimeSpan DefaultTimeout Field Value Type Description System.TimeSpan Properties CodegenMode Describes how benchmark action code is generated. Declaration public BenchmarkActionCodegen CodegenMode { get; } Property Value Type Description BenchmarkActionCodegen Benchmark action code generation mode. ExecutionTimeout Timeout for the run. Declaration public TimeSpan ExecutionTimeout { get; } Property Value Type Description System.TimeSpan The timeout for the run. LogOutput Gets a value indicating whether the output should be logged. Declaration public bool LogOutput { get; } Property Value Type Description System.Boolean true if the output should be logged; otherwise, false . Methods Execute(ExecuteParameters) Executes the specified benchmark. Declaration public ExecuteResult Execute(ExecuteParameters executeParameters) Parameters Type Name Description ExecuteParameters executeParameters Returns Type Description ExecuteResult Implements IExecutor Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Toolchains.InProcess.InProcessGenerator.html": {
    "href": "api/BenchmarkDotNet.Toolchains.InProcess.InProcessGenerator.html",
    "title": "Class InProcessGenerator | BenchmarkDotNet",
    "keywords": "Class InProcessGenerator Implementation of IGenerator for in-process benchmarks. Inheritance System.Object InProcessGenerator Implements IGenerator Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Toolchains.InProcess Assembly : BenchmarkDotNet.dll Syntax public class InProcessGenerator : IGenerator Methods GenerateProject(BuildPartition, ILogger, String) returns a success Declaration public GenerateResult GenerateProject(BuildPartition buildPartition, ILogger logger, string rootArtifactsFolderPath) Parameters Type Name Description BuildPartition buildPartition ILogger logger System.String rootArtifactsFolderPath Returns Type Description GenerateResult Implements IGenerator Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Toolchains.InProcess.InProcessHost.html": {
    "href": "api/BenchmarkDotNet.Toolchains.InProcess.InProcessHost.html",
    "title": "Class InProcessHost | BenchmarkDotNet",
    "keywords": "Class InProcessHost Host API for in-process benchmarks. Inheritance System.Object InProcessHost Implements IHost Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Toolchains.InProcess Assembly : BenchmarkDotNet.dll Syntax public sealed class InProcessHost : IHost Constructors InProcessHost(Benchmark, ILogger, IDiagnoser, IConfig) Creates a new instance of InProcessHost . Declaration public InProcessHost(Benchmark benchmark, ILogger logger, IDiagnoser diagnoser, IConfig config) Parameters Type Name Description Benchmark benchmark Current benchmark. ILogger logger Logger for informational output. IDiagnoser diagnoser Diagnosers, if attached. IConfig config Current config. Properties IsDiagnoserAttached True if there are diagnosers attached. Declaration public bool IsDiagnoserAttached { get; } Property Value Type Description System.Boolean True if there are diagnosers attached. RunResults Results of the run. Declaration public RunResults RunResults { get; } Property Value Type Description RunResults Results of the run. Methods ReportResults(RunResults) Submits run results to the host. Declaration public void ReportResults(RunResults runResults) Parameters Type Name Description RunResults runResults The run results. SendError(String) Declaration public void SendError(string message) Parameters Type Name Description System.String message SendSignal(HostSignal) Sends notification signal to the host. Declaration public void SendSignal(HostSignal hostSignal) Parameters Type Name Description HostSignal hostSignal The signal to send. Write(String) Passes text to the host. Declaration public void Write(string message) Parameters Type Name Description System.String message Text to write. WriteLine() Passes new line to the host. Declaration public void WriteLine() WriteLine(String) Passes text (new line appended) to the host. Declaration public void WriteLine(string message) Parameters Type Name Description System.String message Text to write. Implements IHost Extension Methods HostExtensions.WriteLine(IHost, String, Object[]) HostExtensions.BeforeAnythingElse(IHost) HostExtensions.BeforeMainRun(IHost) HostExtensions.AfterMainRun(IHost) HostExtensions.AfterAll(IHost) CommonExtensions.IsOneOf<T>(T, T[]) See Also IHost"
  },
  "api/BenchmarkDotNet.Engines.DeadCodeEliminationHelper.html": {
    "href": "api/BenchmarkDotNet.Engines.DeadCodeEliminationHelper.html",
    "title": "Class DeadCodeEliminationHelper | BenchmarkDotNet",
    "keywords": "Class DeadCodeEliminationHelper Inheritance System.Object DeadCodeEliminationHelper Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Engines Assembly : BenchmarkDotNet.dll Syntax public static class DeadCodeEliminationHelper Methods KeepAliveWithoutBoxing<T>(T) Declaration public static void KeepAliveWithoutBoxing<T>(T value) Parameters Type Name Description T value Type Parameters Name Description T KeepAliveWithoutBoxing<T>(ref T) Declaration public static void KeepAliveWithoutBoxing<T>(ref T value) Parameters Type Name Description T value Type Parameters Name Description T"
  },
  "api/BenchmarkDotNet.Exporters.CombinedDisassemblyExporter.html": {
    "href": "api/BenchmarkDotNet.Exporters.CombinedDisassemblyExporter.html",
    "title": "Class CombinedDisassemblyExporter | BenchmarkDotNet",
    "keywords": "Class CombinedDisassemblyExporter Inheritance System.Object ExporterBase CombinedDisassemblyExporter Implements IExporter Inherited Members ExporterBase.Name ExporterBase.FileNameSuffix ExporterBase.ExportToFiles(Summary, ILogger) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Exporters Assembly : BenchmarkDotNet.dll Syntax public class CombinedDisassemblyExporter : ExporterBase, IExporter Constructors CombinedDisassemblyExporter(IReadOnlyDictionary<Benchmark, DisassemblyResult>) Declaration public CombinedDisassemblyExporter(IReadOnlyDictionary<Benchmark, DisassemblyResult> results) Parameters Type Name Description System.Collections.Generic.IReadOnlyDictionary < Benchmark , DisassemblyResult > results Properties FileCaption Declaration protected override string FileCaption { get; } Property Value Type Description System.String Overrides ExporterBase.FileCaption FileExtension Declaration protected override string FileExtension { get; } Property Value Type Description System.String Overrides ExporterBase.FileExtension Methods ExportToLog(Summary, ILogger) Declaration public override void ExportToLog(Summary summary, ILogger logger) Parameters Type Name Description Summary summary ILogger logger Overrides ExporterBase.ExportToLog(Summary, ILogger) Implements IExporter Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Exporters.CompositeExporter.html": {
    "href": "api/BenchmarkDotNet.Exporters.CompositeExporter.html",
    "title": "Class CompositeExporter | BenchmarkDotNet",
    "keywords": "Class CompositeExporter Inheritance System.Object CompositeExporter Implements IExporter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Exporters Assembly : BenchmarkDotNet.dll Syntax public class CompositeExporter : IExporter Constructors CompositeExporter(IExporter[]) Declaration public CompositeExporter(params IExporter[] exporters) Parameters Type Name Description IExporter [] exporters Properties Name Declaration public string Name { get; } Property Value Type Description System.String Methods ExportToFiles(Summary, ILogger) Declaration public IEnumerable<string> ExportToFiles(Summary summary, ILogger consoleLogger) Parameters Type Name Description Summary summary ILogger consoleLogger Returns Type Description System.Collections.Generic.IEnumerable < System.String > ExportToLog(Summary, ILogger) Declaration public void ExportToLog(Summary summary, ILogger logger) Parameters Type Name Description Summary summary ILogger logger Implements IExporter Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Reports.SummaryExtensions.html": {
    "href": "api/BenchmarkDotNet.Reports.SummaryExtensions.html",
    "title": "Class SummaryExtensions | BenchmarkDotNet",
    "keywords": "Class SummaryExtensions Inheritance System.Object SummaryExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Reports Assembly : BenchmarkDotNet.dll Syntax public static class SummaryExtensions Methods GetColumns(Summary) Declaration public static IColumn[] GetColumns(this Summary summary) Parameters Type Name Description Summary summary Returns Type Description IColumn [] GetLogicalGroupForBenchmark(Summary, Benchmark) Declaration public static IEnumerable<Benchmark> GetLogicalGroupForBenchmark(this Summary summary, Benchmark benchmark) Parameters Type Name Description Summary summary Benchmark benchmark Returns Type Description System.Collections.Generic.IEnumerable < Benchmark >"
  },
  "api/BenchmarkDotNet.Reports.SummaryStyle.html": {
    "href": "api/BenchmarkDotNet.Reports.SummaryStyle.html",
    "title": "Class SummaryStyle | BenchmarkDotNet",
    "keywords": "Class SummaryStyle Inheritance System.Object SummaryStyle Implements ISummaryStyle Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Reports Assembly : BenchmarkDotNet.dll Syntax public class SummaryStyle : ISummaryStyle Properties Default Declaration public static SummaryStyle Default { get; } Property Value Type Description SummaryStyle PrintUnitsInContent Declaration public bool PrintUnitsInContent { get; set; } Property Value Type Description System.Boolean PrintUnitsInHeader Declaration public bool PrintUnitsInHeader { get; set; } Property Value Type Description System.Boolean SizeUnit Declaration public SizeUnit SizeUnit { get; set; } Property Value Type Description SizeUnit TimeUnit Declaration public TimeUnit TimeUnit { get; set; } Property Value Type Description TimeUnit Methods WithSizeUnit(SizeUnit) Declaration public ISummaryStyle WithSizeUnit(SizeUnit sizeUnit) Parameters Type Name Description SizeUnit sizeUnit Returns Type Description ISummaryStyle WithTimeUnit(TimeUnit) Declaration public ISummaryStyle WithTimeUnit(TimeUnit timeUnit) Parameters Type Name Description TimeUnit timeUnit Returns Type Description ISummaryStyle Implements ISummaryStyle Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Toolchains.Toolchain.html": {
    "href": "api/BenchmarkDotNet.Toolchains.Toolchain.html",
    "title": "Class Toolchain | BenchmarkDotNet",
    "keywords": "Class Toolchain Inheritance System.Object Toolchain CoreRtToolchain CsProjClassicNetToolchain CsProjCoreToolchain CustomCoreClrToolchain RoslynToolchain Implements IToolchain Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Toolchains Assembly : BenchmarkDotNet.dll Syntax public class Toolchain : IToolchain Constructors Toolchain(String, IGenerator, IBuilder, IExecutor) Declaration public Toolchain(string name, IGenerator generator, IBuilder builder, IExecutor executor) Parameters Type Name Description System.String name IGenerator generator IBuilder builder IExecutor executor Properties Builder Declaration public IBuilder Builder { get; } Property Value Type Description IBuilder Executor Declaration public IExecutor Executor { get; } Property Value Type Description IExecutor Generator Declaration public IGenerator Generator { get; } Property Value Type Description IGenerator Name Declaration public string Name { get; } Property Value Type Description System.String Methods IsSupported(Benchmark, ILogger, IResolver) Declaration public virtual bool IsSupported(Benchmark benchmark, ILogger logger, IResolver resolver) Parameters Type Name Description Benchmark benchmark ILogger logger IResolver resolver Returns Type Description System.Boolean ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements IToolchain Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Columns.StdErrorColumnAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Columns.StdErrorColumnAttribute.html",
    "title": "Class StdErrorColumnAttribute | BenchmarkDotNet",
    "keywords": "Class StdErrorColumnAttribute Inheritance System.Object System.Attribute ColumnConfigBaseAttribute StdErrorColumnAttribute Implements IConfigSource Inherited Members ColumnConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Columns Assembly : BenchmarkDotNet.dll Syntax public class StdErrorColumnAttribute : ColumnConfigBaseAttribute, IConfigSource Constructors StdErrorColumnAttribute() Declaration public StdErrorColumnAttribute() Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Exporters.ExporterConfigBaseAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Exporters.ExporterConfigBaseAttribute.html",
    "title": "Class ExporterConfigBaseAttribute | BenchmarkDotNet",
    "keywords": "Class ExporterConfigBaseAttribute Inheritance System.Object System.Attribute ExporterConfigBaseAttribute AsciiDocExporterAttribute CsvExporterAttribute CsvMeasurementsExporterAttribute HtmlExporterAttribute JsonExporterAttribute MarkdownExporterAttribute MarkdownExporterAttribute.Atlassian MarkdownExporterAttribute.Default MarkdownExporterAttribute.GitHub MarkdownExporterAttribute.StackOverflow PlainExporterAttribute RPlotExporterAttribute XmlExporterAttribute Implements IConfigSource Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Exporters Assembly : BenchmarkDotNet.dll Syntax [AttributeUsage(AttributeTargets.Assembly | AttributeTargets.Class)] public class ExporterConfigBaseAttribute : Attribute, IConfigSource Constructors ExporterConfigBaseAttribute() Declaration protected ExporterConfigBaseAttribute() ExporterConfigBaseAttribute(IExporter[]) Declaration protected ExporterConfigBaseAttribute(params IExporter[] exporters) Parameters Type Name Description IExporter [] exporters Properties Config Declaration public IConfig Config { get; } Property Value Type Description IConfig Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Exporters.MarkdownExporterAttribute.GitHub.html": {
    "href": "api/BenchmarkDotNet.Attributes.Exporters.MarkdownExporterAttribute.GitHub.html",
    "title": "Class MarkdownExporterAttribute.GitHub | BenchmarkDotNet",
    "keywords": "Class MarkdownExporterAttribute.GitHub Inheritance System.Object System.Attribute ExporterConfigBaseAttribute MarkdownExporterAttribute.GitHub Implements IConfigSource Inherited Members ExporterConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Exporters Assembly : BenchmarkDotNet.dll Syntax public class GitHub : ExporterConfigBaseAttribute, IConfigSource Constructors GitHub() Declaration public GitHub() Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Exporters.XmlExporterAttribute.Full.html": {
    "href": "api/BenchmarkDotNet.Attributes.Exporters.XmlExporterAttribute.Full.html",
    "title": "Class XmlExporterAttribute.Full | BenchmarkDotNet",
    "keywords": "Class XmlExporterAttribute.Full Inheritance System.Object System.Attribute ExporterConfigBaseAttribute XmlExporterAttribute XmlExporterAttribute.Full Implements IConfigSource Inherited Members ExporterConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Exporters Assembly : BenchmarkDotNet.dll Syntax public class Full : XmlExporterAttribute, IConfigSource Constructors Full() Declaration public Full() Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Columns.IColumn.html": {
    "href": "api/BenchmarkDotNet.Columns.IColumn.html",
    "title": "Interface IColumn | BenchmarkDotNet",
    "keywords": "Interface IColumn Namespace : BenchmarkDotNet.Columns Assembly : BenchmarkDotNet.dll Syntax public interface IColumn Properties AlwaysShow Declaration bool AlwaysShow { get; } Property Value Type Description System.Boolean Category Declaration ColumnCategory Category { get; } Property Value Type Description ColumnCategory ColumnName Display column title in the summary. Declaration string ColumnName { get; } Property Value Type Description System.String Id An unique identificator of the column. If there are several columns with the same Id, only one of them will be shown in the summary. Declaration string Id { get; } Property Value Type Description System.String IsNumeric Defines if the column's value represents a number Declaration bool IsNumeric { get; } Property Value Type Description System.Boolean Legend Column description. Declaration string Legend { get; } Property Value Type Description System.String PriorityInCategory Defines order of column in the same category. Declaration int PriorityInCategory { get; } Property Value Type Description System.Int32 UnitType Defines how to format column's value Declaration UnitType UnitType { get; } Property Value Type Description UnitType Methods GetValue(Summary, Benchmark) Value in this column formatted using the default style. Declaration string GetValue(Summary summary, Benchmark benchmark) Parameters Type Name Description Summary summary Benchmark benchmark Returns Type Description System.String GetValue(Summary, Benchmark, ISummaryStyle) Value in this column formatted using the specified style. Declaration string GetValue(Summary summary, Benchmark benchmark, ISummaryStyle style) Parameters Type Name Description Summary summary Benchmark benchmark ISummaryStyle style Returns Type Description System.String IsAvailable(Summary) Declaration bool IsAvailable(Summary summary) Parameters Type Name Description Summary summary Returns Type Description System.Boolean IsDefault(Summary, Benchmark) Declaration bool IsDefault(Summary summary, Benchmark benchmark) Parameters Type Name Description Summary summary Benchmark benchmark Returns Type Description System.Boolean Extension Methods ColumnExtensions.ToProvider(IColumn) CommonExtensions.GetColumnTitle(IColumn, ISummaryStyle) CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Columns.IColumnProvider.html": {
    "href": "api/BenchmarkDotNet.Columns.IColumnProvider.html",
    "title": "Interface IColumnProvider | BenchmarkDotNet",
    "keywords": "Interface IColumnProvider Namespace : BenchmarkDotNet.Columns Assembly : BenchmarkDotNet.dll Syntax public interface IColumnProvider Methods GetColumns(Summary) Declaration IEnumerable<IColumn> GetColumns(Summary summary) Parameters Type Name Description Summary summary Returns Type Description System.Collections.Generic.IEnumerable < IColumn > Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Configs.ConfigExtensions.html": {
    "href": "api/BenchmarkDotNet.Configs.ConfigExtensions.html",
    "title": "Class ConfigExtensions | BenchmarkDotNet",
    "keywords": "Class ConfigExtensions Inheritance System.Object ConfigExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Configs Assembly : BenchmarkDotNet.dll Syntax public static class ConfigExtensions Methods AsReadOnly(IConfig) Declaration public static ReadOnlyConfig AsReadOnly(this IConfig config) Parameters Type Name Description IConfig config Returns Type Description ReadOnlyConfig GetCompositeAnalyser(IConfig) Declaration public static IAnalyser GetCompositeAnalyser(this IConfig config) Parameters Type Name Description IConfig config Returns Type Description IAnalyser GetCompositeDiagnoser(IConfig) Declaration public static IDiagnoser GetCompositeDiagnoser(this IConfig config) Parameters Type Name Description IConfig config Returns Type Description IDiagnoser GetCompositeDiagnoser(IConfig, Benchmark, RunMode) Declaration public static IDiagnoser GetCompositeDiagnoser(this IConfig config, Benchmark benchmark, RunMode runMode) Parameters Type Name Description IConfig config Benchmark benchmark RunMode runMode Returns Type Description IDiagnoser GetCompositeExporter(IConfig) Declaration public static IExporter GetCompositeExporter(this IConfig config) Parameters Type Name Description IConfig config Returns Type Description IExporter GetCompositeLogger(IConfig) Declaration public static ILogger GetCompositeLogger(this IConfig config) Parameters Type Name Description IConfig config Returns Type Description ILogger GetCompositeValidator(IConfig) Declaration public static IValidator GetCompositeValidator(this IConfig config) Parameters Type Name Description IConfig config Returns Type Description IValidator HasMemoryDiagnoser(IConfig) Declaration public static bool HasMemoryDiagnoser(this IConfig config) Parameters Type Name Description IConfig config Returns Type Description System.Boolean KeepBenchmarkFiles(IConfig, Boolean) Declaration public static IConfig KeepBenchmarkFiles(this IConfig config, bool value = true) Parameters Type Name Description IConfig config System.Boolean value Returns Type Description IConfig RemoveBenchmarkFiles(IConfig) Declaration public static IConfig RemoveBenchmarkFiles(this IConfig config) Parameters Type Name Description IConfig config Returns Type Description IConfig With(IConfig, IAnalyser[]) Declaration public static IConfig With(this IConfig config, params IAnalyser[] analysers) Parameters Type Name Description IConfig config IAnalyser [] analysers Returns Type Description IConfig With(IConfig, IColumn[]) Declaration public static IConfig With(this IConfig config, params IColumn[] columns) Parameters Type Name Description IConfig config IColumn [] columns Returns Type Description IConfig With(IConfig, IColumnProvider[]) Declaration public static IConfig With(this IConfig config, params IColumnProvider[] columnProviders) Parameters Type Name Description IConfig config IColumnProvider [] columnProviders Returns Type Description IConfig With(IConfig, BenchmarkLogicalGroupRule[]) Declaration public static IConfig With(this IConfig config, params BenchmarkLogicalGroupRule[] rules) Parameters Type Name Description IConfig config BenchmarkLogicalGroupRule [] rules Returns Type Description IConfig With(IConfig, HardwareCounter[]) Declaration public static IConfig With(this IConfig config, params HardwareCounter[] counters) Parameters Type Name Description IConfig config HardwareCounter [] counters Returns Type Description IConfig With(IConfig, IDiagnoser[]) Declaration public static IConfig With(this IConfig config, params IDiagnoser[] diagnosers) Parameters Type Name Description IConfig config IDiagnoser [] diagnosers Returns Type Description IConfig With(IConfig, IExporter[]) Declaration public static IConfig With(this IConfig config, params IExporter[] exporters) Parameters Type Name Description IConfig config IExporter [] exporters Returns Type Description IConfig With(IConfig, IFilter[]) Declaration public static IConfig With(this IConfig config, params IFilter[] filters) Parameters Type Name Description IConfig config IFilter [] filters Returns Type Description IConfig With(IConfig, Job[]) Declaration public static IConfig With(this IConfig config, params Job[] jobs) Parameters Type Name Description IConfig config Job [] jobs Returns Type Description IConfig With(IConfig, ILogger[]) Declaration public static IConfig With(this IConfig config, params ILogger[] loggers) Parameters Type Name Description IConfig config ILogger [] loggers Returns Type Description IConfig With(IConfig, IOrderProvider) Declaration public static IConfig With(this IConfig config, IOrderProvider provider) Parameters Type Name Description IConfig config IOrderProvider provider Returns Type Description IConfig With(IConfig, IValidator[]) Declaration public static IConfig With(this IConfig config, params IValidator[] validators) Parameters Type Name Description IConfig config IValidator [] validators Returns Type Description IConfig WithArtifactsPath(IConfig, String) Declaration public static IConfig WithArtifactsPath(this IConfig config, string artifactsPath) Parameters Type Name Description IConfig config System.String artifactsPath Returns Type Description IConfig"
  },
  "api/BenchmarkDotNet.Attributes.Jobs.CoreRtJobAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Jobs.CoreRtJobAttribute.html",
    "title": "Class CoreRtJobAttribute | BenchmarkDotNet",
    "keywords": "Class CoreRtJobAttribute Inheritance System.Object System.Attribute JobConfigBaseAttribute CoreRtJobAttribute Implements IConfigSource Inherited Members JobConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Jobs Assembly : BenchmarkDotNet.dll Syntax public class CoreRtJobAttribute : JobConfigBaseAttribute, IConfigSource Constructors CoreRtJobAttribute(Boolean) Declaration public CoreRtJobAttribute(bool isBaseline = false) Parameters Type Name Description System.Boolean isBaseline Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Jobs.DryClrJobAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Jobs.DryClrJobAttribute.html",
    "title": "Class DryClrJobAttribute | BenchmarkDotNet",
    "keywords": "Class DryClrJobAttribute Inheritance System.Object System.Attribute JobConfigBaseAttribute DryClrJobAttribute Implements IConfigSource Inherited Members JobConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Jobs Assembly : BenchmarkDotNet.dll Syntax public class DryClrJobAttribute : JobConfigBaseAttribute, IConfigSource Constructors DryClrJobAttribute() Declaration public DryClrJobAttribute() DryClrJobAttribute(Jit) Declaration public DryClrJobAttribute(Jit jit) Parameters Type Name Description Jit jit DryClrJobAttribute(Jit, Platform) Declaration public DryClrJobAttribute(Jit jit, Platform platform) Parameters Type Name Description Jit jit Platform platform DryClrJobAttribute(Platform) Declaration public DryClrJobAttribute(Platform platform) Parameters Type Name Description Platform platform Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Jobs.SimpleJobAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Jobs.SimpleJobAttribute.html",
    "title": "Class SimpleJobAttribute | BenchmarkDotNet",
    "keywords": "Class SimpleJobAttribute Inheritance System.Object System.Attribute JobConfigBaseAttribute SimpleJobAttribute Implements IConfigSource Inherited Members JobConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Jobs Assembly : BenchmarkDotNet.dll Syntax [AttributeUsage(AttributeTargets.Assembly | AttributeTargets.Class, AllowMultiple = true)] public class SimpleJobAttribute : JobConfigBaseAttribute, IConfigSource Constructors SimpleJobAttribute(RunStrategy, Int32, Int32, Int32, Int32, String, Boolean) Declaration public SimpleJobAttribute(RunStrategy runStrategy, int launchCount = -1, int warmupCount = -1, int targetCount = -1, int invocationCount = -1, string id = null, bool isBaseline = false) Parameters Type Name Description RunStrategy runStrategy System.Int32 launchCount System.Int32 warmupCount System.Int32 targetCount System.Int32 invocationCount System.String id System.Boolean isBaseline SimpleJobAttribute(Int32, Int32, Int32, Int32, String, Boolean) Declaration public SimpleJobAttribute(int launchCount = -1, int warmupCount = -1, int targetCount = -1, int invocationCount = -1, string id = null, bool isBaseline = false) Parameters Type Name Description System.Int32 launchCount System.Int32 warmupCount System.Int32 targetCount System.Int32 invocationCount System.String id System.Boolean isBaseline Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Jobs.VeryLongRunJobAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Jobs.VeryLongRunJobAttribute.html",
    "title": "Class VeryLongRunJobAttribute | BenchmarkDotNet",
    "keywords": "Class VeryLongRunJobAttribute Inheritance System.Object System.Attribute JobConfigBaseAttribute VeryLongRunJobAttribute Implements IConfigSource Inherited Members JobConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Jobs Assembly : BenchmarkDotNet.dll Syntax public class VeryLongRunJobAttribute : JobConfigBaseAttribute, IConfigSource Constructors VeryLongRunJobAttribute() Declaration public VeryLongRunJobAttribute() Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Characteristics.Characteristic.html": {
    "href": "api/BenchmarkDotNet.Characteristics.Characteristic.html",
    "title": "Class Characteristic | BenchmarkDotNet",
    "keywords": "Class Characteristic Inheritance System.Object Characteristic Characteristic <T> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Characteristics Assembly : BenchmarkDotNet.dll Syntax public abstract class Characteristic Constructors Characteristic(String, Type, Type, Object, Boolean) Declaration protected Characteristic(string id, Type characteristicType, Type declaringType, object fallbackValue, bool ignoreOnApply) Parameters Type Name Description System.String id System.Type characteristicType System.Type declaringType System.Object fallbackValue System.Boolean ignoreOnApply Fields EmptyValue Declaration public static readonly object EmptyValue Field Value Type Description System.Object Properties CharacteristicType Declaration public Type CharacteristicType { get; } Property Value Type Description System.Type DeclaringType Declaration public Type DeclaringType { get; } Property Value Type Description System.Type FallbackValue Declaration public object FallbackValue { get; } Property Value Type Description System.Object FullId Declaration public string FullId { get; } Property Value Type Description System.String HasChildCharacteristics Declaration public bool HasChildCharacteristics { get; } Property Value Type Description System.Boolean Id Declaration public string Id { get; } Property Value Type Description System.String IgnoreOnApply Declaration public bool IgnoreOnApply { get; } Property Value Type Description System.Boolean Item[CharacteristicObject] Declaration public object this[CharacteristicObject obj] { get; set; } Parameters Type Name Description CharacteristicObject obj Property Value Type Description System.Object Methods Create<TOwner, T>(String) Declaration public static Characteristic<T> Create<TOwner, T>(string memberName) where TOwner : CharacteristicObject Parameters Type Name Description System.String memberName Returns Type Description Characteristic <T> Type Parameters Name Description TOwner T Create<TOwner, T>(String, T) Declaration public static Characteristic<T> Create<TOwner, T>(string memberName, T fallbackValue) where TOwner : CharacteristicObject Parameters Type Name Description System.String memberName T fallbackValue Returns Type Description Characteristic <T> Type Parameters Name Description TOwner T Create<TOwner, T>(String, Func<CharacteristicObject, T, T>, T, Boolean) Declaration public static Characteristic<T> Create<TOwner, T>(string memberName, Func<CharacteristicObject, T, T> resolver, T fallbackValue, bool ignoreOnApply) where TOwner : CharacteristicObject Parameters Type Name Description System.String memberName System.Func < CharacteristicObject , T, T> resolver T fallbackValue System.Boolean ignoreOnApply Returns Type Description Characteristic <T> Type Parameters Name Description TOwner T ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods CharacteristicHelper.IsPresentableCharacteristic(Characteristic, Boolean) CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Characteristics.CharacteristicHelper.html": {
    "href": "api/BenchmarkDotNet.Characteristics.CharacteristicHelper.html",
    "title": "Class CharacteristicHelper | BenchmarkDotNet",
    "keywords": "Class CharacteristicHelper Inheritance System.Object CharacteristicHelper Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Characteristics Assembly : BenchmarkDotNet.dll Syntax public static class CharacteristicHelper Methods GetAllCharacteristics(CharacteristicObject) Declaration public static IReadOnlyList<Characteristic> GetAllCharacteristics(this CharacteristicObject obj) Parameters Type Name Description CharacteristicObject obj Returns Type Description System.Collections.Generic.IReadOnlyList < Characteristic > GetAllCharacteristics(Type) Declaration public static IReadOnlyList<Characteristic> GetAllCharacteristics(Type characteristicObjectType) Parameters Type Name Description System.Type characteristicObjectType Returns Type Description System.Collections.Generic.IReadOnlyList < Characteristic > GetAllPresentableCharacteristics(Type, Boolean) Declaration public static IReadOnlyList<Characteristic> GetAllPresentableCharacteristics(Type characteristicObjectType, bool includeIgnoreOnApply = false) Parameters Type Name Description System.Type characteristicObjectType System.Boolean includeIgnoreOnApply Returns Type Description System.Collections.Generic.IReadOnlyList < Characteristic > GetThisTypeCharacteristics(CharacteristicObject) Declaration public static IReadOnlyList<Characteristic> GetThisTypeCharacteristics(this CharacteristicObject obj) Parameters Type Name Description CharacteristicObject obj Returns Type Description System.Collections.Generic.IReadOnlyList < Characteristic > GetThisTypeCharacteristics(Type) Declaration public static IReadOnlyList<Characteristic> GetThisTypeCharacteristics(Type characteristicObjectType) Parameters Type Name Description System.Type characteristicObjectType Returns Type Description System.Collections.Generic.IReadOnlyList < Characteristic > IsPresentableCharacteristic(Characteristic, Boolean) Declaration public static bool IsPresentableCharacteristic(this Characteristic c, bool includeIgnoreOnApply = false) Parameters Type Name Description Characteristic c System.Boolean includeIgnoreOnApply Returns Type Description System.Boolean"
  },
  "api/BenchmarkDotNet.Columns.CategoriesColumn.html": {
    "href": "api/BenchmarkDotNet.Columns.CategoriesColumn.html",
    "title": "Class CategoriesColumn | BenchmarkDotNet",
    "keywords": "Class CategoriesColumn Inheritance System.Object CategoriesColumn Implements IColumn Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Columns Assembly : BenchmarkDotNet.dll Syntax public class CategoriesColumn : IColumn Fields Default Declaration public static readonly IColumn Default Field Value Type Description IColumn Properties AlwaysShow Declaration public bool AlwaysShow { get; } Property Value Type Description System.Boolean Category Declaration public ColumnCategory Category { get; } Property Value Type Description ColumnCategory ColumnName Declaration public string ColumnName { get; } Property Value Type Description System.String Id Declaration public string Id { get; } Property Value Type Description System.String IsNumeric Declaration public bool IsNumeric { get; } Property Value Type Description System.Boolean Legend Declaration public string Legend { get; } Property Value Type Description System.String PriorityInCategory Declaration public int PriorityInCategory { get; } Property Value Type Description System.Int32 UnitType Declaration public UnitType UnitType { get; } Property Value Type Description UnitType Methods GetValue(Summary, Benchmark) Declaration public string GetValue(Summary summary, Benchmark benchmark) Parameters Type Name Description Summary summary Benchmark benchmark Returns Type Description System.String GetValue(Summary, Benchmark, ISummaryStyle) Declaration public string GetValue(Summary summary, Benchmark benchmark, ISummaryStyle style) Parameters Type Name Description Summary summary Benchmark benchmark ISummaryStyle style Returns Type Description System.String IsAvailable(Summary) Declaration public bool IsAvailable(Summary summary) Parameters Type Name Description Summary summary Returns Type Description System.Boolean IsDefault(Summary, Benchmark) Declaration public bool IsDefault(Summary summary, Benchmark benchmark) Parameters Type Name Description Summary summary Benchmark benchmark Returns Type Description System.Boolean Implements IColumn Extension Methods ColumnExtensions.ToProvider(IColumn) CommonExtensions.GetColumnTitle(IColumn, ISummaryStyle) CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Columns.ColumnCategory.html": {
    "href": "api/BenchmarkDotNet.Columns.ColumnCategory.html",
    "title": "Enum ColumnCategory | BenchmarkDotNet",
    "keywords": "Enum ColumnCategory Namespace : BenchmarkDotNet.Columns Assembly : BenchmarkDotNet.dll Syntax public enum ColumnCategory Fields Name Description Baseline Custom Diagnoser Job Meta Params Statistics Extension Methods CommonExtensions.IsOneOf<ColumnCategory>(ColumnCategory[])"
  },
  "api/BenchmarkDotNet.Attributes.Columns.ConfidenceIntervalErrorColumnAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Columns.ConfidenceIntervalErrorColumnAttribute.html",
    "title": "Class ConfidenceIntervalErrorColumnAttribute | BenchmarkDotNet",
    "keywords": "Class ConfidenceIntervalErrorColumnAttribute Inheritance System.Object System.Attribute ColumnConfigBaseAttribute ConfidenceIntervalErrorColumnAttribute Implements IConfigSource Inherited Members ColumnConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Columns Assembly : BenchmarkDotNet.dll Syntax public class ConfidenceIntervalErrorColumnAttribute : ColumnConfigBaseAttribute, IConfigSource Constructors ConfidenceIntervalErrorColumnAttribute(ConfidenceLevel) Declaration public ConfidenceIntervalErrorColumnAttribute(ConfidenceLevel level = ConfidenceLevel.L999) Parameters Type Name Description ConfidenceLevel level Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Validators.ValidatorConfigBaseAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Validators.ValidatorConfigBaseAttribute.html",
    "title": "Class ValidatorConfigBaseAttribute | BenchmarkDotNet",
    "keywords": "Class ValidatorConfigBaseAttribute Inheritance System.Object System.Attribute ValidatorConfigBaseAttribute ExecutionValidatorAttribute ReturnValueValidatorAttribute Implements IConfigSource Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Validators Assembly : BenchmarkDotNet.dll Syntax [AttributeUsage(AttributeTargets.Assembly | AttributeTargets.Class)] public abstract class ValidatorConfigBaseAttribute : Attribute, IConfigSource Constructors ValidatorConfigBaseAttribute() Declaration protected ValidatorConfigBaseAttribute() ValidatorConfigBaseAttribute(IValidator[]) Declaration protected ValidatorConfigBaseAttribute(params IValidator[] validators) Parameters Type Name Description IValidator [] validators Properties Config Declaration public IConfig Config { get; } Property Value Type Description IConfig Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Engines.HostExtensions.html": {
    "href": "api/BenchmarkDotNet.Engines.HostExtensions.html",
    "title": "Class HostExtensions | BenchmarkDotNet",
    "keywords": "Class HostExtensions Inheritance System.Object HostExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Engines Assembly : BenchmarkDotNet.dll Syntax public static class HostExtensions Methods AfterAll(IHost) Declaration public static void AfterAll(this IHost host) Parameters Type Name Description IHost host AfterMainRun(IHost) Declaration public static void AfterMainRun(this IHost host) Parameters Type Name Description IHost host BeforeAnythingElse(IHost) Declaration public static void BeforeAnythingElse(this IHost host) Parameters Type Name Description IHost host BeforeMainRun(IHost) Declaration public static void BeforeMainRun(this IHost host) Parameters Type Name Description IHost host WriteLine(IHost, String, Object[]) Declaration public static void WriteLine(this IHost host, string messageFormat, params object[] args) Parameters Type Name Description IHost host System.String messageFormat System.Object [] args"
  },
  "api/BenchmarkDotNet.Engines.HostSignal.html": {
    "href": "api/BenchmarkDotNet.Engines.HostSignal.html",
    "title": "Enum HostSignal | BenchmarkDotNet",
    "keywords": "Enum HostSignal Namespace : BenchmarkDotNet.Engines Assembly : BenchmarkDotNet.dll Syntax public enum HostSignal Fields Name Description AfterAll after all (the last thing the benchmarking engine does is to fire this signal) AfterMainRun after main run, but before global Cleanup BeforeAnythingElse before jitting, warmup BeforeMainRun after globalSetup, warmup and pilot but before the main run SeparateLogic used to run some code independent to the benchmarked process Extension Methods CommonExtensions.IsOneOf<HostSignal>(HostSignal[])"
  },
  "api/BenchmarkDotNet.Environments.Jit.html": {
    "href": "api/BenchmarkDotNet.Environments.Jit.html",
    "title": "Enum Jit | BenchmarkDotNet",
    "keywords": "Enum Jit Namespace : BenchmarkDotNet.Environments Assembly : BenchmarkDotNet.dll Syntax public enum Jit Fields Name Description Default Default By default LegacyJit LegacyJIT Supported only for Full Framework Llvm LLVM Supported only for Mono RyuJit RyuJIT Full Framework or CoreCLR Extension Methods CommonExtensions.IsOneOf<Jit>(Jit[]) ConfigurationExtensions.ToConfig()"
  },
  "api/BenchmarkDotNet.Environments.MonoRuntime.html": {
    "href": "api/BenchmarkDotNet.Environments.MonoRuntime.html",
    "title": "Class MonoRuntime | BenchmarkDotNet",
    "keywords": "Class MonoRuntime Inheritance System.Object Runtime MonoRuntime Implements System.IEquatable < Runtime > System.IEquatable < MonoRuntime > Inherited Members Runtime.Clr Runtime.Mono Runtime.Core Runtime.CoreRT Runtime.Name Runtime.ToString() Runtime.Equals(Runtime) System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Environments Assembly : BenchmarkDotNet.dll Syntax public class MonoRuntime : Runtime, IEquatable<Runtime>, IEquatable<MonoRuntime> Constructors MonoRuntime() Declaration public MonoRuntime() MonoRuntime(String, String) Declaration public MonoRuntime(string name, string customPath) Parameters Type Name Description System.String name System.String customPath Properties CustomPath Declaration public string CustomPath { get; } Property Value Type Description System.String Methods Equals(MonoRuntime) Declaration public bool Equals(MonoRuntime other) Parameters Type Name Description MonoRuntime other Returns Type Description System.Boolean Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides Runtime.Equals(Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides Runtime.GetHashCode() Implements System.IEquatable<T> System.IEquatable<T> Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Portability.Antivirus.html": {
    "href": "api/BenchmarkDotNet.Portability.Antivirus.html",
    "title": "Class Antivirus | BenchmarkDotNet",
    "keywords": "Class Antivirus Inheritance System.Object Antivirus Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Portability Assembly : BenchmarkDotNet.dll Syntax public class Antivirus Constructors Antivirus(String, String) Declaration public Antivirus(string name, string path) Parameters Type Name Description System.String name System.String path Properties Name Declaration public string Name { get; } Property Value Type Description System.String Path Declaration public string Path { get; } Property Value Type Description System.String Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.ParamsAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.ParamsAttribute.html",
    "title": "Class ParamsAttribute | BenchmarkDotNet",
    "keywords": "Class ParamsAttribute Inheritance System.Object System.Attribute ParamsAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes Assembly : BenchmarkDotNet.dll Syntax [AttributeUsage(AttributeTargets.Field | AttributeTargets.Property)] public class ParamsAttribute : Attribute Constructors ParamsAttribute() Declaration public ParamsAttribute() ParamsAttribute(Object[]) Declaration public ParamsAttribute(params object[] values) Parameters Type Name Description System.Object [] values Properties Values Declaration public object[] Values { get; } Property Value Type Description System.Object [] Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.ParamsSourceAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.ParamsSourceAttribute.html",
    "title": "Class ParamsSourceAttribute | BenchmarkDotNet",
    "keywords": "Class ParamsSourceAttribute Inheritance System.Object System.Attribute ParamsSourceAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes Assembly : BenchmarkDotNet.dll Syntax [AttributeUsage(AttributeTargets.Field | AttributeTargets.Property)] public class ParamsSourceAttribute : Attribute Constructors ParamsSourceAttribute(String) Declaration public ParamsSourceAttribute(string name) Parameters Type Name Description System.String name Properties Name Declaration public string Name { get; } Property Value Type Description System.String Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Characteristics.CharacteristicPresenter.html": {
    "href": "api/BenchmarkDotNet.Characteristics.CharacteristicPresenter.html",
    "title": "Class CharacteristicPresenter | BenchmarkDotNet",
    "keywords": "Class CharacteristicPresenter Inheritance System.Object CharacteristicPresenter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Characteristics Assembly : BenchmarkDotNet.dll Syntax public abstract class CharacteristicPresenter Fields DefaultPresenter Declaration public static readonly CharacteristicPresenter DefaultPresenter Field Value Type Description CharacteristicPresenter FolderPresenter Declaration public static readonly CharacteristicPresenter FolderPresenter Field Value Type Description CharacteristicPresenter SourceCodePresenter Declaration public static readonly CharacteristicPresenter SourceCodePresenter Field Value Type Description CharacteristicPresenter SummaryPresenter Declaration public static readonly CharacteristicPresenter SummaryPresenter Field Value Type Description CharacteristicPresenter Methods ToPresentation(CharacteristicObject, Characteristic) Declaration public abstract string ToPresentation(CharacteristicObject obj, Characteristic characteristic) Parameters Type Name Description CharacteristicObject obj Characteristic characteristic Returns Type Description System.String Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Characteristics.CharacteristicSet.html": {
    "href": "api/BenchmarkDotNet.Characteristics.CharacteristicSet.html",
    "title": "Class CharacteristicSet | BenchmarkDotNet",
    "keywords": "Class CharacteristicSet Inheritance System.Object CharacteristicObject CharacteristicObject < CharacteristicSet > CharacteristicSet Inherited Members CharacteristicObject<CharacteristicSet>.Apply(CharacteristicObject) CharacteristicObject<CharacteristicSet>.Apply(CharacteristicObject[]) CharacteristicObject<CharacteristicSet>.ApplyAndFreeze(CharacteristicObject) CharacteristicObject<CharacteristicSet>.ApplyAndFreeze(CharacteristicObject[]) CharacteristicObject<CharacteristicSet>.Freeze() CharacteristicObject<CharacteristicSet>.UnfreezeCopy() CharacteristicObject<CharacteristicSet>.CreateCharacteristic<TC>(String) CharacteristicObject.ResolveId(CharacteristicObject, String) CharacteristicObject.IdCharacteristic CharacteristicObject.AssertNotFrozen() CharacteristicObject.AssertIsRoot() CharacteristicObject.AssertIsNonFrozenRoot() CharacteristicObject.AssertIsAssignable(Characteristic, Object) CharacteristicObject.Owner CharacteristicObject.OwnerOrSelf CharacteristicObject.Frozen CharacteristicObject.HasChanges CharacteristicObject.GetCharacteristicsWithValues() CharacteristicObject.HasValue(Characteristic) CharacteristicObject.ResolveValue<T>(Characteristic<T>, IResolver) CharacteristicObject.ResolveValue(Characteristic, IResolver) CharacteristicObject.ResolveValue<T>(Characteristic<T>, T) CharacteristicObject.ResolveValue(Characteristic, Object) CharacteristicObject.ResolveValueAsNullable<T>(Characteristic<T>) CharacteristicObject.ApplyCore(CharacteristicObject) CharacteristicObject.FreezeCore() CharacteristicObject.UnfreezeCopyCore() CharacteristicObject.Id CharacteristicObject.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Characteristics Assembly : BenchmarkDotNet.dll Syntax public sealed class CharacteristicSet : CharacteristicObject<CharacteristicSet> Constructors CharacteristicSet() Declaration public CharacteristicSet() CharacteristicSet(CharacteristicObject) Declaration public CharacteristicSet(CharacteristicObject other) Parameters Type Name Description CharacteristicObject other CharacteristicSet(CharacteristicObject[]) Declaration public CharacteristicSet(params CharacteristicObject[] others) Parameters Type Name Description CharacteristicObject [] others Properties IsPropertyBag Declaration protected override bool IsPropertyBag { get; } Property Value Type Description System.Boolean Overrides CharacteristicObject.IsPropertyBag Extension Methods CharacteristicHelper.GetThisTypeCharacteristics(CharacteristicObject) CharacteristicHelper.GetAllCharacteristics(CharacteristicObject) CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Columns.DefaultColumnProviders.html": {
    "href": "api/BenchmarkDotNet.Columns.DefaultColumnProviders.html",
    "title": "Class DefaultColumnProviders | BenchmarkDotNet",
    "keywords": "Class DefaultColumnProviders Inheritance System.Object DefaultColumnProviders Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Columns Assembly : BenchmarkDotNet.dll Syntax public static class DefaultColumnProviders Fields Diagnosers Declaration public static readonly IColumnProvider Diagnosers Field Value Type Description IColumnProvider Instance Declaration public static readonly IColumnProvider[] Instance Field Value Type Description IColumnProvider [] Job Declaration public static readonly IColumnProvider Job Field Value Type Description IColumnProvider Params Declaration public static readonly IColumnProvider Params Field Value Type Description IColumnProvider Statistics Declaration public static readonly IColumnProvider Statistics Field Value Type Description IColumnProvider Target Declaration public static readonly IColumnProvider Target Field Value Type Description IColumnProvider"
  },
  "api/BenchmarkDotNet.Columns.EmptyColumnProvider.html": {
    "href": "api/BenchmarkDotNet.Columns.EmptyColumnProvider.html",
    "title": "Class EmptyColumnProvider | BenchmarkDotNet",
    "keywords": "Class EmptyColumnProvider Inheritance System.Object EmptyColumnProvider Implements IColumnProvider Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Columns Assembly : BenchmarkDotNet.dll Syntax public class EmptyColumnProvider : IColumnProvider Fields Instance Declaration public static readonly IColumnProvider Instance Field Value Type Description IColumnProvider Methods GetColumns(Summary) Declaration public IEnumerable<IColumn> GetColumns(Summary summary) Parameters Type Name Description Summary summary Returns Type Description System.Collections.Generic.IEnumerable < IColumn > Implements IColumnProvider Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Configs.BenchmarkLogicalGroupRule.html": {
    "href": "api/BenchmarkDotNet.Configs.BenchmarkLogicalGroupRule.html",
    "title": "Enum BenchmarkLogicalGroupRule | BenchmarkDotNet",
    "keywords": "Enum BenchmarkLogicalGroupRule Namespace : BenchmarkDotNet.Configs Assembly : BenchmarkDotNet.dll Syntax public enum BenchmarkLogicalGroupRule Fields Name Description ByCategory ByJob ByMethod ByParams Extension Methods CommonExtensions.IsOneOf<BenchmarkLogicalGroupRule>(BenchmarkLogicalGroupRule[])"
  },
  "api/BenchmarkDotNet.Toolchains.DotNetCli.DotNetCliPublisher.html": {
    "href": "api/BenchmarkDotNet.Toolchains.DotNetCli.DotNetCliPublisher.html",
    "title": "Class DotNetCliPublisher | BenchmarkDotNet",
    "keywords": "Class DotNetCliPublisher Inheritance System.Object DotNetCliPublisher Publisher Implements IBuilder Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Toolchains.DotNetCli Assembly : BenchmarkDotNet.dll Syntax public class DotNetCliPublisher : IBuilder Constructors DotNetCliPublisher(String) Declaration public DotNetCliPublisher(string customDotNetCliPath = null) Parameters Type Name Description System.String customDotNetCliPath Methods Build(GenerateResult, BuildPartition, ILogger) Declaration public BuildResult Build(GenerateResult generateResult, BuildPartition buildPartition, ILogger logger) Parameters Type Name Description GenerateResult generateResult BuildPartition buildPartition ILogger logger Returns Type Description BuildResult GetEnvironmentVariables() Declaration protected virtual IReadOnlyList<EnvironmentVariable> GetEnvironmentVariables() Returns Type Description System.Collections.Generic.IReadOnlyList < EnvironmentVariable > GetExtraArguments(BuildPartition) Declaration protected virtual string GetExtraArguments(BuildPartition buildPartition) Parameters Type Name Description BuildPartition buildPartition Returns Type Description System.String Implements IBuilder Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Toolchains.DotNetCli.NetCoreAppSettings.html": {
    "href": "api/BenchmarkDotNet.Toolchains.DotNetCli.NetCoreAppSettings.html",
    "title": "Class NetCoreAppSettings | BenchmarkDotNet",
    "keywords": "Class NetCoreAppSettings custom settings used in the auto-generated project.json / .csproj file Inheritance System.Object NetCoreAppSettings Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Toolchains.DotNetCli Assembly : BenchmarkDotNet.dll Syntax public class NetCoreAppSettings Constructors NetCoreAppSettings(String, String, String, String) sample values: netcoreapp2.0, netcoreapp2.1 used in the auto-generated .csproj file simply ignored if null or empty display name used for showing the results customize dotnet cli path if default is not desired simply ignored if null Declaration public NetCoreAppSettings(string targetFrameworkMoniker, string runtimeFrameworkVersion, string name, string customDotNetCliPath = null) Parameters Type Name Description System.String targetFrameworkMoniker System.String runtimeFrameworkVersion System.String name System.String customDotNetCliPath Fields NetCoreApp20 Declaration public static readonly NetCoreAppSettings NetCoreApp20 Field Value Type Description NetCoreAppSettings NetCoreApp21 Declaration public static readonly NetCoreAppSettings NetCoreApp21 Field Value Type Description NetCoreAppSettings NetCoreApp22 Declaration public static readonly NetCoreAppSettings NetCoreApp22 Field Value Type Description NetCoreAppSettings Properties CustomDotNetCliPath Declaration public string CustomDotNetCliPath { get; } Property Value Type Description System.String Name display name used for showing the results Declaration public string Name { get; } Property Value Type Description System.String RuntimeFrameworkVersion Declaration public string RuntimeFrameworkVersion { get; } Property Value Type Description System.String TargetFrameworkMoniker sample values: netcoreapp2.0, netcoreapp2.1 Declaration public string TargetFrameworkMoniker { get; } Property Value Type Description System.String Methods WithCustomDotNetCliPath(String, String) Declaration public NetCoreAppSettings WithCustomDotNetCliPath(string customDotNetCliPath, string displayName) Parameters Type Name Description System.String customDotNetCliPath System.String displayName Returns Type Description NetCoreAppSettings Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Toolchains.Executor.html": {
    "href": "api/BenchmarkDotNet.Toolchains.Executor.html",
    "title": "Class Executor | BenchmarkDotNet",
    "keywords": "Class Executor Inheritance System.Object Executor Implements IExecutor Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Toolchains Assembly : BenchmarkDotNet.dll Syntax public class Executor : IExecutor Methods Execute(ExecuteParameters) Declaration public ExecuteResult Execute(ExecuteParameters executeParameters) Parameters Type Name Description ExecuteParameters executeParameters Returns Type Description ExecuteResult Implements IExecutor Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Validators.CompilationValidator.html": {
    "href": "api/BenchmarkDotNet.Validators.CompilationValidator.html",
    "title": "Class CompilationValidator | BenchmarkDotNet",
    "keywords": "Class CompilationValidator Inheritance System.Object CompilationValidator Implements IValidator Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Validators Assembly : BenchmarkDotNet.dll Syntax public class CompilationValidator : IValidator Fields Default Declaration public static readonly IValidator Default Field Value Type Description IValidator Properties TreatsWarningsAsErrors Declaration public bool TreatsWarningsAsErrors { get; } Property Value Type Description System.Boolean Methods Validate(ValidationParameters) Declaration public IEnumerable<ValidationError> Validate(ValidationParameters validationParameters) Parameters Type Name Description ValidationParameters validationParameters Returns Type Description System.Collections.Generic.IEnumerable < ValidationError > Implements IValidator Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Validators.ConfigValidator.html": {
    "href": "api/BenchmarkDotNet.Validators.ConfigValidator.html",
    "title": "Class ConfigValidator | BenchmarkDotNet",
    "keywords": "Class ConfigValidator Inheritance System.Object ConfigValidator Implements IValidator Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Validators Assembly : BenchmarkDotNet.dll Syntax public class ConfigValidator : IValidator Fields Default Declaration public static readonly IValidator Default Field Value Type Description IValidator Properties TreatsWarningsAsErrors Declaration public bool TreatsWarningsAsErrors { get; } Property Value Type Description System.Boolean Methods Validate(ValidationParameters) Declaration public IEnumerable<ValidationError> Validate(ValidationParameters validationParameters) Parameters Type Name Description ValidationParameters validationParameters Returns Type Description System.Collections.Generic.IEnumerable < ValidationError > Implements IValidator Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Validators.DiagnosersValidator.html": {
    "href": "api/BenchmarkDotNet.Validators.DiagnosersValidator.html",
    "title": "Class DiagnosersValidator | BenchmarkDotNet",
    "keywords": "Class DiagnosersValidator Inheritance System.Object DiagnosersValidator Implements IValidator Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Validators Assembly : BenchmarkDotNet.dll Syntax public class DiagnosersValidator : IValidator Fields Default Declaration public static readonly IValidator Default Field Value Type Description IValidator Properties TreatsWarningsAsErrors Declaration public bool TreatsWarningsAsErrors { get; } Property Value Type Description System.Boolean Methods Validate(ValidationParameters) Declaration public IEnumerable<ValidationError> Validate(ValidationParameters validationParameters) Parameters Type Name Description ValidationParameters validationParameters Returns Type Description System.Collections.Generic.IEnumerable < ValidationError > Implements IValidator Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Toolchains.CsProj.CsProjGenerator.html": {
    "href": "api/BenchmarkDotNet.Toolchains.CsProj.CsProjGenerator.html",
    "title": "Class CsProjGenerator | BenchmarkDotNet",
    "keywords": "Class CsProjGenerator Inheritance System.Object GeneratorBase DotNetCliGenerator CsProjGenerator Generator Generator Implements IGenerator Inherited Members DotNetCliGenerator.TargetFrameworkMoniker DotNetCliGenerator.PlatformProvider DotNetCliGenerator.Runtime DotNetCliGenerator.ExtraDependencies DotNetCliGenerator.Imports DotNetCliGenerator.GetExecutableExtension() DotNetCliGenerator.GetArtifactsToCleanup(ArtifactsPaths) DotNetCliGenerator.CopyAllRequiredFiles(ArtifactsPaths) DotNetCliGenerator.GenerateBuildScript(BuildPartition, ArtifactsPaths) DotNetCliGenerator.SetPlatform(String, String) DotNetCliGenerator.SetCodeFileName(String, String) DotNetCliGenerator.SetTargetFrameworkMoniker(String, String) GeneratorBase.GenerateProject(BuildPartition, ILogger, String) GeneratorBase.GenerateNuGetConfig(ArtifactsPaths) GeneratorBase.GetPackagesDirectoryPath(String) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Toolchains.CsProj Assembly : BenchmarkDotNet.dll Syntax public class CsProjGenerator : DotNetCliGenerator, IGenerator Constructors CsProjGenerator(String, Func<Platform, String>, String) Declaration public CsProjGenerator(string targetFrameworkMoniker, Func<Platform, string> platformProvider, string runtimeFrameworkVersion = null) Parameters Type Name Description System.String targetFrameworkMoniker System.Func < Platform , System.String > platformProvider System.String runtimeFrameworkVersion Properties RuntimeFrameworkVersion Declaration public string RuntimeFrameworkVersion { get; } Property Value Type Description System.String Methods GenerateProject(BuildPartition, ArtifactsPaths, ILogger) Declaration protected override void GenerateProject(BuildPartition buildPartition, ArtifactsPaths artifactsPaths, ILogger logger) Parameters Type Name Description BuildPartition buildPartition ArtifactsPaths artifactsPaths ILogger logger Overrides GeneratorBase.GenerateProject(BuildPartition, ArtifactsPaths, ILogger) GetBinariesDirectoryPath(String, String) Declaration protected override string GetBinariesDirectoryPath(string buildArtifactsDirectoryPath, string configuration) Parameters Type Name Description System.String buildArtifactsDirectoryPath System.String configuration Returns Type Description System.String Overrides GeneratorBase.GetBinariesDirectoryPath(String, String) GetBuildArtifactsDirectoryPath(BuildPartition, String) Declaration protected override string GetBuildArtifactsDirectoryPath(BuildPartition buildPartition, string programName) Parameters Type Name Description BuildPartition buildPartition System.String programName Returns Type Description System.String Overrides DotNetCliGenerator.GetBuildArtifactsDirectoryPath(BuildPartition, String) GetProjectFilePath(String) Declaration protected override string GetProjectFilePath(string binariesDirectoryPath) Parameters Type Name Description System.String binariesDirectoryPath Returns Type Description System.String Overrides GeneratorBase.GetProjectFilePath(String) GetProjectFilePath(Type, ILogger) Declaration protected static FileInfo GetProjectFilePath(Type benchmarkTarget, ILogger logger) Parameters Type Name Description System.Type benchmarkTarget ILogger logger Returns Type Description System.IO.FileInfo GetRuntimeSettings(GcMode, IResolver) Declaration protected string GetRuntimeSettings(GcMode gcMode, IResolver resolver) Parameters Type Name Description GcMode gcMode IResolver resolver Returns Type Description System.String Implements IGenerator Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Diagnosers.DisassemblyAnalyzer.html": {
    "href": "api/BenchmarkDotNet.Diagnosers.DisassemblyAnalyzer.html",
    "title": "Class DisassemblyAnalyzer | BenchmarkDotNet",
    "keywords": "Class DisassemblyAnalyzer Inheritance System.Object DisassemblyAnalyzer Implements IAnalyser Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Diagnosers Assembly : BenchmarkDotNet.dll Syntax public class DisassemblyAnalyzer : IAnalyser Constructors DisassemblyAnalyzer(IReadOnlyDictionary<Benchmark, DisassemblyResult>) Declaration public DisassemblyAnalyzer(IReadOnlyDictionary<Benchmark, DisassemblyResult> results) Parameters Type Name Description System.Collections.Generic.IReadOnlyDictionary < Benchmark , DisassemblyResult > results Properties Id Declaration public string Id { get; } Property Value Type Description System.String Methods Analyse(Summary) Declaration public IEnumerable<Conclusion> Analyse(Summary summary) Parameters Type Name Description Summary summary Returns Type Description System.Collections.Generic.IEnumerable < Conclusion > Implements IAnalyser Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Diagnosers.DisassemblyDiagnoser.html": {
    "href": "api/BenchmarkDotNet.Diagnosers.DisassemblyDiagnoser.html",
    "title": "Class DisassemblyDiagnoser | BenchmarkDotNet",
    "keywords": "Class DisassemblyDiagnoser Inheritance System.Object DisassemblyDiagnoser Implements IConfigurableDiagnoser < DisassemblyDiagnoserConfig > IDiagnoser Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Diagnosers Assembly : BenchmarkDotNet.dll Syntax public class DisassemblyDiagnoser : IDisassemblyDiagnoser, IConfigurableDiagnoser<DisassemblyDiagnoserConfig>, IDiagnoser Properties Analysers Declaration public IEnumerable<IAnalyser> Analysers { get; } Property Value Type Description System.Collections.Generic.IEnumerable < IAnalyser > Exporters Declaration public IEnumerable<IExporter> Exporters { get; } Property Value Type Description System.Collections.Generic.IEnumerable < IExporter > Ids Declaration public IEnumerable<string> Ids { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.String > Results Declaration public IReadOnlyDictionary<Benchmark, DisassemblyResult> Results { get; } Property Value Type Description System.Collections.Generic.IReadOnlyDictionary < Benchmark , DisassemblyResult > Methods Configure(DisassemblyDiagnoserConfig) Declaration public IConfigurableDiagnoser<DisassemblyDiagnoserConfig> Configure(DisassemblyDiagnoserConfig config) Parameters Type Name Description DisassemblyDiagnoserConfig config Returns Type Description IConfigurableDiagnoser < DisassemblyDiagnoserConfig > Create(DisassemblyDiagnoserConfig) Declaration public static IConfigurableDiagnoser<DisassemblyDiagnoserConfig> Create(DisassemblyDiagnoserConfig config) Parameters Type Name Description DisassemblyDiagnoserConfig config Returns Type Description IConfigurableDiagnoser < DisassemblyDiagnoserConfig > DisplayResults(ILogger) Declaration public void DisplayResults(ILogger logger) Parameters Type Name Description ILogger logger GetColumnProvider() Declaration public IColumnProvider GetColumnProvider() Returns Type Description IColumnProvider GetRunMode(Benchmark) Declaration public RunMode GetRunMode(Benchmark benchmark) Parameters Type Name Description Benchmark benchmark Returns Type Description RunMode Handle(HostSignal, DiagnoserActionParameters) Declaration public void Handle(HostSignal signal, DiagnoserActionParameters parameters) Parameters Type Name Description HostSignal signal DiagnoserActionParameters parameters ProcessResults(DiagnoserResults) Declaration public void ProcessResults(DiagnoserResults _) Parameters Type Name Description DiagnoserResults _ Validate(ValidationParameters) Declaration public IEnumerable<ValidationError> Validate(ValidationParameters validationParameters) Parameters Type Name Description ValidationParameters validationParameters Returns Type Description System.Collections.Generic.IEnumerable < ValidationError > Implements IConfigurableDiagnoser<TConfig> IDiagnoser Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Diagnosers.Sharp.html": {
    "href": "api/BenchmarkDotNet.Diagnosers.Sharp.html",
    "title": "Class Sharp | BenchmarkDotNet",
    "keywords": "Class Sharp Inheritance System.Object Code Sharp Inherited Members Code.TextRepresentation Code.Comment System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Diagnosers Assembly : BenchmarkDotNet.dll Syntax public class Sharp : Code Properties FilePath Declaration public string FilePath { get; set; } Property Value Type Description System.String LineNumber Declaration public int LineNumber { get; set; } Property Value Type Description System.Int32 Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Columns.RankColumnAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Columns.RankColumnAttribute.html",
    "title": "Class RankColumnAttribute | BenchmarkDotNet",
    "keywords": "Class RankColumnAttribute Inheritance System.Object System.Attribute ColumnConfigBaseAttribute RankColumnAttribute Implements IConfigSource Inherited Members ColumnConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Columns Assembly : BenchmarkDotNet.dll Syntax [AttributeUsage(AttributeTargets.Assembly | AttributeTargets.Class, AllowMultiple = true)] public class RankColumnAttribute : ColumnConfigBaseAttribute, IConfigSource Constructors RankColumnAttribute(NumeralSystem) Declaration public RankColumnAttribute(NumeralSystem system = NumeralSystem.Arabic) Parameters Type Name Description NumeralSystem system Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Exporters.AsciiDocExporterAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Exporters.AsciiDocExporterAttribute.html",
    "title": "Class AsciiDocExporterAttribute | BenchmarkDotNet",
    "keywords": "Class AsciiDocExporterAttribute Inheritance System.Object System.Attribute ExporterConfigBaseAttribute AsciiDocExporterAttribute Implements IConfigSource Inherited Members ExporterConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Exporters Assembly : BenchmarkDotNet.dll Syntax public class AsciiDocExporterAttribute : ExporterConfigBaseAttribute, IConfigSource Constructors AsciiDocExporterAttribute() Declaration public AsciiDocExporterAttribute() Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Exporters.JsonExporterAttribute.FullCompressed.html": {
    "href": "api/BenchmarkDotNet.Attributes.Exporters.JsonExporterAttribute.FullCompressed.html",
    "title": "Class JsonExporterAttribute.FullCompressed | BenchmarkDotNet",
    "keywords": "Class JsonExporterAttribute.FullCompressed Inheritance System.Object System.Attribute ExporterConfigBaseAttribute JsonExporterAttribute JsonExporterAttribute.FullCompressed Implements IConfigSource Inherited Members ExporterConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Exporters Assembly : BenchmarkDotNet.dll Syntax public class FullCompressed : JsonExporterAttribute, IConfigSource Constructors FullCompressed() Declaration public FullCompressed() Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Exporters.XmlExporterAttribute.Brief.html": {
    "href": "api/BenchmarkDotNet.Attributes.Exporters.XmlExporterAttribute.Brief.html",
    "title": "Class XmlExporterAttribute.Brief | BenchmarkDotNet",
    "keywords": "Class XmlExporterAttribute.Brief Inheritance System.Object System.Attribute ExporterConfigBaseAttribute XmlExporterAttribute XmlExporterAttribute.Brief Implements IConfigSource Inherited Members ExporterConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Exporters Assembly : BenchmarkDotNet.dll Syntax public class Brief : XmlExporterAttribute, IConfigSource Constructors Brief() Declaration public Brief() Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Diagnosers.IConfigurableDiagnoser-1.html": {
    "href": "api/BenchmarkDotNet.Diagnosers.IConfigurableDiagnoser-1.html",
    "title": "Interface IConfigurableDiagnoser<TConfig> | BenchmarkDotNet",
    "keywords": "Interface IConfigurableDiagnoser<TConfig> Inherited Members IDiagnoser.Ids IDiagnoser.Exporters IDiagnoser.Analysers IDiagnoser.GetColumnProvider() IDiagnoser.GetRunMode(Benchmark) IDiagnoser.Handle(HostSignal, DiagnoserActionParameters) IDiagnoser.ProcessResults(DiagnoserResults) IDiagnoser.DisplayResults(ILogger) IDiagnoser.Validate(ValidationParameters) Namespace : BenchmarkDotNet.Diagnosers Assembly : BenchmarkDotNet.dll Syntax public interface IConfigurableDiagnoser<TConfig> : IDiagnoser Type Parameters Name Description TConfig Methods Configure(TConfig) Declaration IConfigurableDiagnoser<TConfig> Configure(TConfig config) Parameters Type Name Description TConfig config Returns Type Description IConfigurableDiagnoser <TConfig> Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Diagnosers.IDiagnoser.html": {
    "href": "api/BenchmarkDotNet.Diagnosers.IDiagnoser.html",
    "title": "Interface IDiagnoser | BenchmarkDotNet",
    "keywords": "Interface IDiagnoser Namespace : BenchmarkDotNet.Diagnosers Assembly : BenchmarkDotNet.dll Syntax public interface IDiagnoser Properties Analysers Declaration IEnumerable<IAnalyser> Analysers { get; } Property Value Type Description System.Collections.Generic.IEnumerable < IAnalyser > Exporters Declaration IEnumerable<IExporter> Exporters { get; } Property Value Type Description System.Collections.Generic.IEnumerable < IExporter > Ids Declaration IEnumerable<string> Ids { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.String > Methods DisplayResults(ILogger) Declaration void DisplayResults(ILogger logger) Parameters Type Name Description ILogger logger GetColumnProvider() Declaration IColumnProvider GetColumnProvider() Returns Type Description IColumnProvider GetRunMode(Benchmark) Declaration RunMode GetRunMode(Benchmark benchmark) Parameters Type Name Description Benchmark benchmark Returns Type Description RunMode Handle(HostSignal, DiagnoserActionParameters) Declaration void Handle(HostSignal signal, DiagnoserActionParameters parameters) Parameters Type Name Description HostSignal signal DiagnoserActionParameters parameters ProcessResults(DiagnoserResults) Declaration void ProcessResults(DiagnoserResults results) Parameters Type Name Description DiagnoserResults results Validate(ValidationParameters) Declaration IEnumerable<ValidationError> Validate(ValidationParameters validationParameters) Parameters Type Name Description ValidationParameters validationParameters Returns Type Description System.Collections.Generic.IEnumerable < ValidationError > Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Engines.EngineFactory.html": {
    "href": "api/BenchmarkDotNet.Engines.EngineFactory.html",
    "title": "Class EngineFactory | BenchmarkDotNet",
    "keywords": "Class EngineFactory Inheritance System.Object EngineFactory Implements IEngineFactory Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Engines Assembly : BenchmarkDotNet.dll Syntax public class EngineFactory : IEngineFactory Methods CreateReadyToRun(EngineParameters) Declaration public IEngine CreateReadyToRun(EngineParameters engineParameters) Parameters Type Name Description EngineParameters engineParameters Returns Type Description IEngine Implements IEngineFactory Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Engines.EngineParameters.html": {
    "href": "api/BenchmarkDotNet.Engines.EngineParameters.html",
    "title": "Class EngineParameters | BenchmarkDotNet",
    "keywords": "Class EngineParameters Inheritance System.Object EngineParameters Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Engines Assembly : BenchmarkDotNet.dll Syntax public class EngineParameters Fields DefaultResolver Declaration public static readonly IResolver DefaultResolver Field Value Type Description IResolver Properties Dummy1Action Declaration public Action Dummy1Action { get; set; } Property Value Type Description System.Action Dummy2Action Declaration public Action Dummy2Action { get; set; } Property Value Type Description System.Action Dummy3Action Declaration public Action Dummy3Action { get; set; } Property Value Type Description System.Action GlobalCleanupAction Declaration public Action GlobalCleanupAction { get; set; } Property Value Type Description System.Action GlobalSetupAction Declaration public Action GlobalSetupAction { get; set; } Property Value Type Description System.Action HasInvocationCount Declaration public bool HasInvocationCount { get; } Property Value Type Description System.Boolean HasUnrollFactor Declaration public bool HasUnrollFactor { get; } Property Value Type Description System.Boolean Host Declaration public IHost Host { get; set; } Property Value Type Description IHost IdleActionNoUnroll Declaration public Action<long> IdleActionNoUnroll { get; set; } Property Value Type Description System.Action < System.Int64 > IdleActionUnroll Declaration public Action<long> IdleActionUnroll { get; set; } Property Value Type Description System.Action < System.Int64 > IterationCleanupAction Declaration public Action IterationCleanupAction { get; set; } Property Value Type Description System.Action IterationSetupAction Declaration public Action IterationSetupAction { get; set; } Property Value Type Description System.Action IterationTime Declaration public TimeInterval IterationTime { get; } Property Value Type Description TimeInterval MainActionNoUnroll Declaration public Action<long> MainActionNoUnroll { get; set; } Property Value Type Description System.Action < System.Int64 > MainActionUnroll Declaration public Action<long> MainActionUnroll { get; set; } Property Value Type Description System.Action < System.Int64 > MeasureGcStats Declaration public bool MeasureGcStats { get; set; } Property Value Type Description System.Boolean NeedsJitting Declaration public bool NeedsJitting { get; } Property Value Type Description System.Boolean OperationsPerInvoke Declaration public long OperationsPerInvoke { get; set; } Property Value Type Description System.Int64 TargetJob Declaration public Job TargetJob { get; set; } Property Value Type Description Job UnrollFactor Declaration public int UnrollFactor { get; } Property Value Type Description System.Int32 Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Environments.EnvResolver.html": {
    "href": "api/BenchmarkDotNet.Environments.EnvResolver.html",
    "title": "Class EnvResolver | BenchmarkDotNet",
    "keywords": "Class EnvResolver Inheritance System.Object Resolver EnvResolver Implements IResolver Inherited Members Resolver.Register<T>(Characteristic<T>, Func<T>) Resolver.Register<T>(Characteristic<T>, Func<CharacteristicObject, T>) Resolver.CanResolve(Characteristic) Resolver.Resolve(CharacteristicObject, Characteristic) Resolver.Resolve<T>(CharacteristicObject, Characteristic<T>) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Environments Assembly : BenchmarkDotNet.dll Syntax public class EnvResolver : Resolver, IResolver Fields DefaultUnrollFactorForThroughput Declaration public const int DefaultUnrollFactorForThroughput = 16 Field Value Type Description System.Int32 Instance Declaration public static readonly IResolver Instance Field Value Type Description IResolver Implements IResolver Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Environments.GcResolver.html": {
    "href": "api/BenchmarkDotNet.Environments.GcResolver.html",
    "title": "Class GcResolver | BenchmarkDotNet",
    "keywords": "Class GcResolver Inheritance System.Object Resolver GcResolver Implements IResolver Inherited Members Resolver.Register<T>(Characteristic<T>, Func<T>) Resolver.Register<T>(Characteristic<T>, Func<CharacteristicObject, T>) Resolver.CanResolve(Characteristic) Resolver.Resolve(CharacteristicObject, Characteristic) Resolver.Resolve<T>(CharacteristicObject, Characteristic<T>) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Environments Assembly : BenchmarkDotNet.dll Syntax public class GcResolver : Resolver, IResolver Fields Instance Declaration public static readonly IResolver Instance Field Value Type Description IResolver Implements IResolver Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Environments.HostEnvironmentInfo.html": {
    "href": "api/BenchmarkDotNet.Environments.HostEnvironmentInfo.html",
    "title": "Class HostEnvironmentInfo | BenchmarkDotNet",
    "keywords": "Class HostEnvironmentInfo Inheritance System.Object BenchmarkEnvironmentInfo HostEnvironmentInfo Inherited Members BenchmarkEnvironmentInfo.Architecture BenchmarkEnvironmentInfo.Configuration BenchmarkEnvironmentInfo.RuntimeVersion BenchmarkEnvironmentInfo.HasAttachedDebugger BenchmarkEnvironmentInfo.HasRyuJit BenchmarkEnvironmentInfo.JitInfo BenchmarkEnvironmentInfo.IsServerGC BenchmarkEnvironmentInfo.IsConcurrentGC BenchmarkEnvironmentInfo.GCAllocationQuantum BenchmarkEnvironmentInfo.GetConfigurationFlag() BenchmarkEnvironmentInfo.GetDebuggerFlag() BenchmarkEnvironmentInfo.GetGcServerFlag() BenchmarkEnvironmentInfo.GetGcConcurrentFlag() BenchmarkEnvironmentInfo.Validate(Job) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Environments Assembly : BenchmarkDotNet.dll Syntax public class HostEnvironmentInfo : BenchmarkEnvironmentInfo Constructors HostEnvironmentInfo() Declaration protected HostEnvironmentInfo() Fields BenchmarkDotNetCaption Declaration public const string BenchmarkDotNetCaption = \"BenchmarkDotNet\" Field Value Type Description System.String MainCultureInfo Declaration public static readonly CultureInfo MainCultureInfo Field Value Type Description System.Globalization.CultureInfo Properties AntivirusProducts Declaration public Lazy<ICollection<Antivirus>> AntivirusProducts { get; protected set; } Property Value Type Description System.Lazy < System.Collections.Generic.ICollection < Antivirus >> BenchmarkDotNetVersion Declaration public string BenchmarkDotNetVersion { get; protected set; } Property Value Type Description System.String ChronometerFrequency The frequency of the timer as the number of ticks per second. Declaration public Frequency ChronometerFrequency { get; protected set; } Property Value Type Description Frequency ChronometerResolution Declaration public TimeInterval ChronometerResolution { get; } Property Value Type Description TimeInterval CpuInfo is expensive to call (1s) Declaration public Lazy<CpuInfo> CpuInfo { get; protected set; } Property Value Type Description System.Lazy < CpuInfo > DotNetSdkVersion .NET Core SDK version It's expensive to call (creates new process by calling dotnet --version ) Declaration public Lazy<string> DotNetSdkVersion { get; protected set; } Property Value Type Description System.Lazy < System.String > FallbackLogger Logger to use when there's no config available. Declaration public static ILogger FallbackLogger { get; } Property Value Type Description ILogger HardwareTimerKind Declaration public HardwareTimerKind HardwareTimerKind { get; protected set; } Property Value Type Description HardwareTimerKind IsMonoInstalled checks if Mono is installed It's expensive to call (creates new process by calling mono --version ) Declaration public Lazy<bool> IsMonoInstalled { get; protected set; } Property Value Type Description System.Lazy < System.Boolean > JitModules Declaration public string JitModules { get; protected set; } Property Value Type Description System.String OsVersion Could be expensive Declaration public Lazy<string> OsVersion { get; protected set; } Property Value Type Description System.Lazy < System.String > VirtualMachineHypervisor Declaration public Lazy<VirtualMachineHypervisor> VirtualMachineHypervisor { get; protected set; } Property Value Type Description System.Lazy < VirtualMachineHypervisor > Methods GetCurrent() Declaration public static HostEnvironmentInfo GetCurrent() Returns Type Description HostEnvironmentInfo IsDotNetCliInstalled() Declaration public bool IsDotNetCliInstalled() Returns Type Description System.Boolean ToFormattedString() Declaration public override IEnumerable<string> ToFormattedString() Returns Type Description System.Collections.Generic.IEnumerable < System.String > Overrides BenchmarkEnvironmentInfo.ToFormattedString() Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Environments.InfrastructureResolver.html": {
    "href": "api/BenchmarkDotNet.Environments.InfrastructureResolver.html",
    "title": "Class InfrastructureResolver | BenchmarkDotNet",
    "keywords": "Class InfrastructureResolver Inheritance System.Object Resolver InfrastructureResolver Implements IResolver Inherited Members Resolver.Register<T>(Characteristic<T>, Func<T>) Resolver.Register<T>(Characteristic<T>, Func<CharacteristicObject, T>) Resolver.CanResolve(Characteristic) Resolver.Resolve(CharacteristicObject, Characteristic) Resolver.Resolve<T>(CharacteristicObject, Characteristic<T>) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Environments Assembly : BenchmarkDotNet.dll Syntax public class InfrastructureResolver : Resolver, IResolver Fields Instance Declaration public static readonly IResolver Instance Field Value Type Description IResolver Implements IResolver Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "PLACEHOLDER | BenchmarkDotNet",
    "keywords": "PLACEHOLDER TODO: Add .NET projects to the src folder and run docfx to generate REAL API Documentation !"
  },
  "api/BenchmarkDotNet.Toolchains.Roslyn.html": {
    "href": "api/BenchmarkDotNet.Toolchains.Roslyn.html",
    "title": "Namespace BenchmarkDotNet.Toolchains.Roslyn | BenchmarkDotNet",
    "keywords": "Namespace BenchmarkDotNet.Toolchains.Roslyn Classes Builder Generator RoslynToolchain Build a benchmark program with the Roslyn compiler."
  },
  "api/BenchmarkDotNet.Code.html": {
    "href": "api/BenchmarkDotNet.Code.html",
    "title": "Namespace BenchmarkDotNet.Code | BenchmarkDotNet",
    "keywords": "Namespace BenchmarkDotNet.Code Classes ArrayParam<T> Interfaces IParam"
  },
  "api/BenchmarkDotNet.Attributes.Validators.html": {
    "href": "api/BenchmarkDotNet.Attributes.Validators.html",
    "title": "Namespace BenchmarkDotNet.Attributes.Validators | BenchmarkDotNet",
    "keywords": "Namespace BenchmarkDotNet.Attributes.Validators Classes ExecutionValidatorAttribute ReturnValueValidatorAttribute ValidatorConfigBaseAttribute"
  },
  "api/BenchmarkDotNet.Analysers.MinIterationTimeAnalyser.html": {
    "href": "api/BenchmarkDotNet.Analysers.MinIterationTimeAnalyser.html",
    "title": "Class MinIterationTimeAnalyser | BenchmarkDotNet",
    "keywords": "Class MinIterationTimeAnalyser Inheritance System.Object AnalyserBase MinIterationTimeAnalyser Implements IAnalyser Inherited Members AnalyserBase.Analyse(Summary) AnalyserBase.AnalyseSummary(Summary) AnalyserBase.CreateHint(String, BenchmarkReport) AnalyserBase.CreateWarning(String, BenchmarkReport) AnalyserBase.CreateError(String, BenchmarkReport) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Analysers Assembly : BenchmarkDotNet.dll Syntax public class MinIterationTimeAnalyser : AnalyserBase, IAnalyser Fields Default Declaration public static readonly IAnalyser Default Field Value Type Description IAnalyser Properties Id Declaration public override string Id { get; } Property Value Type Description System.String Overrides AnalyserBase.Id Methods AnalyseReport(BenchmarkReport, Summary) Declaration public override IEnumerable<Conclusion> AnalyseReport(BenchmarkReport report, Summary summary) Parameters Type Name Description BenchmarkReport report Summary summary Returns Type Description System.Collections.Generic.IEnumerable < Conclusion > Overrides AnalyserBase.AnalyseReport(BenchmarkReport, Summary) Implements IAnalyser Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Exporters.MarkdownExporterAttribute.Default.html": {
    "href": "api/BenchmarkDotNet.Attributes.Exporters.MarkdownExporterAttribute.Default.html",
    "title": "Class MarkdownExporterAttribute.Default | BenchmarkDotNet",
    "keywords": "Class MarkdownExporterAttribute.Default Inheritance System.Object System.Attribute ExporterConfigBaseAttribute MarkdownExporterAttribute.Default Implements IConfigSource Inherited Members ExporterConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Exporters Assembly : BenchmarkDotNet.dll Syntax public class Default : ExporterConfigBaseAttribute, IConfigSource Constructors Default() Declaration public Default() Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Configs.ManualConfig.html": {
    "href": "api/BenchmarkDotNet.Configs.ManualConfig.html",
    "title": "Class ManualConfig | BenchmarkDotNet",
    "keywords": "Class ManualConfig Inheritance System.Object ManualConfig Implements IConfig Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Configs Assembly : BenchmarkDotNet.dll Syntax public class ManualConfig : IConfig Properties ArtifactsPath Declaration public string ArtifactsPath { get; set; } Property Value Type Description System.String KeepBenchmarkFiles Declaration public bool KeepBenchmarkFiles { get; set; } Property Value Type Description System.Boolean UnionRule Declaration public ConfigUnionRule UnionRule { get; set; } Property Value Type Description ConfigUnionRule Methods Add(IAnalyser[]) Declaration public void Add(params IAnalyser[] newAnalysers) Parameters Type Name Description IAnalyser [] newAnalysers Add(IColumn[]) Declaration public void Add(params IColumn[] newColumns) Parameters Type Name Description IColumn [] newColumns Add(IColumnProvider[]) Declaration public void Add(params IColumnProvider[] newColumnProviders) Parameters Type Name Description IColumnProvider [] newColumnProviders Add(BenchmarkLogicalGroupRule[]) Declaration public void Add(params BenchmarkLogicalGroupRule[] rules) Parameters Type Name Description BenchmarkLogicalGroupRule [] rules Add(IConfig) Declaration public void Add(IConfig config) Parameters Type Name Description IConfig config Add(HardwareCounter[]) Declaration public void Add(params HardwareCounter[] newHardwareCounters) Parameters Type Name Description HardwareCounter [] newHardwareCounters Add(IDiagnoser[]) Declaration public void Add(params IDiagnoser[] newDiagnosers) Parameters Type Name Description IDiagnoser [] newDiagnosers Add(IExporter[]) Declaration public void Add(params IExporter[] newExporters) Parameters Type Name Description IExporter [] newExporters Add(IFilter[]) Declaration public void Add(params IFilter[] newFilters) Parameters Type Name Description IFilter [] newFilters Add(Job[]) Declaration public void Add(params Job[] newJobs) Parameters Type Name Description Job [] newJobs Add(ILogger[]) Declaration public void Add(params ILogger[] newLoggers) Parameters Type Name Description ILogger [] newLoggers Add(IValidator[]) Declaration public void Add(params IValidator[] newValidators) Parameters Type Name Description IValidator [] newValidators Create(IConfig) Declaration public static ManualConfig Create(IConfig config) Parameters Type Name Description IConfig config Returns Type Description ManualConfig CreateEmpty() Declaration public static ManualConfig CreateEmpty() Returns Type Description ManualConfig GetAnalysers() Declaration public IEnumerable<IAnalyser> GetAnalysers() Returns Type Description System.Collections.Generic.IEnumerable < IAnalyser > GetColumnProviders() Declaration public IEnumerable<IColumnProvider> GetColumnProviders() Returns Type Description System.Collections.Generic.IEnumerable < IColumnProvider > GetDiagnosers() Declaration public IEnumerable<IDiagnoser> GetDiagnosers() Returns Type Description System.Collections.Generic.IEnumerable < IDiagnoser > GetExporters() Declaration public IEnumerable<IExporter> GetExporters() Returns Type Description System.Collections.Generic.IEnumerable < IExporter > GetFilters() Declaration public IEnumerable<IFilter> GetFilters() Returns Type Description System.Collections.Generic.IEnumerable < IFilter > GetHardwareCounters() Declaration public IEnumerable<HardwareCounter> GetHardwareCounters() Returns Type Description System.Collections.Generic.IEnumerable < HardwareCounter > GetJobs() Declaration public IEnumerable<Job> GetJobs() Returns Type Description System.Collections.Generic.IEnumerable < Job > GetLoggers() Declaration public IEnumerable<ILogger> GetLoggers() Returns Type Description System.Collections.Generic.IEnumerable < ILogger > GetLogicalGroupRules() Declaration public IEnumerable<BenchmarkLogicalGroupRule> GetLogicalGroupRules() Returns Type Description System.Collections.Generic.IEnumerable < BenchmarkLogicalGroupRule > GetOrderProvider() Declaration public IOrderProvider GetOrderProvider() Returns Type Description IOrderProvider GetSummaryStyle() Declaration public ISummaryStyle GetSummaryStyle() Returns Type Description ISummaryStyle GetValidators() Declaration public IEnumerable<IValidator> GetValidators() Returns Type Description System.Collections.Generic.IEnumerable < IValidator > Parse(String[]) Declaration public static IConfig Parse(string[] args) Parameters Type Name Description System.String [] args Returns Type Description IConfig PrintOptions(ILogger, Int32, Int32) Declaration public static void PrintOptions(ILogger logger, int prefixWidth, int outputWidth) Parameters Type Name Description ILogger logger System.Int32 prefixWidth System.Int32 outputWidth Set(IOrderProvider) Declaration public void Set(IOrderProvider provider) Parameters Type Name Description IOrderProvider provider Set(ISummaryStyle) Declaration public void Set(ISummaryStyle style) Parameters Type Name Description ISummaryStyle style Union(IConfig, IConfig) Declaration public static ManualConfig Union(IConfig globalConfig, IConfig localConfig) Parameters Type Name Description IConfig globalConfig IConfig localConfig Returns Type Description ManualConfig Implements IConfig Extension Methods ConfigExtensions.GetCompositeLogger(IConfig) ConfigExtensions.GetCompositeExporter(IConfig) ConfigExtensions.GetCompositeDiagnoser(IConfig) ConfigExtensions.GetCompositeDiagnoser(IConfig, Benchmark, RunMode) ConfigExtensions.GetCompositeAnalyser(IConfig) ConfigExtensions.GetCompositeValidator(IConfig) ConfigExtensions.With(IConfig, IColumn[]) ConfigExtensions.With(IConfig, IColumnProvider[]) ConfigExtensions.With(IConfig, ILogger[]) ConfigExtensions.With(IConfig, IExporter[]) ConfigExtensions.With(IConfig, IDiagnoser[]) ConfigExtensions.With(IConfig, IAnalyser[]) ConfigExtensions.With(IConfig, IValidator[]) ConfigExtensions.With(IConfig, Job[]) ConfigExtensions.With(IConfig, IOrderProvider) ConfigExtensions.With(IConfig, HardwareCounter[]) ConfigExtensions.With(IConfig, IFilter[]) ConfigExtensions.KeepBenchmarkFiles(IConfig, Boolean) ConfigExtensions.RemoveBenchmarkFiles(IConfig) ConfigExtensions.WithArtifactsPath(IConfig, String) ConfigExtensions.With(IConfig, BenchmarkLogicalGroupRule[]) ConfigExtensions.AsReadOnly(IConfig) ConfigExtensions.HasMemoryDiagnoser(IConfig) CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Columns.IsBaselineColumnAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Columns.IsBaselineColumnAttribute.html",
    "title": "Class IsBaselineColumnAttribute | BenchmarkDotNet",
    "keywords": "Class IsBaselineColumnAttribute Inheritance System.Object System.Attribute ColumnConfigBaseAttribute IsBaselineColumnAttribute Implements IConfigSource Inherited Members ColumnConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Columns Assembly : BenchmarkDotNet.dll Syntax [AttributeUsage(AttributeTargets.Assembly | AttributeTargets.Class, AllowMultiple = true)] public class IsBaselineColumnAttribute : ColumnConfigBaseAttribute, IConfigSource Constructors IsBaselineColumnAttribute() Declaration public IsBaselineColumnAttribute() Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Columns.MedianColumnAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Columns.MedianColumnAttribute.html",
    "title": "Class MedianColumnAttribute | BenchmarkDotNet",
    "keywords": "Class MedianColumnAttribute Inheritance System.Object System.Attribute ColumnConfigBaseAttribute MedianColumnAttribute Implements IConfigSource Inherited Members ColumnConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Columns Assembly : BenchmarkDotNet.dll Syntax public class MedianColumnAttribute : ColumnConfigBaseAttribute, IConfigSource Constructors MedianColumnAttribute() Declaration public MedianColumnAttribute() Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Toolchains.Results.BuildResult.html": {
    "href": "api/BenchmarkDotNet.Toolchains.Results.BuildResult.html",
    "title": "Class BuildResult | BenchmarkDotNet",
    "keywords": "Class BuildResult Inheritance System.Object GenerateResult BuildResult Inherited Members GenerateResult.ArtifactsPaths GenerateResult.IsGenerateSuccess GenerateResult.GenerateException GenerateResult.ArtifactsToCleanup GenerateResult.Success(ArtifactsPaths, IReadOnlyCollection<String>) GenerateResult.Failure(ArtifactsPaths, IReadOnlyCollection<String>, Exception) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Toolchains.Results Assembly : BenchmarkDotNet.dll Syntax public class BuildResult : GenerateResult Properties BuildException Declaration public Exception BuildException { get; } Property Value Type Description System.Exception FailedToAccess Declaration public bool FailedToAccess { get; } Property Value Type Description System.Boolean IsBuildSuccess Declaration public bool IsBuildSuccess { get; } Property Value Type Description System.Boolean Methods Failure(GenerateResult, Exception) Declaration public static BuildResult Failure(GenerateResult generateResult, Exception exception = null) Parameters Type Name Description GenerateResult generateResult System.Exception exception Returns Type Description BuildResult Success(GenerateResult) Declaration public static BuildResult Success(GenerateResult generateResult) Parameters Type Name Description GenerateResult generateResult Returns Type Description BuildResult ToString() Declaration public override string ToString() Returns Type Description System.String Overrides GenerateResult.ToString() Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Exporters.JsonExporterAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Exporters.JsonExporterAttribute.html",
    "title": "Class JsonExporterAttribute | BenchmarkDotNet",
    "keywords": "Class JsonExporterAttribute Inheritance System.Object System.Attribute ExporterConfigBaseAttribute JsonExporterAttribute JsonExporterAttribute.BriefAttribute JsonExporterAttribute.BriefCompressed JsonExporterAttribute.Full JsonExporterAttribute.FullCompressed Implements IConfigSource Inherited Members ExporterConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Exporters Assembly : BenchmarkDotNet.dll Syntax [AttributeUsage(AttributeTargets.Assembly | AttributeTargets.Class, AllowMultiple = true)] public class JsonExporterAttribute : ExporterConfigBaseAttribute, IConfigSource Constructors JsonExporterAttribute(IExporter) Declaration protected JsonExporterAttribute(IExporter exporter) Parameters Type Name Description IExporter exporter JsonExporterAttribute(String, Boolean, Boolean) Declaration public JsonExporterAttribute(string fileNameSuffix = \"\", bool indentJson = false, bool excludeMeasurements = false) Parameters Type Name Description System.String fileNameSuffix System.Boolean indentJson System.Boolean excludeMeasurements Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Exporters.XmlExporterAttribute.BriefCompressed.html": {
    "href": "api/BenchmarkDotNet.Attributes.Exporters.XmlExporterAttribute.BriefCompressed.html",
    "title": "Class XmlExporterAttribute.BriefCompressed | BenchmarkDotNet",
    "keywords": "Class XmlExporterAttribute.BriefCompressed Inheritance System.Object System.Attribute ExporterConfigBaseAttribute XmlExporterAttribute XmlExporterAttribute.BriefCompressed Implements IConfigSource Inherited Members ExporterConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Exporters Assembly : BenchmarkDotNet.dll Syntax public class BriefCompressed : XmlExporterAttribute, IConfigSource Constructors BriefCompressed() Declaration public BriefCompressed() Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Loggers.LogKind.html": {
    "href": "api/BenchmarkDotNet.Loggers.LogKind.html",
    "title": "Enum LogKind | BenchmarkDotNet",
    "keywords": "Enum LogKind Namespace : BenchmarkDotNet.Loggers Assembly : BenchmarkDotNet.dll Syntax public enum LogKind Fields Name Description Default Error Header Help Hint Info Result Statistic Extension Methods CommonExtensions.IsOneOf<LogKind>(LogKind[])"
  },
  "api/BenchmarkDotNet.Loggers.LoggerExtensions.html": {
    "href": "api/BenchmarkDotNet.Loggers.LoggerExtensions.html",
    "title": "Class LoggerExtensions | BenchmarkDotNet",
    "keywords": "Class LoggerExtensions Inheritance System.Object LoggerExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Loggers Assembly : BenchmarkDotNet.dll Syntax public static class LoggerExtensions Methods Write(ILogger, String) Declaration public static void Write(this ILogger logger, string text) Parameters Type Name Description ILogger logger System.String text WriteError(ILogger, String) Declaration public static void WriteError(this ILogger logger, string text) Parameters Type Name Description ILogger logger System.String text WriteHeader(ILogger, String) Declaration public static void WriteHeader(this ILogger logger, string text) Parameters Type Name Description ILogger logger System.String text WriteHelp(ILogger, String) Declaration public static void WriteHelp(this ILogger logger, string text) Parameters Type Name Description ILogger logger System.String text WriteHint(ILogger, String) Declaration public static void WriteHint(this ILogger logger, string text) Parameters Type Name Description ILogger logger System.String text WriteInfo(ILogger, String) Declaration public static void WriteInfo(this ILogger logger, string text) Parameters Type Name Description ILogger logger System.String text WriteLine(ILogger, String) Declaration public static void WriteLine(this ILogger logger, string text) Parameters Type Name Description ILogger logger System.String text WriteLineError(ILogger, String) Declaration public static void WriteLineError(this ILogger logger, string text) Parameters Type Name Description ILogger logger System.String text WriteLineHeader(ILogger, String) Declaration public static void WriteLineHeader(this ILogger logger, string text) Parameters Type Name Description ILogger logger System.String text WriteLineHelp(ILogger, String) Declaration public static void WriteLineHelp(this ILogger logger, string text) Parameters Type Name Description ILogger logger System.String text WriteLineHint(ILogger, String) Declaration public static void WriteLineHint(this ILogger logger, string text) Parameters Type Name Description ILogger logger System.String text WriteLineInfo(ILogger, String) Declaration public static void WriteLineInfo(this ILogger logger, string text) Parameters Type Name Description ILogger logger System.String text WriteLineResult(ILogger, String) Declaration public static void WriteLineResult(this ILogger logger, string text) Parameters Type Name Description ILogger logger System.String text WriteLineStatistic(ILogger, String) Declaration public static void WriteLineStatistic(this ILogger logger, string text) Parameters Type Name Description ILogger logger System.String text WriteResult(ILogger, String) Declaration public static void WriteResult(this ILogger logger, string text) Parameters Type Name Description ILogger logger System.String text WriteStatistic(ILogger, String) Declaration public static void WriteStatistic(this ILogger logger, string text) Parameters Type Name Description ILogger logger System.String text"
  },
  "api/BenchmarkDotNet.Loggers.LoggerWithPrefix.html": {
    "href": "api/BenchmarkDotNet.Loggers.LoggerWithPrefix.html",
    "title": "Class LoggerWithPrefix | BenchmarkDotNet",
    "keywords": "Class LoggerWithPrefix Adds prefix for each line Inheritance System.Object LoggerWithPrefix Implements ILogger Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Loggers Assembly : BenchmarkDotNet.dll Syntax public class LoggerWithPrefix : ILogger Constructors LoggerWithPrefix(ILogger, String) Declaration public LoggerWithPrefix(ILogger logger, string prefix) Parameters Type Name Description ILogger logger System.String prefix Properties Logger Declaration public ILogger Logger { get; } Property Value Type Description ILogger Prefix Declaration public string Prefix { get; } Property Value Type Description System.String Methods Write(LogKind, String) Declaration public void Write(LogKind logKind, string text) Parameters Type Name Description LogKind logKind System.String text WriteLine() Declaration public void WriteLine() WriteLine(LogKind, String) Declaration public void WriteLine(LogKind logKind, string text) Parameters Type Name Description LogKind logKind System.String text Implements ILogger Extension Methods CommonExtensions.IsOneOf<T>(T, T[]) LoggerExtensions.WriteLine(ILogger, String) LoggerExtensions.WriteLineHelp(ILogger, String) LoggerExtensions.WriteLineHeader(ILogger, String) LoggerExtensions.WriteLineResult(ILogger, String) LoggerExtensions.WriteLineStatistic(ILogger, String) LoggerExtensions.WriteLineInfo(ILogger, String) LoggerExtensions.WriteLineError(ILogger, String) LoggerExtensions.WriteLineHint(ILogger, String) LoggerExtensions.Write(ILogger, String) LoggerExtensions.WriteHelp(ILogger, String) LoggerExtensions.WriteHeader(ILogger, String) LoggerExtensions.WriteResult(ILogger, String) LoggerExtensions.WriteStatistic(ILogger, String) LoggerExtensions.WriteInfo(ILogger, String) LoggerExtensions.WriteError(ILogger, String) LoggerExtensions.WriteHint(ILogger, String)"
  },
  "api/BenchmarkDotNet.Loggers.NullLogger.html": {
    "href": "api/BenchmarkDotNet.Loggers.NullLogger.html",
    "title": "Class NullLogger | BenchmarkDotNet",
    "keywords": "Class NullLogger Inheritance System.Object NullLogger Implements ILogger Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Loggers Assembly : BenchmarkDotNet.dll Syntax public class NullLogger : ILogger Fields Instance Declaration public static readonly ILogger Instance Field Value Type Description ILogger Methods Write(LogKind, String) Declaration public void Write(LogKind logKind, string text) Parameters Type Name Description LogKind logKind System.String text WriteLine() Declaration public void WriteLine() WriteLine(LogKind, String) Declaration public void WriteLine(LogKind logKind, string text) Parameters Type Name Description LogKind logKind System.String text Implements ILogger Extension Methods CommonExtensions.IsOneOf<T>(T, T[]) LoggerExtensions.WriteLine(ILogger, String) LoggerExtensions.WriteLineHelp(ILogger, String) LoggerExtensions.WriteLineHeader(ILogger, String) LoggerExtensions.WriteLineResult(ILogger, String) LoggerExtensions.WriteLineStatistic(ILogger, String) LoggerExtensions.WriteLineInfo(ILogger, String) LoggerExtensions.WriteLineError(ILogger, String) LoggerExtensions.WriteLineHint(ILogger, String) LoggerExtensions.Write(ILogger, String) LoggerExtensions.WriteHelp(ILogger, String) LoggerExtensions.WriteHeader(ILogger, String) LoggerExtensions.WriteResult(ILogger, String) LoggerExtensions.WriteStatistic(ILogger, String) LoggerExtensions.WriteInfo(ILogger, String) LoggerExtensions.WriteError(ILogger, String) LoggerExtensions.WriteHint(ILogger, String)"
  },
  "api/BenchmarkDotNet.Mathematics.ConfidenceLevelExtensions.html": {
    "href": "api/BenchmarkDotNet.Mathematics.ConfidenceLevelExtensions.html",
    "title": "Class ConfidenceLevelExtensions | BenchmarkDotNet",
    "keywords": "Class ConfidenceLevelExtensions Inheritance System.Object ConfidenceLevelExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Mathematics Assembly : BenchmarkDotNet.dll Syntax public static class ConfidenceLevelExtensions Methods GetZValue(ConfidenceLevel, Int32) Calculates Z value (z-star) for confidence interval Declaration public static double GetZValue(this ConfidenceLevel level, int n) Parameters Type Name Description ConfidenceLevel level ConfidenceLevel for a confidence interval System.Int32 n Sample size (n >= 3) Returns Type Description System.Double ToPercent(ConfidenceLevel) Declaration public static double ToPercent(this ConfidenceLevel level) Parameters Type Name Description ConfidenceLevel level Returns Type Description System.Double ToPercentStr(ConfidenceLevel) Declaration public static string ToPercentStr(this ConfidenceLevel level) Parameters Type Name Description ConfidenceLevel level Returns Type Description System.String"
  },
  "api/BenchmarkDotNet.Mathematics.Histograms.AdaptiveHistogramBuilder.html": {
    "href": "api/BenchmarkDotNet.Mathematics.Histograms.AdaptiveHistogramBuilder.html",
    "title": "Class AdaptiveHistogramBuilder | BenchmarkDotNet",
    "keywords": "Class AdaptiveHistogramBuilder Inheritance System.Object AdaptiveHistogramBuilder Implements IHistogramBuilder Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Mathematics.Histograms Assembly : BenchmarkDotNet.dll Syntax public class AdaptiveHistogramBuilder : IHistogramBuilder Methods Build(Statistics, Nullable<BinSizeRule>) Declaration public Histogram Build(Statistics s, BinSizeRule? rule = default(BinSizeRule? )) Parameters Type Name Description Statistics s System.Nullable < BinSizeRule > rule Returns Type Description Histogram BuildWithFixedBinSize(IEnumerable<Double>, Double) Declaration public Histogram BuildWithFixedBinSize(IEnumerable<double> values, double binSize) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.Double > values System.Double binSize Returns Type Description Histogram Implements IHistogramBuilder Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Mathematics.Histograms.BinSizeRule.html": {
    "href": "api/BenchmarkDotNet.Mathematics.Histograms.BinSizeRule.html",
    "title": "Enum BinSizeRule | BenchmarkDotNet",
    "keywords": "Enum BinSizeRule Namespace : BenchmarkDotNet.Mathematics.Histograms Assembly : BenchmarkDotNet.dll Syntax public enum BinSizeRule Fields Name Description FreedmanDiaconis Rice Scott Scott2 SquareRoot Sturges Extension Methods CommonExtensions.IsOneOf<BinSizeRule>(BinSizeRule[])"
  },
  "api/BenchmarkDotNet.Mathematics.Histograms.Histogram.html": {
    "href": "api/BenchmarkDotNet.Mathematics.Histograms.Histogram.html",
    "title": "Class Histogram | BenchmarkDotNet",
    "keywords": "Class Histogram Inheritance System.Object Histogram Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Mathematics.Histograms Assembly : BenchmarkDotNet.dll Syntax public class Histogram Properties Bins Declaration public HistogramBin[] Bins { get; } Property Value Type Description HistogramBin [] BinSize Declaration public double BinSize { get; } Property Value Type Description System.Double Extension Methods CommonExtensions.IsOneOf<T>(T, T[]) HistogramExtensions.GetBinCount(Histogram) HistogramExtensions.GetAllValues(Histogram) HistogramExtensions.ToTimeStr(Histogram, TimeUnit, Char, Boolean)"
  },
  "api/BenchmarkDotNet.Attributes.Filters.CategoryFilterAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Filters.CategoryFilterAttribute.html",
    "title": "Class CategoryFilterAttribute | BenchmarkDotNet",
    "keywords": "Class CategoryFilterAttribute Inheritance System.Object System.Attribute FilterConfigBaseAttribute CategoryFilterAttribute Implements IConfigSource Inherited Members FilterConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Filters Assembly : BenchmarkDotNet.dll Syntax public class CategoryFilterAttribute : FilterConfigBaseAttribute, IConfigSource Constructors CategoryFilterAttribute() Declaration public CategoryFilterAttribute() CategoryFilterAttribute(String) Declaration public CategoryFilterAttribute(string targetCategory) Parameters Type Name Description System.String targetCategory Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Filters.FilterConfigBaseAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Filters.FilterConfigBaseAttribute.html",
    "title": "Class FilterConfigBaseAttribute | BenchmarkDotNet",
    "keywords": "Class FilterConfigBaseAttribute Inheritance System.Object System.Attribute FilterConfigBaseAttribute AllCategoriesFilterAttribute AnyCategoriesFilterAttribute CategoryFilterAttribute Implements IConfigSource Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Filters Assembly : BenchmarkDotNet.dll Syntax [AttributeUsage(AttributeTargets.Assembly | AttributeTargets.Class)] public abstract class FilterConfigBaseAttribute : Attribute, IConfigSource Constructors FilterConfigBaseAttribute() Declaration protected FilterConfigBaseAttribute() FilterConfigBaseAttribute(IFilter[]) Declaration protected FilterConfigBaseAttribute(params IFilter[] filters) Parameters Type Name Description IFilter [] filters Properties Config Declaration public IConfig Config { get; } Property Value Type Description IConfig Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Jobs.DryJobAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Jobs.DryJobAttribute.html",
    "title": "Class DryJobAttribute | BenchmarkDotNet",
    "keywords": "Class DryJobAttribute Inheritance System.Object System.Attribute JobConfigBaseAttribute DryJobAttribute Implements IConfigSource Inherited Members JobConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Jobs Assembly : BenchmarkDotNet.dll Syntax public class DryJobAttribute : JobConfigBaseAttribute, IConfigSource Constructors DryJobAttribute() Declaration public DryJobAttribute() Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Jobs.DryMonoJobAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Jobs.DryMonoJobAttribute.html",
    "title": "Class DryMonoJobAttribute | BenchmarkDotNet",
    "keywords": "Class DryMonoJobAttribute Inheritance System.Object System.Attribute JobConfigBaseAttribute DryMonoJobAttribute Implements IConfigSource Inherited Members JobConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Jobs Assembly : BenchmarkDotNet.dll Syntax public class DryMonoJobAttribute : JobConfigBaseAttribute, IConfigSource Constructors DryMonoJobAttribute() Declaration public DryMonoJobAttribute() Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Properties.BenchmarkDotNetInfo.html": {
    "href": "api/BenchmarkDotNet.Properties.BenchmarkDotNetInfo.html",
    "title": "Class BenchmarkDotNetInfo | BenchmarkDotNet",
    "keywords": "Class BenchmarkDotNetInfo Inheritance System.Object BenchmarkDotNetInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Properties Assembly : BenchmarkDotNet.dll Syntax public static class BenchmarkDotNetInfo Fields PrereleaseLabel Declaration public const string PrereleaseLabel = \"-develop\" Field Value Type Description System.String Properties FullTitle Declaration public static string FullTitle { get; } Property Value Type Description System.String FullVersion Declaration public static string FullVersion { get; } Property Value Type Description System.String"
  },
  "api/BenchmarkDotNet.Configs.ConfigParser.html": {
    "href": "api/BenchmarkDotNet.Configs.ConfigParser.html",
    "title": "Class ConfigParser | BenchmarkDotNet",
    "keywords": "Class ConfigParser Inheritance System.Object ConfigParser Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Configs Assembly : BenchmarkDotNet.dll Syntax public class ConfigParser Methods Parse(String[]) Declaration public IConfig Parse(string[] args) Parameters Type Name Description System.String [] args Returns Type Description IConfig PrintOptions(ILogger, Int32, Int32) Declaration public void PrintOptions(ILogger logger, int prefixWidth, int outputWidth) Parameters Type Name Description ILogger logger System.Int32 prefixWidth System.Int32 outputWidth Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Parameters.ParameterInstance.html": {
    "href": "api/BenchmarkDotNet.Parameters.ParameterInstance.html",
    "title": "Class ParameterInstance | BenchmarkDotNet",
    "keywords": "Class ParameterInstance Inheritance System.Object ParameterInstance Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Parameters Assembly : BenchmarkDotNet.dll Syntax public class ParameterInstance Constructors ParameterInstance(ParameterDefinition, Object) Declaration public ParameterInstance(ParameterDefinition definition, object value) Parameters Type Name Description ParameterDefinition definition System.Object value Fields NullParameterTextRepresentation Declaration public const string NullParameterTextRepresentation = \"?\" Field Value Type Description System.String Properties Definition Declaration public ParameterDefinition Definition { get; } Property Value Type Description ParameterDefinition IsArgument Declaration public bool IsArgument { get; } Property Value Type Description System.Boolean IsStatic Declaration public bool IsStatic { get; } Property Value Type Description System.Boolean Name Declaration public string Name { get; } Property Value Type Description System.String Value Declaration public object Value { get; } Property Value Type Description System.Object Methods ToDisplayText() Declaration public string ToDisplayText() Returns Type Description System.String ToSourceCode() Declaration public string ToSourceCode() Returns Type Description System.String ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Parameters.ParameterInstances.html": {
    "href": "api/BenchmarkDotNet.Parameters.ParameterInstances.html",
    "title": "Class ParameterInstances | BenchmarkDotNet",
    "keywords": "Class ParameterInstances Inheritance System.Object ParameterInstances Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Parameters Assembly : BenchmarkDotNet.dll Syntax public class ParameterInstances Constructors ParameterInstances(IReadOnlyList<ParameterInstance>) Declaration public ParameterInstances(IReadOnlyList<ParameterInstance> items) Parameters Type Name Description System.Collections.Generic.IReadOnlyList < ParameterInstance > items Properties Count Declaration public int Count { get; } Property Value Type Description System.Int32 DisplayInfo Declaration public string DisplayInfo { get; } Property Value Type Description System.String FolderInfo Declaration public string FolderInfo { get; } Property Value Type Description System.String Item[Int32] Declaration public ParameterInstance this[int index] { get; } Parameters Type Name Description System.Int32 index Property Value Type Description ParameterInstance Item[String] Declaration public object this[string name] { get; } Parameters Type Name Description System.String name Property Value Type Description System.Object Items Declaration public IReadOnlyList<ParameterInstance> Items { get; } Property Value Type Description System.Collections.Generic.IReadOnlyList < ParameterInstance > PrintInfo Declaration public string PrintInfo { get; } Property Value Type Description System.String Methods GetArgument(String) Declaration public ParameterInstance GetArgument(string name) Parameters Type Name Description System.String name Returns Type Description ParameterInstance Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Reports.BenchmarkReport.html": {
    "href": "api/BenchmarkDotNet.Reports.BenchmarkReport.html",
    "title": "Class BenchmarkReport | BenchmarkDotNet",
    "keywords": "Class BenchmarkReport Inheritance System.Object BenchmarkReport Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Reports Assembly : BenchmarkDotNet.dll Syntax public sealed class BenchmarkReport Constructors BenchmarkReport(Benchmark, GenerateResult, BuildResult, IReadOnlyList<ExecuteResult>, IReadOnlyList<Measurement>, GcStats) Declaration public BenchmarkReport(Benchmark benchmark, GenerateResult generateResult, BuildResult buildResult, IReadOnlyList<ExecuteResult> executeResults, IReadOnlyList<Measurement> allMeasurements, GcStats gcStats) Parameters Type Name Description Benchmark benchmark GenerateResult generateResult BuildResult buildResult System.Collections.Generic.IReadOnlyList < ExecuteResult > executeResults System.Collections.Generic.IReadOnlyList < Measurement > allMeasurements GcStats gcStats Properties AllMeasurements Declaration public IReadOnlyList<Measurement> AllMeasurements { get; } Property Value Type Description System.Collections.Generic.IReadOnlyList < Measurement > Benchmark Declaration public Benchmark Benchmark { get; } Property Value Type Description Benchmark BuildResult Declaration public BuildResult BuildResult { get; } Property Value Type Description BuildResult ExecuteResults Declaration public IReadOnlyList<ExecuteResult> ExecuteResults { get; } Property Value Type Description System.Collections.Generic.IReadOnlyList < ExecuteResult > GcStats Declaration public GcStats GcStats { get; } Property Value Type Description GcStats GenerateResult Declaration public GenerateResult GenerateResult { get; } Property Value Type Description GenerateResult ResultStatistics Declaration public Statistics ResultStatistics { get; } Property Value Type Description Statistics Methods GetResultRuns() Declaration public IReadOnlyList<Measurement> GetResultRuns() Returns Type Description System.Collections.Generic.IReadOnlyList < Measurement > ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods CommonExtensions.IsOneOf<T>(T, T[]) BenchmarkReportExtensions.GetRuntimeInfo(BenchmarkReport) BenchmarkReportExtensions.GetGcInfo(BenchmarkReport)"
  },
  "api/BenchmarkDotNet.Reports.BenchmarkReportExtensions.html": {
    "href": "api/BenchmarkDotNet.Reports.BenchmarkReportExtensions.html",
    "title": "Class BenchmarkReportExtensions | BenchmarkDotNet",
    "keywords": "Class BenchmarkReportExtensions Inheritance System.Object BenchmarkReportExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Reports Assembly : BenchmarkDotNet.dll Syntax public static class BenchmarkReportExtensions Methods GetGcInfo(BenchmarkReport) Declaration public static string GetGcInfo(this BenchmarkReport report) Parameters Type Name Description BenchmarkReport report Returns Type Description System.String GetRuntimeInfo(BenchmarkReport) Declaration public static string GetRuntimeInfo(this BenchmarkReport report) Parameters Type Name Description BenchmarkReport report Returns Type Description System.String"
  },
  "api/BenchmarkDotNet.Toolchains.CustomCoreClr.CustomCoreClrToolchain.html": {
    "href": "api/BenchmarkDotNet.Toolchains.CustomCoreClr.CustomCoreClrToolchain.html",
    "title": "Class CustomCoreClrToolchain | BenchmarkDotNet",
    "keywords": "Class CustomCoreClrToolchain Inheritance System.Object Toolchain CustomCoreClrToolchain Implements IToolchain Inherited Members Toolchain.Name Toolchain.Generator Toolchain.Builder Toolchain.Executor Toolchain.IsSupported(Benchmark, ILogger, IResolver) Toolchain.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Toolchains.CustomCoreClr Assembly : BenchmarkDotNet.dll Syntax public class CustomCoreClrToolchain : Toolchain, IToolchain Methods CreateBuilder() Declaration public static CustomCoreClrToolchainBuilder CreateBuilder() Returns Type Description CustomCoreClrToolchainBuilder Implements IToolchain Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Toolchains.CustomCoreClr.CustomCoreClrToolchainBuilder.html": {
    "href": "api/BenchmarkDotNet.Toolchains.CustomCoreClr.CustomCoreClrToolchainBuilder.html",
    "title": "Class CustomCoreClrToolchainBuilder | BenchmarkDotNet",
    "keywords": "Class CustomCoreClrToolchainBuilder Inheritance System.Object CustomDotNetCliToolchainBuilder CustomCoreClrToolchainBuilder Inherited Members CustomDotNetCliToolchainBuilder.runtimeIdentifier CustomDotNetCliToolchainBuilder.customDotNetCliPath CustomDotNetCliToolchainBuilder.targetFrameworkMoniker CustomDotNetCliToolchainBuilder.displayName CustomDotNetCliToolchainBuilder.runtimeFrameworkVersion CustomDotNetCliToolchainBuilder.useNuGetClearTag CustomDotNetCliToolchainBuilder.useTempFolderForRestore CustomDotNetCliToolchainBuilder.feeds CustomDotNetCliToolchainBuilder.AdditionalNuGetFeed(String, String) CustomDotNetCliToolchainBuilder.UseNuGetClearTag(Boolean) CustomDotNetCliToolchainBuilder.TargetFrameworkMoniker(String) CustomDotNetCliToolchainBuilder.DotNetCli(String) CustomDotNetCliToolchainBuilder.RuntimeIdentifier(String) CustomDotNetCliToolchainBuilder.RuntimeFrameworkVersion(String) CustomDotNetCliToolchainBuilder.DisplayName(String) CustomDotNetCliToolchainBuilder.UseTempFolderForRestore(Boolean) CustomDotNetCliToolchainBuilder.GetPortableRuntimeIdentifier() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Toolchains.CustomCoreClr Assembly : BenchmarkDotNet.dll Syntax public class CustomCoreClrToolchainBuilder : CustomDotNetCliToolchainBuilder Methods Create() Declaration public static CustomCoreClrToolchainBuilder Create() Returns Type Description CustomCoreClrToolchainBuilder ToToolchain() Declaration public override IToolchain ToToolchain() Returns Type Description IToolchain Overrides CustomDotNetCliToolchainBuilder.ToToolchain() UseCoreClrDefault() tells the toolchain to use the default CoreClr (for given dotnet cli and moniker), emits no direct dependency to NETCore.Runtime.CoreCLR package Declaration public CustomCoreClrToolchainBuilder UseCoreClrDefault() Returns Type Description CustomCoreClrToolchainBuilder UseCoreClrLocalBuild(String, String, String) creates a toolchain which publishes self-contained app which references local CoreClr build as described here https://github.com/dotnet/coreclr/blob/master/Documentation/workflow/UsingDotNetCli.md Declaration public CustomCoreClrToolchainBuilder UseCoreClrLocalBuild(string coreClrVersion, string binPackagesPath, string packagesPath) Parameters Type Name Description System.String coreClrVersion the version of Microsoft.NETCore.Runtime which should be used. Example: \"2.1.0-preview2-26305-0\" System.String binPackagesPath path to folder with CoreClr NuGet packages. Example: \"C:\\coreclr\\bin\\Product\\Windows_NT.x64.Release.nuget\\pkg\" System.String packagesPath path to folder with NuGet packages restored for CoreClr build. Example: \"C:\\Projects\\coreclr\\packages\" Returns Type Description CustomCoreClrToolchainBuilder UseCoreClrNuGet(String, String) creates a toolchain which publishes self-contained app which references NuGet CoreClr package Declaration public CustomCoreClrToolchainBuilder UseCoreClrNuGet(string coreClrVersion, string nugetFeedUrl = \"https://dotnet.myget.org/F/dotnet-core/api/v3/index.json\") Parameters Type Name Description System.String coreClrVersion the version of Microsoft.NETCore.Runtime which should be used. Example: \"2.1.0-preview2-26305-0\" System.String nugetFeedUrl url to NuGet CoreCLR feed, The default is: \"https://dotnet.myget.org/F/dotnet-core/api/v3/index.json\" Returns Type Description CustomCoreClrToolchainBuilder UseCoreFxDefault() tells the toolchain to use the default CoreFx (for given dotnet cli and moniker), emits no direct dependency to NetCore.App package Declaration public CustomCoreClrToolchainBuilder UseCoreFxDefault() Returns Type Description CustomCoreClrToolchainBuilder UseCoreFxLocalBuild(String, String) creates a toolchain which publishes self-contained app which references local CoreFx build as described here https://github.com/dotnet/corefx/blob/master/Documentation/project-docs/dogfooding.md#more-advanced-scenario---using-your-local-corefx-build Declaration public CustomCoreClrToolchainBuilder UseCoreFxLocalBuild(string privateCoreFxNetCoreAppVersion, string binPackagesPath) Parameters Type Name Description System.String privateCoreFxNetCoreAppVersion the version of Microsoft.Private.CoreFx.NETCoreApp which should be used. Example: \"4.5.0-preview2-26307-0\" System.String binPackagesPath path to folder with CoreFX NuGet packages, Example: \"C:\\Projects\\forks\\corefx\\bin\\packages\\Release\" Returns Type Description CustomCoreClrToolchainBuilder UseCoreFxNuGet(String, String) creates a toolchain which publishes self-contained app which references NuGet CoreFx build Declaration public CustomCoreClrToolchainBuilder UseCoreFxNuGet(string privateCoreFxNetCoreAppVersion, string nugetFeedUrl = \"https://dotnet.myget.org/F/dotnet-core/api/v3/index.json\") Parameters Type Name Description System.String privateCoreFxNetCoreAppVersion the version of Microsoft.Private.CoreFx.NETCoreApp which should be used. Example: \"4.5.0-preview2-26307-0\" System.String nugetFeedUrl ulr to NuGet CoreFX feed, The default is: \"https://dotnet.myget.org/F/dotnet-core/api/v3/index.json\" Returns Type Description CustomCoreClrToolchainBuilder Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Toolchains.CustomCoreClr.Generator.html": {
    "href": "api/BenchmarkDotNet.Toolchains.CustomCoreClr.Generator.html",
    "title": "Class Generator | BenchmarkDotNet",
    "keywords": "Class Generator generates new csproj file for self-contained .NET Core app which uses given CoreCLR NuGet packages based on https://github.com/dotnet/coreclr/blob/master/Documentation/workflow/UsingDotNetCli.md and https://github.com/dotnet/corefx/blob/master/Documentation/project-docs/dogfooding.md Inheritance System.Object GeneratorBase DotNetCliGenerator CsProjGenerator Generator Implements IGenerator Inherited Members CsProjGenerator.RuntimeFrameworkVersion CsProjGenerator.GetProjectFilePath(String) CsProjGenerator.GetRuntimeSettings(GcMode, IResolver) CsProjGenerator.GetProjectFilePath(Type, ILogger) DotNetCliGenerator.TargetFrameworkMoniker DotNetCliGenerator.PlatformProvider DotNetCliGenerator.Runtime DotNetCliGenerator.ExtraDependencies DotNetCliGenerator.Imports DotNetCliGenerator.CopyAllRequiredFiles(ArtifactsPaths) DotNetCliGenerator.SetPlatform(String, String) DotNetCliGenerator.SetCodeFileName(String, String) DotNetCliGenerator.SetTargetFrameworkMoniker(String, String) GeneratorBase.GenerateProject(BuildPartition, ILogger, String) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Toolchains.CustomCoreClr Assembly : BenchmarkDotNet.dll Syntax public class Generator : CsProjGenerator, IGenerator Methods GenerateBuildScript(BuildPartition, ArtifactsPaths) Declaration protected override void GenerateBuildScript(BuildPartition buildPartition, ArtifactsPaths artifactsPaths) Parameters Type Name Description BuildPartition buildPartition ArtifactsPaths artifactsPaths Overrides DotNetCliGenerator.GenerateBuildScript(BuildPartition, ArtifactsPaths) GenerateNuGetConfig(ArtifactsPaths) Declaration protected override void GenerateNuGetConfig(ArtifactsPaths artifactsPaths) Parameters Type Name Description ArtifactsPaths artifactsPaths Overrides GeneratorBase.GenerateNuGetConfig(ArtifactsPaths) GenerateProject(BuildPartition, ArtifactsPaths, ILogger) Declaration protected override void GenerateProject(BuildPartition buildPartition, ArtifactsPaths artifactsPaths, ILogger logger) Parameters Type Name Description BuildPartition buildPartition ArtifactsPaths artifactsPaths ILogger logger Overrides CsProjGenerator.GenerateProject(BuildPartition, ArtifactsPaths, ILogger) GetArtifactsToCleanup(ArtifactsPaths) Declaration protected override string[] GetArtifactsToCleanup(ArtifactsPaths artifactsPaths) Parameters Type Name Description ArtifactsPaths artifactsPaths Returns Type Description System.String [] Overrides DotNetCliGenerator.GetArtifactsToCleanup(ArtifactsPaths) GetBinariesDirectoryPath(String, String) Declaration protected override string GetBinariesDirectoryPath(string buildArtifactsDirectoryPath, string configuration) Parameters Type Name Description System.String buildArtifactsDirectoryPath System.String configuration Returns Type Description System.String Overrides CsProjGenerator.GetBinariesDirectoryPath(String, String) GetBuildArtifactsDirectoryPath(BuildPartition, String) Declaration protected override string GetBuildArtifactsDirectoryPath(BuildPartition buildPartition, string programName) Parameters Type Name Description BuildPartition buildPartition System.String programName Returns Type Description System.String Overrides CsProjGenerator.GetBuildArtifactsDirectoryPath(BuildPartition, String) GetExecutableExtension() Declaration protected override string GetExecutableExtension() Returns Type Description System.String Overrides DotNetCliGenerator.GetExecutableExtension() GetPackagesDirectoryPath(String) Declaration protected override string GetPackagesDirectoryPath(string buildArtifactsDirectoryPath) Parameters Type Name Description System.String buildArtifactsDirectoryPath Returns Type Description System.String Overrides GeneratorBase.GetPackagesDirectoryPath(String) Implements IGenerator Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Exporters.PrettyDisassemblyExporter.html": {
    "href": "api/BenchmarkDotNet.Exporters.PrettyDisassemblyExporter.html",
    "title": "Class PrettyDisassemblyExporter | BenchmarkDotNet",
    "keywords": "Class PrettyDisassemblyExporter Inheritance System.Object PrettyDisassemblyExporter Implements IExporter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Exporters Assembly : BenchmarkDotNet.dll Syntax public class PrettyDisassemblyExporter : IExporter Constructors PrettyDisassemblyExporter(IReadOnlyDictionary<Benchmark, DisassemblyResult>) Declaration public PrettyDisassemblyExporter(IReadOnlyDictionary<Benchmark, DisassemblyResult> results) Parameters Type Name Description System.Collections.Generic.IReadOnlyDictionary < Benchmark , DisassemblyResult > results Properties Name Declaration public string Name { get; } Property Value Type Description System.String Methods ExportToFiles(Summary, ILogger) Declaration public IEnumerable<string> ExportToFiles(Summary summary, ILogger consoleLogger) Parameters Type Name Description Summary summary ILogger consoleLogger Returns Type Description System.Collections.Generic.IEnumerable < System.String > ExportToLog(Summary, ILogger) Declaration public void ExportToLog(Summary summary, ILogger logger) Parameters Type Name Description Summary summary ILogger logger Implements IExporter Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Exporters.RPlotExporter.html": {
    "href": "api/BenchmarkDotNet.Exporters.RPlotExporter.html",
    "title": "Class RPlotExporter | BenchmarkDotNet",
    "keywords": "Class RPlotExporter Inheritance System.Object RPlotExporter Implements IExporter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Exporters Assembly : BenchmarkDotNet.dll Syntax public class RPlotExporter : IExporter, IExporterDependencies Fields Default Declaration public static readonly IExporter Default Field Value Type Description IExporter Properties Dependencies Declaration public IEnumerable<IExporter> Dependencies { get; } Property Value Type Description System.Collections.Generic.IEnumerable < IExporter > Name Declaration public string Name { get; } Property Value Type Description System.String Methods ExportToFiles(Summary, ILogger) Declaration public IEnumerable<string> ExportToFiles(Summary summary, ILogger consoleLogger) Parameters Type Name Description Summary summary ILogger consoleLogger Returns Type Description System.Collections.Generic.IEnumerable < System.String > ExportToLog(Summary, ILogger) Declaration public void ExportToLog(Summary summary, ILogger logger) Parameters Type Name Description Summary summary ILogger logger FindInPath(String) Declaration public static string FindInPath(string fileName) Parameters Type Name Description System.String fileName Returns Type Description System.String Implements IExporter Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Jobs.MonoJobAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Jobs.MonoJobAttribute.html",
    "title": "Class MonoJobAttribute | BenchmarkDotNet",
    "keywords": "Class MonoJobAttribute Inheritance System.Object System.Attribute JobConfigBaseAttribute MonoJobAttribute Implements IConfigSource Inherited Members JobConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Jobs Assembly : BenchmarkDotNet.dll Syntax [AttributeUsage(AttributeTargets.Assembly | AttributeTargets.Class, AllowMultiple = true)] public class MonoJobAttribute : JobConfigBaseAttribute, IConfigSource Constructors MonoJobAttribute(Boolean) Declaration public MonoJobAttribute(bool isBaseline = false) Parameters Type Name Description System.Boolean isBaseline MonoJobAttribute(String, String, Boolean) Declaration public MonoJobAttribute(string name, string path, bool isBaseline = false) Parameters Type Name Description System.String name System.String path System.Boolean isBaseline Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Engines.Engine.html": {
    "href": "api/BenchmarkDotNet.Engines.Engine.html",
    "title": "Class Engine | BenchmarkDotNet",
    "keywords": "Class Engine Inheritance System.Object Engine Implements IEngine System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Engines Assembly : BenchmarkDotNet.dll Syntax public class Engine : IEngine, IDisposable Fields MinInvokeCount Declaration public const int MinInvokeCount = 4 Field Value Type Description System.Int32 Properties Dummy1Action Declaration public Action Dummy1Action { get; } Property Value Type Description System.Action Dummy2Action Declaration public Action Dummy2Action { get; } Property Value Type Description System.Action Dummy3Action Declaration public Action Dummy3Action { get; } Property Value Type Description System.Action GlobalCleanupAction Declaration public Action GlobalCleanupAction { get; } Property Value Type Description System.Action GlobalSetupAction Declaration public Action GlobalSetupAction { get; } Property Value Type Description System.Action Host Declaration public IHost Host { get; } Property Value Type Description IHost IdleAction Declaration public Action<long> IdleAction { get; } Property Value Type Description System.Action < System.Int64 > IterationCleanupAction Declaration public Action IterationCleanupAction { get; } Property Value Type Description System.Action IterationSetupAction Declaration public Action IterationSetupAction { get; } Property Value Type Description System.Action MainAction Declaration public Action<long> MainAction { get; } Property Value Type Description System.Action < System.Int64 > OperationsPerInvoke Declaration public long OperationsPerInvoke { get; } Property Value Type Description System.Int64 Resolver Declaration public IResolver Resolver { get; } Property Value Type Description IResolver TargetJob Declaration public Job TargetJob { get; } Property Value Type Description Job Methods Dispose() Declaration public void Dispose() Run() Declaration public RunResults Run() Returns Type Description RunResults RunIteration(IterationData) Declaration public Measurement RunIteration(IterationData data) Parameters Type Name Description IterationData data Returns Type Description Measurement WriteLine() Declaration public void WriteLine() WriteLine(String) Declaration public void WriteLine(string text) Parameters Type Name Description System.String text Implements IEngine System.IDisposable Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Mathematics.OutlierMode.html": {
    "href": "api/BenchmarkDotNet.Mathematics.OutlierMode.html",
    "title": "Enum OutlierMode | BenchmarkDotNet",
    "keywords": "Enum OutlierMode The enum is design to remove some outliers from the distribution. Namespace : BenchmarkDotNet.Mathematics Assembly : BenchmarkDotNet.dll Syntax public enum OutlierMode Fields Name Description All Remove all outliers. None Don't remove outliers. OnlyLower Remove only lower outliers (which is smaller than lowerFence). OnlyUpper Remove only upper outliers (which is bigger than upperFence). Extension Methods CommonExtensions.IsOneOf<OutlierMode>(OutlierMode[])"
  },
  "api/BenchmarkDotNet.Mathematics.PercentileValues.html": {
    "href": "api/BenchmarkDotNet.Mathematics.PercentileValues.html",
    "title": "Class PercentileValues | BenchmarkDotNet",
    "keywords": "Class PercentileValues Inheritance System.Object PercentileValues Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Mathematics Assembly : BenchmarkDotNet.dll Syntax public class PercentileValues Properties P0 Declaration public double P0 { get; } Property Value Type Description System.Double P100 Declaration public double P100 { get; } Property Value Type Description System.Double P25 Declaration public double P25 { get; } Property Value Type Description System.Double P50 Declaration public double P50 { get; } Property Value Type Description System.Double P67 Declaration public double P67 { get; } Property Value Type Description System.Double P80 Declaration public double P80 { get; } Property Value Type Description System.Double P85 Declaration public double P85 { get; } Property Value Type Description System.Double P90 Declaration public double P90 { get; } Property Value Type Description System.Double P95 Declaration public double P95 { get; } Property Value Type Description System.Double Methods Percentile(Int32) Declaration public double Percentile(int percentile) Parameters Type Name Description System.Int32 percentile Returns Type Description System.Double ToStr(Boolean) Declaration public string ToStr(bool showLevel = true) Parameters Type Name Description System.Boolean showLevel Returns Type Description System.String ToTimeStr(TimeUnit, Boolean) Declaration public string ToTimeStr(TimeUnit unit = null, bool showLevel = true) Parameters Type Name Description TimeUnit unit System.Boolean showLevel Returns Type Description System.String Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Toolchains.DotNetCli.CustomDotNetCliToolchainBuilder.html": {
    "href": "api/BenchmarkDotNet.Toolchains.DotNetCli.CustomDotNetCliToolchainBuilder.html",
    "title": "Class CustomDotNetCliToolchainBuilder | BenchmarkDotNet",
    "keywords": "Class CustomDotNetCliToolchainBuilder Inheritance System.Object CustomDotNetCliToolchainBuilder CoreRtToolchainBuilder CustomCoreClrToolchainBuilder Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Toolchains.DotNetCli Assembly : BenchmarkDotNet.dll Syntax public abstract class CustomDotNetCliToolchainBuilder Fields customDotNetCliPath Declaration protected string customDotNetCliPath Field Value Type Description System.String displayName Declaration protected string displayName Field Value Type Description System.String feeds Declaration protected Dictionary<string, string> feeds Field Value Type Description System.Collections.Generic.Dictionary < System.String , System.String > runtimeFrameworkVersion Declaration protected string runtimeFrameworkVersion Field Value Type Description System.String runtimeIdentifier Declaration protected string runtimeIdentifier Field Value Type Description System.String targetFrameworkMoniker Declaration protected string targetFrameworkMoniker Field Value Type Description System.String useNuGetClearTag Declaration protected bool useNuGetClearTag Field Value Type Description System.Boolean useTempFolderForRestore Declaration protected bool useTempFolderForRestore Field Value Type Description System.Boolean Methods AdditionalNuGetFeed(String, String) it allows you to define an additional NuGet feed, you can seal the feeds list by using the UseNuGetClearTag() method Declaration public CustomDotNetCliToolchainBuilder AdditionalNuGetFeed(string feedName, string feedAddress) Parameters Type Name Description System.String feedName the name of the feed, will be used in the auto-generated NuGet.config file System.String feedAddress the address of the feed, will be used in the auto-generated NuGet.config file Returns Type Description CustomDotNetCliToolchainBuilder DisplayName(String) Declaration public CustomDotNetCliToolchainBuilder DisplayName(string displayName) Parameters Type Name Description System.String displayName the name of the toolchain to be displayed in results Returns Type Description CustomDotNetCliToolchainBuilder DotNetCli(String) Declaration public CustomDotNetCliToolchainBuilder DotNetCli(string customDotNetCliPath) Parameters Type Name Description System.String customDotNetCliPath if not provided, the one from PATH will be used Returns Type Description CustomDotNetCliToolchainBuilder GetPortableRuntimeIdentifier() Declaration protected static string GetPortableRuntimeIdentifier() Returns Type Description System.String RuntimeFrameworkVersion(String) Declaration public CustomDotNetCliToolchainBuilder RuntimeFrameworkVersion(string runtimeFrameworkVersion) Parameters Type Name Description System.String runtimeFrameworkVersion optional, when set it's copied to the generated .csproj file Returns Type Description CustomDotNetCliToolchainBuilder RuntimeIdentifier(String) Declaration public CustomDotNetCliToolchainBuilder RuntimeIdentifier(string runtimeIdentifier) Parameters Type Name Description System.String runtimeIdentifier if not provided, portable OS-arch will be used (example: \"win-x64\", \"linux-x86\") Returns Type Description CustomDotNetCliToolchainBuilder TargetFrameworkMoniker(String) Declaration public CustomDotNetCliToolchainBuilder TargetFrameworkMoniker(string targetFrameworkMoniker = \"netcoreapp2.1\") Parameters Type Name Description System.String targetFrameworkMoniker TFM, netcoreapp2.1 is the default Returns Type Description CustomDotNetCliToolchainBuilder ToToolchain() Declaration public abstract IToolchain ToToolchain() Returns Type Description IToolchain UseNuGetClearTag(Boolean) emits clear tag in the auto-generated NuGet.config file Declaration public CustomDotNetCliToolchainBuilder UseNuGetClearTag(bool value) Parameters Type Name Description System.Boolean value Returns Type Description CustomDotNetCliToolchainBuilder UseTempFolderForRestore(Boolean) restore to temp folder to keep your CI clean or install same package many times (perhaps with different content but same version number), by default true for local builds https://github.com/dotnet/corefx/blob/master/Documentation/project-docs/dogfooding.md#3---consuming-subsequent-code-changes-by-rebuilding-the-package-alternative-2 Declaration public CustomDotNetCliToolchainBuilder UseTempFolderForRestore(bool value) Parameters Type Name Description System.Boolean value Returns Type Description CustomDotNetCliToolchainBuilder Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Toolchains.DotNetCli.DotNetCliBuilder.html": {
    "href": "api/BenchmarkDotNet.Toolchains.DotNetCli.DotNetCliBuilder.html",
    "title": "Class DotNetCliBuilder | BenchmarkDotNet",
    "keywords": "Class DotNetCliBuilder Inheritance System.Object DotNetCliBuilder Implements IBuilder Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Toolchains.DotNetCli Assembly : BenchmarkDotNet.dll Syntax public class DotNetCliBuilder : IBuilder Constructors DotNetCliBuilder(String, String) Declaration public DotNetCliBuilder(string targetFrameworkMoniker, string customDotNetCliPath = null) Parameters Type Name Description System.String targetFrameworkMoniker System.String customDotNetCliPath Properties RestoreCommand Declaration public virtual string RestoreCommand { get; } Property Value Type Description System.String Methods Build(GenerateResult, BuildPartition, ILogger) Declaration public BuildResult Build(GenerateResult generateResult, BuildPartition buildPartition, ILogger logger) Parameters Type Name Description GenerateResult generateResult BuildPartition buildPartition ILogger logger Returns Type Description BuildResult GetBuildCommand(String, Boolean, String) Declaration public virtual string GetBuildCommand(string frameworkMoniker, bool justTheProjectItself, string configuration) Parameters Type Name Description System.String frameworkMoniker System.Boolean justTheProjectItself System.String configuration Returns Type Description System.String Implements IBuilder Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.IterationCleanupAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.IterationCleanupAttribute.html",
    "title": "Class IterationCleanupAttribute | BenchmarkDotNet",
    "keywords": "Class IterationCleanupAttribute Marks method to be executed after each benchmark iteration. Inheritance System.Object System.Attribute TargetedAttribute IterationCleanupAttribute Inherited Members TargetedAttribute.Target System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes Assembly : BenchmarkDotNet.dll Syntax [AttributeUsage(AttributeTargets.Method)] public class IterationCleanupAttribute : TargetedAttribute Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Jobs.GcModeExtensions.html": {
    "href": "api/BenchmarkDotNet.Jobs.GcModeExtensions.html",
    "title": "Class GcModeExtensions | BenchmarkDotNet",
    "keywords": "Class GcModeExtensions Inheritance System.Object GcModeExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Jobs Assembly : BenchmarkDotNet.dll Syntax public static class GcModeExtensions Methods WithAllowVeryLargeObjects(GcMode, Boolean) Declaration public static GcMode WithAllowVeryLargeObjects(this GcMode mode, bool value) Parameters Type Name Description GcMode mode System.Boolean value Returns Type Description GcMode WithConcurrent(GcMode, Boolean) Declaration public static GcMode WithConcurrent(this GcMode mode, bool value) Parameters Type Name Description GcMode mode System.Boolean value Returns Type Description GcMode WithCpuGroups(GcMode, Boolean) Declaration public static GcMode WithCpuGroups(this GcMode mode, bool value) Parameters Type Name Description GcMode mode System.Boolean value Returns Type Description GcMode WithForce(GcMode, Boolean) Declaration public static GcMode WithForce(this GcMode mode, bool value) Parameters Type Name Description GcMode mode System.Boolean value Returns Type Description GcMode WithHeapAffinitizeMask(GcMode, Int32) Declaration public static GcMode WithHeapAffinitizeMask(this GcMode mode, int heapAffinitizeMask) Parameters Type Name Description GcMode mode System.Int32 heapAffinitizeMask Returns Type Description GcMode WithHeapCount(GcMode, Int32) Declaration public static GcMode WithHeapCount(this GcMode mode, int heapCount) Parameters Type Name Description GcMode mode System.Int32 heapCount Returns Type Description GcMode WithNoAffinitize(GcMode, Boolean) Declaration public static GcMode WithNoAffinitize(this GcMode mode, bool value) Parameters Type Name Description GcMode mode System.Boolean value Returns Type Description GcMode WithRetainVm(GcMode, Boolean) Declaration public static GcMode WithRetainVm(this GcMode mode, bool value) Parameters Type Name Description GcMode mode System.Boolean value Returns Type Description GcMode WithServer(GcMode, Boolean) Declaration public static GcMode WithServer(this GcMode mode, bool value) Parameters Type Name Description GcMode mode System.Boolean value Returns Type Description GcMode"
  },
  "api/BenchmarkDotNet.Jobs.InfrastructureMode.html": {
    "href": "api/BenchmarkDotNet.Jobs.InfrastructureMode.html",
    "title": "Class InfrastructureMode | BenchmarkDotNet",
    "keywords": "Class InfrastructureMode Inheritance System.Object CharacteristicObject CharacteristicObject < InfrastructureMode > JobMode < InfrastructureMode > InfrastructureMode Inherited Members JobMode<InfrastructureMode>.Default JobMode<InfrastructureMode>.Job CharacteristicObject<InfrastructureMode>.Apply(CharacteristicObject) CharacteristicObject<InfrastructureMode>.Apply(CharacteristicObject[]) CharacteristicObject<InfrastructureMode>.ApplyAndFreeze(CharacteristicObject) CharacteristicObject<InfrastructureMode>.ApplyAndFreeze(CharacteristicObject[]) CharacteristicObject<InfrastructureMode>.Freeze() CharacteristicObject<InfrastructureMode>.UnfreezeCopy() CharacteristicObject<InfrastructureMode>.CreateCharacteristic<TC>(String) CharacteristicObject.ResolveId(CharacteristicObject, String) CharacteristicObject.IdCharacteristic CharacteristicObject.AssertNotFrozen() CharacteristicObject.AssertIsRoot() CharacteristicObject.AssertIsNonFrozenRoot() CharacteristicObject.AssertIsAssignable(Characteristic, Object) CharacteristicObject.Owner CharacteristicObject.OwnerOrSelf CharacteristicObject.Frozen CharacteristicObject.IsPropertyBag CharacteristicObject.HasChanges CharacteristicObject.GetCharacteristicsWithValues() CharacteristicObject.HasValue(Characteristic) CharacteristicObject.ResolveValue<T>(Characteristic<T>, IResolver) CharacteristicObject.ResolveValue(Characteristic, IResolver) CharacteristicObject.ResolveValue<T>(Characteristic<T>, T) CharacteristicObject.ResolveValue(Characteristic, Object) CharacteristicObject.ResolveValueAsNullable<T>(Characteristic<T>) CharacteristicObject.ApplyCore(CharacteristicObject) CharacteristicObject.FreezeCore() CharacteristicObject.UnfreezeCopyCore() CharacteristicObject.Id CharacteristicObject.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Jobs Assembly : BenchmarkDotNet.dll Syntax public sealed class InfrastructureMode : JobMode<InfrastructureMode> Constructors InfrastructureMode() Declaration public InfrastructureMode() Fields ArgumentsCharacteristic Declaration public static readonly Characteristic<IReadOnlyList<Argument>> ArgumentsCharacteristic Field Value Type Description Characteristic < System.Collections.Generic.IReadOnlyList < Argument >> BuildConfigurationCharacteristic Declaration public static readonly Characteristic<string> BuildConfigurationCharacteristic Field Value Type Description Characteristic < System.String > ClockCharacteristic Declaration public static readonly Characteristic<IClock> ClockCharacteristic Field Value Type Description Characteristic < IClock > EngineFactoryCharacteristic Declaration public static readonly Characteristic<IEngineFactory> EngineFactoryCharacteristic Field Value Type Description Characteristic < IEngineFactory > EnvironmentVariablesCharacteristic Declaration public static readonly Characteristic<IReadOnlyList<EnvironmentVariable>> EnvironmentVariablesCharacteristic Field Value Type Description Characteristic < System.Collections.Generic.IReadOnlyList < EnvironmentVariable >> InProcess Declaration public static readonly InfrastructureMode InProcess Field Value Type Description InfrastructureMode InProcessDontLogOutput Declaration public static readonly InfrastructureMode InProcessDontLogOutput Field Value Type Description InfrastructureMode ReleaseConfigurationName Declaration public const string ReleaseConfigurationName = \"Release\" Field Value Type Description System.String ToolchainCharacteristic Declaration public static readonly Characteristic<IToolchain> ToolchainCharacteristic Field Value Type Description Characteristic < IToolchain > Properties Arguments Declaration public IReadOnlyList<Argument> Arguments { get; set; } Property Value Type Description System.Collections.Generic.IReadOnlyList < Argument > BuildConfiguration Declaration public string BuildConfiguration { get; set; } Property Value Type Description System.String Clock Declaration public IClock Clock { get; set; } Property Value Type Description IClock EngineFactory this type will be used in the auto-generated program to create engine in separate process it must have parameterless constructor Declaration public IEngineFactory EngineFactory { get; set; } Property Value Type Description IEngineFactory EnvironmentVariables Declaration public IReadOnlyList<EnvironmentVariable> EnvironmentVariables { get; set; } Property Value Type Description System.Collections.Generic.IReadOnlyList < EnvironmentVariable > Toolchain Declaration public IToolchain Toolchain { get; set; } Property Value Type Description IToolchain Extension Methods CharacteristicHelper.GetThisTypeCharacteristics(CharacteristicObject) CharacteristicHelper.GetAllCharacteristics(CharacteristicObject) CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Jobs.Job.html": {
    "href": "api/BenchmarkDotNet.Jobs.Job.html",
    "title": "Class Job | BenchmarkDotNet",
    "keywords": "Class Job Inheritance System.Object CharacteristicObject CharacteristicObject < Job > JobMode < Job > Job Inherited Members JobMode<Job>.Default JobMode<Job>.Job CharacteristicObject<Job>.Apply(CharacteristicObject) CharacteristicObject<Job>.Apply(CharacteristicObject[]) CharacteristicObject<Job>.ApplyAndFreeze(CharacteristicObject) CharacteristicObject<Job>.ApplyAndFreeze(CharacteristicObject[]) CharacteristicObject<Job>.Freeze() CharacteristicObject<Job>.UnfreezeCopy() CharacteristicObject<Job>.CreateCharacteristic<TC>(String) CharacteristicObject.ResolveId(CharacteristicObject, String) CharacteristicObject.IdCharacteristic CharacteristicObject.AssertNotFrozen() CharacteristicObject.AssertIsRoot() CharacteristicObject.AssertIsNonFrozenRoot() CharacteristicObject.AssertIsAssignable(Characteristic, Object) CharacteristicObject.Owner CharacteristicObject.OwnerOrSelf CharacteristicObject.Frozen CharacteristicObject.IsPropertyBag CharacteristicObject.HasChanges CharacteristicObject.GetCharacteristicsWithValues() CharacteristicObject.HasValue(Characteristic) CharacteristicObject.ResolveValue<T>(Characteristic<T>, IResolver) CharacteristicObject.ResolveValue(Characteristic, IResolver) CharacteristicObject.ResolveValue<T>(Characteristic<T>, T) CharacteristicObject.ResolveValue(Characteristic, Object) CharacteristicObject.ResolveValueAsNullable<T>(Characteristic<T>) CharacteristicObject.ApplyCore(CharacteristicObject) CharacteristicObject.FreezeCore() CharacteristicObject.UnfreezeCopyCore() CharacteristicObject.Id CharacteristicObject.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Jobs Assembly : BenchmarkDotNet.dll Syntax public sealed class Job : JobMode<Job> Constructors Job() Declaration public Job() Job(CharacteristicObject) Declaration public Job(CharacteristicObject other) Parameters Type Name Description CharacteristicObject other Job(CharacteristicObject[]) Declaration public Job(params CharacteristicObject[] others) Parameters Type Name Description CharacteristicObject [] others Job(String) Declaration public Job(string id) Parameters Type Name Description System.String id Job(String, CharacteristicObject) Declaration public Job(string id, CharacteristicObject other) Parameters Type Name Description System.String id CharacteristicObject other Job(String, CharacteristicObject[]) Declaration public Job(string id, params CharacteristicObject[] others) Parameters Type Name Description System.String id CharacteristicObject [] others Fields AccuracyCharacteristic Declaration public static readonly Characteristic<AccuracyMode> AccuracyCharacteristic Field Value Type Description Characteristic < AccuracyMode > Clr Declaration public static readonly Job Clr Field Value Type Description Job Core Declaration public static readonly Job Core Field Value Type Description Job CoreRT Declaration public static readonly Job CoreRT Field Value Type Description Job Dry Declaration public static readonly Job Dry Field Value Type Description Job DryClr Declaration public static readonly Job DryClr Field Value Type Description Job DryCore Declaration public static readonly Job DryCore Field Value Type Description Job DryCoreRT Declaration public static readonly Job DryCoreRT Field Value Type Description Job DryMono Declaration public static readonly Job DryMono Field Value Type Description Job EnvCharacteristic Declaration public static readonly Characteristic<EnvMode> EnvCharacteristic Field Value Type Description Characteristic < EnvMode > InfrastructureCharacteristic Declaration public static readonly Characteristic<InfrastructureMode> InfrastructureCharacteristic Field Value Type Description Characteristic < InfrastructureMode > InProcess Declaration public static readonly Job InProcess Field Value Type Description Job InProcessDontLogOutput Declaration public static readonly Job InProcessDontLogOutput Field Value Type Description Job LegacyJitX64 Declaration public static readonly Job LegacyJitX64 Field Value Type Description Job LegacyJitX86 Declaration public static readonly Job LegacyJitX86 Field Value Type Description Job LongRun Declaration public static readonly Job LongRun Field Value Type Description Job MediumRun Declaration public static readonly Job MediumRun Field Value Type Description Job MetaCharacteristic Declaration public static readonly Characteristic<MetaMode> MetaCharacteristic Field Value Type Description Characteristic < MetaMode > Mono Declaration public static readonly Job Mono Field Value Type Description Job RunCharacteristic Declaration public static readonly Characteristic<RunMode> RunCharacteristic Field Value Type Description Characteristic < RunMode > RyuJitX64 Declaration public static readonly Job RyuJitX64 Field Value Type Description Job RyuJitX86 Declaration public static readonly Job RyuJitX86 Field Value Type Description Job ShortRun Declaration public static readonly Job ShortRun Field Value Type Description Job VeryLongRun Declaration public static readonly Job VeryLongRun Field Value Type Description Job Properties Accuracy Declaration public AccuracyMode Accuracy { get; } Property Value Type Description AccuracyMode DisplayInfo Declaration public string DisplayInfo { get; } Property Value Type Description System.String Env Declaration public EnvMode Env { get; } Property Value Type Description EnvMode FolderInfo Declaration public string FolderInfo { get; } Property Value Type Description System.String Infrastructure Declaration public InfrastructureMode Infrastructure { get; } Property Value Type Description InfrastructureMode Meta Declaration public MetaMode Meta { get; } Property Value Type Description MetaMode ResolvedId Declaration public string ResolvedId { get; } Property Value Type Description System.String Run Declaration public RunMode Run { get; } Property Value Type Description RunMode Extension Methods CharacteristicHelper.GetThisTypeCharacteristics(CharacteristicObject) CharacteristicHelper.GetAllCharacteristics(CharacteristicObject) CommonExtensions.IsOneOf<T>(T, T[]) JobExtensions.With(Job, Platform) JobExtensions.WithId(Job, String) JobExtensions.With(Job, Jit) JobExtensions.With(Job, Runtime) JobExtensions.WithAffinity(Job, IntPtr) JobExtensions.WithGcServer(Job, Boolean) JobExtensions.WithGcConcurrent(Job, Boolean) JobExtensions.WithGcCpuGroups(Job, Boolean) JobExtensions.WithGcForce(Job, Boolean) JobExtensions.WithGcAllowVeryLargeObjects(Job, Boolean) JobExtensions.WithGcRetainVm(Job, Boolean) JobExtensions.With(Job, GcMode) JobExtensions.With(Job, RunStrategy) JobExtensions.WithLaunchCount(Job, Int32) JobExtensions.WithWarmupCount(Job, Int32) JobExtensions.WithTargetCount(Job, Int32) JobExtensions.WithIterationTime(Job, TimeInterval) JobExtensions.WithInvocationCount(Job, Int32) JobExtensions.WithUnrollFactor(Job, Int32) JobExtensions.RunOncePerIteration(Job) JobExtensions.WithMinTargetIterationCount(Job, Int32) JobExtensions.WithMaxTargetIterationCount(Job, Int32) JobExtensions.With(Job, IToolchain) JobExtensions.With(Job, IClock) JobExtensions.With(Job, IEngineFactory) JobExtensions.WithCustomBuildConfiguration(Job, String) JobExtensions.With(Job, IReadOnlyList<EnvironmentVariable>) JobExtensions.With(Job, IReadOnlyList<Argument>) JobExtensions.WithMaxRelativeError(Job, Double) JobExtensions.WithMaxAbsoluteError(Job, TimeInterval) JobExtensions.WithMinIterationTime(Job, TimeInterval) JobExtensions.WithMinInvokeCount(Job, Int32) JobExtensions.WithEvaluateOverhead(Job, Boolean) JobExtensions.WithOutlierMode(Job, OutlierMode) JobExtensions.WithRemoveOutliers(Job, Boolean) JobExtensions.WithAnalyzeLaunchVariance(Job, Boolean) JobExtensions.AsBaseline(Job) JobExtensions.WithIsBaseline(Job, Boolean)"
  },
  "api/BenchmarkDotNet.Toolchains.InProcess.InProcessToolchain.html": {
    "href": "api/BenchmarkDotNet.Toolchains.InProcess.InProcessToolchain.html",
    "title": "Class InProcessToolchain | BenchmarkDotNet",
    "keywords": "Class InProcessToolchain A toolchain to run the benchmarks in-process. Inheritance System.Object InProcessToolchain Implements IToolchain Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Toolchains.InProcess Assembly : BenchmarkDotNet.dll Syntax public sealed class InProcessToolchain : IToolchain Constructors InProcessToolchain(Boolean) Initializes a new instance of the InProcessToolchain class. Declaration public InProcessToolchain(bool logOutput) Parameters Type Name Description System.Boolean logOutput true if the output should be logged. InProcessToolchain(TimeSpan, BenchmarkActionCodegen, Boolean) Initializes a new instance of the InProcessToolchain class. Declaration public InProcessToolchain(TimeSpan timeout, BenchmarkActionCodegen codegenMode, bool logOutput) Parameters Type Name Description System.TimeSpan timeout Timeout for the run. BenchmarkActionCodegen codegenMode Describes how benchmark action code is generated. System.Boolean logOutput true if the output should be logged. Fields DontLogOutput The toolchain instance without output logging. Declaration public static readonly IToolchain DontLogOutput Field Value Type Description IToolchain Instance The default toolchain instance. Declaration public static readonly IToolchain Instance Field Value Type Description IToolchain Properties Builder The builder. Declaration public IBuilder Builder { get; } Property Value Type Description IBuilder The builder. Executor The executor. Declaration public IExecutor Executor { get; } Property Value Type Description IExecutor The executor. Generator The generator. Declaration public IGenerator Generator { get; } Property Value Type Description IGenerator The generator. Name Name of the toolchain. Declaration public string Name { get; } Property Value Type Description System.String The name of the toolchain. Methods IsSupported(Benchmark, ILogger, IResolver) Determines whether the specified benchmark is supported. Declaration public bool IsSupported(Benchmark benchmark, ILogger logger, IResolver resolver) Parameters Type Name Description Benchmark benchmark The benchmark. ILogger logger The logger. IResolver resolver The resolver. Returns Type Description System.Boolean true if the benchmark can be run with the toolchain. ToString() Returns a System.String that represents this instance. Declaration public override string ToString() Returns Type Description System.String A System.String that represents this instance. Overrides System.Object.ToString() Implements IToolchain Extension Methods CommonExtensions.IsOneOf<T>(T, T[]) See Also IToolchain"
  },
  "api/BenchmarkDotNet.Toolchains.InProcess.InProcessValidator.html": {
    "href": "api/BenchmarkDotNet.Toolchains.InProcess.InProcessValidator.html",
    "title": "Class InProcessValidator | BenchmarkDotNet",
    "keywords": "Class InProcessValidator Validator to be used together with InProcessToolchain to proof that the config matches the environment. Inheritance System.Object InProcessValidator Implements IValidator Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Toolchains.InProcess Assembly : BenchmarkDotNet.dll Syntax public class InProcessValidator : IValidator Fields DontFailOnError The instance of validator that does NOT fail on error. Declaration public static readonly IValidator DontFailOnError Field Value Type Description IValidator FailOnError The instance of validator that DOES fail on error. Declaration public static readonly IValidator FailOnError Field Value Type Description IValidator Properties TreatsWarningsAsErrors Gets a value indicating whether warnings are treated as errors. Declaration public bool TreatsWarningsAsErrors { get; } Property Value Type Description System.Boolean true if the validator should treat warnings as errors; otherwise, false . Methods IsSupported(Benchmark, ILogger) Declaration public static bool IsSupported(Benchmark benchmark, ILogger logger) Parameters Type Name Description Benchmark benchmark ILogger logger Returns Type Description System.Boolean Validate(ValidationParameters) Proofs that benchmarks' jobs match the environment. Declaration public IEnumerable<ValidationError> Validate(ValidationParameters validationParameters) Parameters Type Name Description ValidationParameters validationParameters The validation parameters. Returns Type Description System.Collections.Generic.IEnumerable < ValidationError > Enumerable of validation errors. Implements IValidator Extension Methods CommonExtensions.IsOneOf<T>(T, T[]) See Also IValidator"
  },
  "api/BenchmarkDotNet.Toolchains.Parameters.ExecuteParameters.html": {
    "href": "api/BenchmarkDotNet.Toolchains.Parameters.ExecuteParameters.html",
    "title": "Class ExecuteParameters | BenchmarkDotNet",
    "keywords": "Class ExecuteParameters Inheritance System.Object ExecuteParameters Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Toolchains.Parameters Assembly : BenchmarkDotNet.dll Syntax public class ExecuteParameters Constructors ExecuteParameters(BuildResult, Benchmark, BenchmarkId, ILogger, IResolver, IConfig, IDiagnoser) Declaration public ExecuteParameters(BuildResult buildResult, Benchmark benchmark, BenchmarkId benchmarkId, ILogger logger, IResolver resolver, IConfig config, IDiagnoser diagnoser = null) Parameters Type Name Description BuildResult buildResult Benchmark benchmark BenchmarkId benchmarkId ILogger logger IResolver resolver IConfig config IDiagnoser diagnoser Properties Benchmark Declaration public Benchmark Benchmark { get; } Property Value Type Description Benchmark BenchmarkId Declaration public BenchmarkId BenchmarkId { get; } Property Value Type Description BenchmarkId BuildResult Declaration public BuildResult BuildResult { get; } Property Value Type Description BuildResult Config Declaration public IConfig Config { get; } Property Value Type Description IConfig Diagnoser Declaration public IDiagnoser Diagnoser { get; } Property Value Type Description IDiagnoser Logger Declaration public ILogger Logger { get; } Property Value Type Description ILogger Resolver Declaration public IResolver Resolver { get; } Property Value Type Description IResolver Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Exporters.Csv.CsvHelper.html": {
    "href": "api/BenchmarkDotNet.Exporters.Csv.CsvHelper.html",
    "title": "Class CsvHelper | BenchmarkDotNet",
    "keywords": "Class CsvHelper Inheritance System.Object CsvHelper Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Exporters.Csv Assembly : BenchmarkDotNet.dll Syntax public static class CsvHelper Methods Escape(String, String) Declaration public static string Escape(string value, string currentListSeparator) Parameters Type Name Description System.String value System.String currentListSeparator Returns Type Description System.String"
  },
  "api/BenchmarkDotNet.Attributes.KeepBenchmarkFilesAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.KeepBenchmarkFilesAttribute.html",
    "title": "Class KeepBenchmarkFilesAttribute | BenchmarkDotNet",
    "keywords": "Class KeepBenchmarkFilesAttribute Inheritance System.Object System.Attribute KeepBenchmarkFilesAttribute Implements IConfigSource Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes Assembly : BenchmarkDotNet.dll Syntax public class KeepBenchmarkFilesAttribute : Attribute, IConfigSource Constructors KeepBenchmarkFilesAttribute(Boolean) Declaration public KeepBenchmarkFilesAttribute(bool value = true) Parameters Type Name Description System.Boolean value Properties Config Declaration public IConfig Config { get; } Property Value Type Description IConfig Value Declaration public bool Value { get; } Property Value Type Description System.Boolean Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Characteristics.CharacteristicObject-1.html": {
    "href": "api/BenchmarkDotNet.Characteristics.CharacteristicObject-1.html",
    "title": "Class CharacteristicObject<T> | BenchmarkDotNet",
    "keywords": "Class CharacteristicObject<T> Inheritance System.Object CharacteristicObject CharacteristicObject<T> CharacteristicSet JobMode<T> Inherited Members CharacteristicObject.ResolveId(CharacteristicObject, String) CharacteristicObject.IdCharacteristic CharacteristicObject.AssertNotFrozen() CharacteristicObject.AssertIsRoot() CharacteristicObject.AssertIsNonFrozenRoot() CharacteristicObject.AssertIsAssignable(Characteristic, Object) CharacteristicObject.Owner CharacteristicObject.OwnerOrSelf CharacteristicObject.Frozen CharacteristicObject.IsPropertyBag CharacteristicObject.HasChanges CharacteristicObject.GetCharacteristicsWithValues() CharacteristicObject.HasValue(Characteristic) CharacteristicObject.ResolveValue<T>(Characteristic<T>, IResolver) CharacteristicObject.ResolveValue(Characteristic, IResolver) CharacteristicObject.ResolveValue<T>(Characteristic<T>, T) CharacteristicObject.ResolveValue(Characteristic, Object) CharacteristicObject.ResolveValueAsNullable<T>(Characteristic<T>) CharacteristicObject.ApplyCore(CharacteristicObject) CharacteristicObject.FreezeCore() CharacteristicObject.UnfreezeCopyCore() CharacteristicObject.Id CharacteristicObject.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Characteristics Assembly : BenchmarkDotNet.dll Syntax public abstract class CharacteristicObject<T> : CharacteristicObject where T : CharacteristicObject<T>, new() Type Parameters Name Description T Constructors CharacteristicObject() Declaration protected CharacteristicObject() CharacteristicObject(String) Declaration protected CharacteristicObject(string id) Parameters Type Name Description System.String id Methods Apply(CharacteristicObject) Declaration public T Apply(CharacteristicObject other) Parameters Type Name Description CharacteristicObject other Returns Type Description T Apply(CharacteristicObject[]) Declaration public T Apply(params CharacteristicObject[] others) Parameters Type Name Description CharacteristicObject [] others Returns Type Description T ApplyAndFreeze(CharacteristicObject) Declaration public T ApplyAndFreeze(CharacteristicObject other) Parameters Type Name Description CharacteristicObject other Returns Type Description T ApplyAndFreeze(CharacteristicObject[]) Declaration public T ApplyAndFreeze(params CharacteristicObject[] others) Parameters Type Name Description CharacteristicObject [] others Returns Type Description T CreateCharacteristic<TC>(String) Declaration protected static Characteristic<TC> CreateCharacteristic<TC>(string memberName) Parameters Type Name Description System.String memberName Returns Type Description Characteristic <TC> Type Parameters Name Description TC Freeze() Declaration public T Freeze() Returns Type Description T UnfreezeCopy() Declaration public T UnfreezeCopy() Returns Type Description T Extension Methods CharacteristicHelper.GetThisTypeCharacteristics(CharacteristicObject) CharacteristicHelper.GetAllCharacteristics(CharacteristicObject) CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Characteristics.CharacteristicObject.html": {
    "href": "api/BenchmarkDotNet.Characteristics.CharacteristicObject.html",
    "title": "Class CharacteristicObject | BenchmarkDotNet",
    "keywords": "Class CharacteristicObject Inheritance System.Object CharacteristicObject CharacteristicObject<T> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Characteristics Assembly : BenchmarkDotNet.dll Syntax public abstract class CharacteristicObject Constructors CharacteristicObject() Declaration protected CharacteristicObject() CharacteristicObject(String) Declaration protected CharacteristicObject(string id) Parameters Type Name Description System.String id Fields IdCharacteristic Declaration public static readonly Characteristic<string> IdCharacteristic Field Value Type Description Characteristic < System.String > Properties Frozen Declaration public bool Frozen { get; } Property Value Type Description System.Boolean HasChanges Declaration public bool HasChanges { get; } Property Value Type Description System.Boolean Id Declaration public string Id { get; } Property Value Type Description System.String IsPropertyBag Declaration protected virtual bool IsPropertyBag { get; } Property Value Type Description System.Boolean Owner Declaration protected CharacteristicObject Owner { get; } Property Value Type Description CharacteristicObject OwnerOrSelf Declaration protected CharacteristicObject OwnerOrSelf { get; } Property Value Type Description CharacteristicObject Methods Apply(CharacteristicObject) Declaration public void Apply(CharacteristicObject other) Parameters Type Name Description CharacteristicObject other ApplyCore(CharacteristicObject) Declaration protected CharacteristicObject ApplyCore(CharacteristicObject other) Parameters Type Name Description CharacteristicObject other Returns Type Description CharacteristicObject AssertIsAssignable(Characteristic, Object) Declaration protected void AssertIsAssignable(Characteristic characteristic, object value) Parameters Type Name Description Characteristic characteristic System.Object value AssertIsNonFrozenRoot() Declaration protected void AssertIsNonFrozenRoot() AssertIsRoot() Declaration protected void AssertIsRoot() AssertNotFrozen() Declaration protected void AssertNotFrozen() Freeze() Declaration public void Freeze() FreezeCore() Declaration protected CharacteristicObject FreezeCore() Returns Type Description CharacteristicObject GetCharacteristicsWithValues() Declaration public IEnumerable<Characteristic> GetCharacteristicsWithValues() Returns Type Description System.Collections.Generic.IEnumerable < Characteristic > HasValue(Characteristic) Declaration public bool HasValue(Characteristic characteristic) Parameters Type Name Description Characteristic characteristic Returns Type Description System.Boolean ResolveId(CharacteristicObject, String) Declaration protected static string ResolveId(CharacteristicObject obj, string actual) Parameters Type Name Description CharacteristicObject obj System.String actual Returns Type Description System.String ResolveValue(Characteristic, IResolver) Declaration public object ResolveValue(Characteristic characteristic, IResolver resolver) Parameters Type Name Description Characteristic characteristic IResolver resolver Returns Type Description System.Object ResolveValue(Characteristic, Object) Declaration public object ResolveValue(Characteristic characteristic, object defaultValue) Parameters Type Name Description Characteristic characteristic System.Object defaultValue Returns Type Description System.Object ResolveValue<T>(Characteristic<T>, T) Declaration public T ResolveValue<T>(Characteristic<T> characteristic, T defaultValue) Parameters Type Name Description Characteristic <T> characteristic T defaultValue Returns Type Description T Type Parameters Name Description T ResolveValue<T>(Characteristic<T>, IResolver) Declaration public T ResolveValue<T>(Characteristic<T> characteristic, IResolver resolver) Parameters Type Name Description Characteristic <T> characteristic IResolver resolver Returns Type Description T Type Parameters Name Description T ResolveValueAsNullable<T>(Characteristic<T>) Declaration public T? ResolveValueAsNullable<T>(Characteristic<T> characteristic) where T : struct Parameters Type Name Description Characteristic <T> characteristic Returns Type Description System.Nullable <T> Type Parameters Name Description T ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() UnfreezeCopy() Declaration public CharacteristicObject UnfreezeCopy() Returns Type Description CharacteristicObject UnfreezeCopyCore() Declaration protected CharacteristicObject UnfreezeCopyCore() Returns Type Description CharacteristicObject Extension Methods CharacteristicHelper.GetThisTypeCharacteristics(CharacteristicObject) CharacteristicHelper.GetAllCharacteristics(CharacteristicObject) CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Columns.ColumnExtensions.html": {
    "href": "api/BenchmarkDotNet.Columns.ColumnExtensions.html",
    "title": "Class ColumnExtensions | BenchmarkDotNet",
    "keywords": "Class ColumnExtensions Inheritance System.Object ColumnExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Columns Assembly : BenchmarkDotNet.dll Syntax public static class ColumnExtensions Methods ToProvider(IColumn) Declaration public static IColumnProvider ToProvider(this IColumn column) Parameters Type Name Description IColumn column Returns Type Description IColumnProvider"
  },
  "api/BenchmarkDotNet.Columns.CompositeColumnProvider.html": {
    "href": "api/BenchmarkDotNet.Columns.CompositeColumnProvider.html",
    "title": "Class CompositeColumnProvider | BenchmarkDotNet",
    "keywords": "Class CompositeColumnProvider Inheritance System.Object CompositeColumnProvider Implements IColumnProvider Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Columns Assembly : BenchmarkDotNet.dll Syntax public class CompositeColumnProvider : IColumnProvider Constructors CompositeColumnProvider(IColumnProvider[]) Declaration public CompositeColumnProvider(params IColumnProvider[] providers) Parameters Type Name Description IColumnProvider [] providers Methods GetColumns(Summary) Declaration public IEnumerable<IColumn> GetColumns(Summary summary) Parameters Type Name Description Summary summary Returns Type Description System.Collections.Generic.IEnumerable < IColumn > Implements IColumnProvider Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Columns.TargetMethodColumn.html": {
    "href": "api/BenchmarkDotNet.Columns.TargetMethodColumn.html",
    "title": "Class TargetMethodColumn | BenchmarkDotNet",
    "keywords": "Class TargetMethodColumn Inheritance System.Object TargetMethodColumn Implements IColumn Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Columns Assembly : BenchmarkDotNet.dll Syntax public class TargetMethodColumn : IColumn Fields Method Declaration public static readonly IColumn Method Field Value Type Description IColumn Namespace Declaration public static readonly IColumn Namespace Field Value Type Description IColumn Type Declaration public static readonly IColumn Type Field Value Type Description IColumn Properties AlwaysShow Declaration public bool AlwaysShow { get; } Property Value Type Description System.Boolean Category Declaration public ColumnCategory Category { get; } Property Value Type Description ColumnCategory ColumnName Declaration public string ColumnName { get; } Property Value Type Description System.String Id Declaration public string Id { get; } Property Value Type Description System.String IsNumeric Declaration public bool IsNumeric { get; } Property Value Type Description System.Boolean Legend Declaration public string Legend { get; } Property Value Type Description System.String PriorityInCategory Declaration public int PriorityInCategory { get; } Property Value Type Description System.Int32 UnitType Declaration public UnitType UnitType { get; } Property Value Type Description UnitType Methods GetValue(Summary, Benchmark) Declaration public string GetValue(Summary summary, Benchmark benchmark) Parameters Type Name Description Summary summary Benchmark benchmark Returns Type Description System.String GetValue(Summary, Benchmark, ISummaryStyle) Declaration public string GetValue(Summary summary, Benchmark benchmark, ISummaryStyle style) Parameters Type Name Description Summary summary Benchmark benchmark ISummaryStyle style Returns Type Description System.String IsAvailable(Summary) Declaration public bool IsAvailable(Summary summary) Parameters Type Name Description Summary summary Returns Type Description System.Boolean IsDefault(Summary, Benchmark) Declaration public bool IsDefault(Summary summary, Benchmark benchmark) Parameters Type Name Description Summary summary Benchmark benchmark Returns Type Description System.Boolean ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements IColumn Extension Methods ColumnExtensions.ToProvider(IColumn) CommonExtensions.GetColumnTitle(IColumn, ISummaryStyle) CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Columns.UnitType.html": {
    "href": "api/BenchmarkDotNet.Columns.UnitType.html",
    "title": "Enum UnitType | BenchmarkDotNet",
    "keywords": "Enum UnitType Namespace : BenchmarkDotNet.Columns Assembly : BenchmarkDotNet.dll Syntax public enum UnitType Fields Name Description Dimensionless Size Time Extension Methods CommonExtensions.IsOneOf<UnitType>(UnitType[])"
  },
  "api/BenchmarkDotNet.Attributes.DisassemblyDiagnoserAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.DisassemblyDiagnoserAttribute.html",
    "title": "Class DisassemblyDiagnoserAttribute | BenchmarkDotNet",
    "keywords": "Class DisassemblyDiagnoserAttribute Inheritance System.Object System.Attribute DisassemblyDiagnoserAttribute Implements IConfigSource Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes Assembly : BenchmarkDotNet.dll Syntax public class DisassemblyDiagnoserAttribute : Attribute, IConfigSource Constructors DisassemblyDiagnoserAttribute(Boolean, Boolean, Boolean, Boolean, Int32) Declaration public DisassemblyDiagnoserAttribute(bool printAsm = true, bool printIL = false, bool printSource = false, bool printPrologAndEpilog = false, int recursiveDepth = 1) Parameters Type Name Description System.Boolean printAsm ASM will be printed. True by default. System.Boolean printIL IL will be printed. False by default. System.Boolean printSource C# source code will be printed. False by default. System.Boolean printPrologAndEpilog ASM for prolog and epilog will be printed. False by default. System.Int32 recursiveDepth Includes called methods to given level. 1 by default, indexed from 1. To print just benchmark set to 0 Properties Config Declaration public IConfig Config { get; } Property Value Type Description IConfig Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Exporters.JsonExporterAttribute.Full.html": {
    "href": "api/BenchmarkDotNet.Attributes.Exporters.JsonExporterAttribute.Full.html",
    "title": "Class JsonExporterAttribute.Full | BenchmarkDotNet",
    "keywords": "Class JsonExporterAttribute.Full Inheritance System.Object System.Attribute ExporterConfigBaseAttribute JsonExporterAttribute JsonExporterAttribute.Full Implements IConfigSource Inherited Members ExporterConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Exporters Assembly : BenchmarkDotNet.dll Syntax public class Full : JsonExporterAttribute, IConfigSource Constructors Full() Declaration public Full() Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Exporters.PlainExporterAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Exporters.PlainExporterAttribute.html",
    "title": "Class PlainExporterAttribute | BenchmarkDotNet",
    "keywords": "Class PlainExporterAttribute Inheritance System.Object System.Attribute ExporterConfigBaseAttribute PlainExporterAttribute Implements IConfigSource Inherited Members ExporterConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Exporters Assembly : BenchmarkDotNet.dll Syntax public class PlainExporterAttribute : ExporterConfigBaseAttribute, IConfigSource Constructors PlainExporterAttribute() Declaration public PlainExporterAttribute() Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Filters.AllCategoriesFilterAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Filters.AllCategoriesFilterAttribute.html",
    "title": "Class AllCategoriesFilterAttribute | BenchmarkDotNet",
    "keywords": "Class AllCategoriesFilterAttribute Inheritance System.Object System.Attribute FilterConfigBaseAttribute AllCategoriesFilterAttribute Implements IConfigSource Inherited Members FilterConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Filters Assembly : BenchmarkDotNet.dll Syntax public class AllCategoriesFilterAttribute : FilterConfigBaseAttribute, IConfigSource Constructors AllCategoriesFilterAttribute() Declaration public AllCategoriesFilterAttribute() AllCategoriesFilterAttribute(String[]) Declaration public AllCategoriesFilterAttribute(params string[] targetCategories) Parameters Type Name Description System.String [] targetCategories Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Jobs.ClrJobAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Jobs.ClrJobAttribute.html",
    "title": "Class ClrJobAttribute | BenchmarkDotNet",
    "keywords": "Class ClrJobAttribute Inheritance System.Object System.Attribute JobConfigBaseAttribute ClrJobAttribute Implements IConfigSource Inherited Members JobConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Jobs Assembly : BenchmarkDotNet.dll Syntax public class ClrJobAttribute : JobConfigBaseAttribute, IConfigSource Constructors ClrJobAttribute(Boolean) Declaration public ClrJobAttribute(bool isBaseline = false) Parameters Type Name Description System.Boolean isBaseline Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Jobs.CoreJobAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Jobs.CoreJobAttribute.html",
    "title": "Class CoreJobAttribute | BenchmarkDotNet",
    "keywords": "Class CoreJobAttribute Inheritance System.Object System.Attribute JobConfigBaseAttribute CoreJobAttribute Implements IConfigSource Inherited Members JobConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Jobs Assembly : BenchmarkDotNet.dll Syntax public class CoreJobAttribute : JobConfigBaseAttribute, IConfigSource Constructors CoreJobAttribute(Boolean) Declaration public CoreJobAttribute(bool isBaseline = false) Parameters Type Name Description System.Boolean isBaseline Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Jobs.LongRunJobAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Jobs.LongRunJobAttribute.html",
    "title": "Class LongRunJobAttribute | BenchmarkDotNet",
    "keywords": "Class LongRunJobAttribute Inheritance System.Object System.Attribute JobConfigBaseAttribute LongRunJobAttribute Implements IConfigSource Inherited Members JobConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Jobs Assembly : BenchmarkDotNet.dll Syntax public class LongRunJobAttribute : JobConfigBaseAttribute, IConfigSource Constructors LongRunJobAttribute() Declaration public LongRunJobAttribute() Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Jobs.MediumRunJobAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Jobs.MediumRunJobAttribute.html",
    "title": "Class MediumRunJobAttribute | BenchmarkDotNet",
    "keywords": "Class MediumRunJobAttribute Inheritance System.Object System.Attribute JobConfigBaseAttribute MediumRunJobAttribute Implements IConfigSource Inherited Members JobConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Jobs Assembly : BenchmarkDotNet.dll Syntax public class MediumRunJobAttribute : JobConfigBaseAttribute, IConfigSource Constructors MediumRunJobAttribute() Declaration public MediumRunJobAttribute() Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.ArgumentsSourceAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.ArgumentsSourceAttribute.html",
    "title": "Class ArgumentsSourceAttribute | BenchmarkDotNet",
    "keywords": "Class ArgumentsSourceAttribute Inheritance System.Object System.Attribute ArgumentsSourceAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes Assembly : BenchmarkDotNet.dll Syntax [AttributeUsage(AttributeTargets.Method, AllowMultiple = false)] public class ArgumentsSourceAttribute : Attribute Constructors ArgumentsSourceAttribute(String) Declaration public ArgumentsSourceAttribute(string name) Parameters Type Name Description System.String name Properties Name Declaration public string Name { get; } Property Value Type Description System.String Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Code.IParam.html": {
    "href": "api/BenchmarkDotNet.Code.IParam.html",
    "title": "Interface IParam | BenchmarkDotNet",
    "keywords": "Interface IParam Namespace : BenchmarkDotNet.Code Assembly : BenchmarkDotNet.dll Syntax public interface IParam Properties DisplayText used to display the value (e.g. in summary in Params column) Declaration string DisplayText { get; } Property Value Type Description System.String Value value of the parameter object for benchmark used internally (e.g. by the InProcessToolchain) Declaration object Value { get; } Property Value Type Description System.Object Methods ToSourceCode() this source code is used to create parameter for benchmark in C# source code file example: $\"new Point2D({Value.X}, {Value.Y})\" Declaration string ToSourceCode() Returns Type Description System.String Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Columns.RankColumn.html": {
    "href": "api/BenchmarkDotNet.Columns.RankColumn.html",
    "title": "Class RankColumn | BenchmarkDotNet",
    "keywords": "Class RankColumn Inheritance System.Object RankColumn Implements IColumn Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Columns Assembly : BenchmarkDotNet.dll Syntax public class RankColumn : IColumn Constructors RankColumn(NumeralSystem) Declaration public RankColumn(NumeralSystem system) Parameters Type Name Description NumeralSystem system Fields Arabic Declaration public static readonly IColumn Arabic Field Value Type Description IColumn Roman Declaration public static readonly IColumn Roman Field Value Type Description IColumn Stars Declaration public static readonly IColumn Stars Field Value Type Description IColumn Properties AlwaysShow Declaration public bool AlwaysShow { get; } Property Value Type Description System.Boolean Category Declaration public ColumnCategory Category { get; } Property Value Type Description ColumnCategory ColumnName Declaration public string ColumnName { get; } Property Value Type Description System.String Id Declaration public string Id { get; } Property Value Type Description System.String IsNumeric Declaration public bool IsNumeric { get; } Property Value Type Description System.Boolean Legend Declaration public string Legend { get; } Property Value Type Description System.String PriorityInCategory Declaration public int PriorityInCategory { get; } Property Value Type Description System.Int32 UnitType Declaration public UnitType UnitType { get; } Property Value Type Description UnitType Methods GetValue(Summary, Benchmark) Declaration public string GetValue(Summary summary, Benchmark benchmark) Parameters Type Name Description Summary summary Benchmark benchmark Returns Type Description System.String GetValue(Summary, Benchmark, ISummaryStyle) Declaration public string GetValue(Summary summary, Benchmark benchmark, ISummaryStyle style) Parameters Type Name Description Summary summary Benchmark benchmark ISummaryStyle style Returns Type Description System.String IsAvailable(Summary) Declaration public bool IsAvailable(Summary summary) Parameters Type Name Description Summary summary Returns Type Description System.Boolean IsDefault(Summary, Benchmark) Declaration public bool IsDefault(Summary summary, Benchmark benchmark) Parameters Type Name Description Summary summary Benchmark benchmark Returns Type Description System.Boolean ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements IColumn Extension Methods ColumnExtensions.ToProvider(IColumn) CommonExtensions.GetColumnTitle(IColumn, ISummaryStyle) CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Diagnosers.DisassemblyResult.html": {
    "href": "api/BenchmarkDotNet.Diagnosers.DisassemblyResult.html",
    "title": "Class DisassemblyResult | BenchmarkDotNet",
    "keywords": "Class DisassemblyResult Inheritance System.Object DisassemblyResult Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Diagnosers Assembly : BenchmarkDotNet.dll Syntax public class DisassemblyResult Constructors DisassemblyResult() Declaration public DisassemblyResult() Properties Errors Declaration public string[] Errors { get; set; } Property Value Type Description System.String [] Methods Declaration public DisassembledMethod[] Methods { get; set; } Property Value Type Description DisassembledMethod [] Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Engines.Consumer.html": {
    "href": "api/BenchmarkDotNet.Engines.Consumer.html",
    "title": "Class Consumer | BenchmarkDotNet",
    "keywords": "Class Consumer Inheritance System.Object Consumer Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Engines Assembly : BenchmarkDotNet.dll Syntax public class Consumer Methods Consume(Boolean) Declaration public void Consume(bool boolValue) Parameters Type Name Description System.Boolean boolValue Consume(Byte) Declaration public void Consume(byte byteValue) Parameters Type Name Description System.Byte byteValue Consume(Char) Declaration public void Consume(char charValue) Parameters Type Name Description System.Char charValue Consume(Double) Declaration public void Consume(double doubleValue) Parameters Type Name Description System.Double doubleValue Consume(Int16) Declaration public void Consume(short shortValue) Parameters Type Name Description System.Int16 shortValue Consume(Int32) Declaration public void Consume(int intValue) Parameters Type Name Description System.Int32 intValue Consume(Int64) Declaration public void Consume(long longValue) Parameters Type Name Description System.Int64 longValue Consume(Object) Declaration public void Consume(object objectValue) Parameters Type Name Description System.Object objectValue Consume(SByte) Declaration [CLSCompliant(false)] public void Consume(sbyte sbyteValue) Parameters Type Name Description System.SByte sbyteValue Consume(Single) Declaration public void Consume(float floatValue) Parameters Type Name Description System.Single floatValue Consume(String) Declaration public void Consume(string stringValue) Parameters Type Name Description System.String stringValue Consume(UInt16) Declaration [CLSCompliant(false)] public void Consume(ushort ushortValue) Parameters Type Name Description System.UInt16 ushortValue Consume(UInt32) Declaration [CLSCompliant(false)] public void Consume(uint uintValue) Parameters Type Name Description System.UInt32 uintValue Consume(UInt64) Declaration [CLSCompliant(false)] public void Consume(ulong ulongValue) Parameters Type Name Description System.UInt64 ulongValue Consume<T>(T) Declaration public void Consume<T>(T objectValue) where T : class Parameters Type Name Description T objectValue Type Parameters Name Description T Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Mathematics.Statistics.html": {
    "href": "api/BenchmarkDotNet.Mathematics.Statistics.html",
    "title": "Class Statistics | BenchmarkDotNet",
    "keywords": "Class Statistics Inheritance System.Object Statistics Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Mathematics Assembly : BenchmarkDotNet.dll Syntax public class Statistics Constructors Statistics(IEnumerable<Double>) Declaration public Statistics(IEnumerable<double> values) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.Double > values Statistics(IEnumerable<Int32>) Declaration public Statistics(IEnumerable<int> values) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.Int32 > values Statistics(Double[]) Declaration public Statistics(params double[] values) Parameters Type Name Description System.Double [] values Properties AllOutliers Declaration public double[] AllOutliers { get; } Property Value Type Description System.Double [] ConfidenceInterval Declaration public ConfidenceInterval ConfidenceInterval { get; } Property Value Type Description ConfidenceInterval InterquartileRange Declaration public double InterquartileRange { get; } Property Value Type Description System.Double Kurtosis Declaration public double Kurtosis { get; } Property Value Type Description System.Double LowerFence Declaration public double LowerFence { get; } Property Value Type Description System.Double LowerOutliers Declaration public double[] LowerOutliers { get; } Property Value Type Description System.Double [] Max Declaration public double Max { get; } Property Value Type Description System.Double Mean Declaration public double Mean { get; } Property Value Type Description System.Double Median Declaration public double Median { get; } Property Value Type Description System.Double Min Declaration public double Min { get; } Property Value Type Description System.Double N Declaration public int N { get; } Property Value Type Description System.Int32 Percentiles Declaration public PercentileValues Percentiles { get; } Property Value Type Description PercentileValues Q1 Declaration public double Q1 { get; } Property Value Type Description System.Double Q3 Declaration public double Q3 { get; } Property Value Type Description System.Double Skewness Declaration public double Skewness { get; } Property Value Type Description System.Double StandardDeviation Declaration public double StandardDeviation { get; } Property Value Type Description System.Double StandardError Declaration public double StandardError { get; } Property Value Type Description System.Double UpperFence Declaration public double UpperFence { get; } Property Value Type Description System.Double UpperOutliers Declaration public double[] UpperOutliers { get; } Property Value Type Description System.Double [] Variance Declaration public double Variance { get; } Property Value Type Description System.Double Methods CalcCentralMoment(Int32) Declaration public double CalcCentralMoment(int k) Parameters Type Name Description System.Int32 k Returns Type Description System.Double CanBeInverted() Returns true, if this statistics can be inverted (see Invert() ). Declaration public bool CanBeInverted() Returns Type Description System.Boolean DivMean(Statistics, Statistics) Mean for [X/Y]. Declaration public static double DivMean(Statistics x, Statistics y) Parameters Type Name Description Statistics x Statistics y Returns Type Description System.Double DivVariance(Statistics, Statistics) Variance for [X/Y]. Declaration public static double DivVariance(Statistics x, Statistics y) Parameters Type Name Description Statistics x Statistics y Returns Type Description System.Double GetActualOutliers(OutlierMode) Declaration public double[] GetActualOutliers(OutlierMode outlierMode) Parameters Type Name Description OutlierMode outlierMode Returns Type Description System.Double [] GetConfidenceInterval(ConfidenceLevel, Int32) Declaration public ConfidenceInterval GetConfidenceInterval(ConfidenceLevel level, int n) Parameters Type Name Description ConfidenceLevel level System.Int32 n Returns Type Description ConfidenceInterval GetValues() Declaration public IEnumerable<double> GetValues() Returns Type Description System.Collections.Generic.IEnumerable < System.Double > Invert() Statistics for [1/X]. If Min is less then or equal to 0, returns null. Declaration public Statistics Invert() Returns Type Description Statistics IsActualOutlier(Double, OutlierMode) Declaration public bool IsActualOutlier(double value, OutlierMode outlierMode) Parameters Type Name Description System.Double value OutlierMode outlierMode Returns Type Description System.Boolean IsLowerOutlier(Double) Declaration public bool IsLowerOutlier(double value) Parameters Type Name Description System.Double value Returns Type Description System.Boolean IsOutlier(Double) Declaration public bool IsOutlier(double value) Parameters Type Name Description System.Double value Returns Type Description System.Boolean IsUpperOutlier(Double) Declaration public bool IsUpperOutlier(double value) Parameters Type Name Description System.Double value Returns Type Description System.Boolean MulMean(Statistics, Statistics) Mean for [X*Y]. Declaration public static double MulMean(Statistics x, Statistics y) Parameters Type Name Description Statistics x Statistics y Returns Type Description System.Double MulVariance(Statistics, Statistics) Variance for [X*Y]. Declaration public static double MulVariance(Statistics x, Statistics y) Parameters Type Name Description Statistics x Statistics y Returns Type Description System.Double Sqr() Statistics for [X^2]. Declaration public Statistics Sqr() Returns Type Description Statistics ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() WithoutOutliers() Declaration public double[] WithoutOutliers() Returns Type Description System.Double [] Extension Methods CommonExtensions.IsOneOf<T>(T, T[]) StatisticsExtensions.ToStr(Statistics) StatisticsExtensions.ToTimeStr(Statistics, TimeUnit, Boolean) HistogramExtensions.GetOptimalBinSize(Statistics, Nullable<BinSizeRule>)"
  },
  "api/BenchmarkDotNet.Mathematics.WelchTTest.html": {
    "href": "api/BenchmarkDotNet.Mathematics.WelchTTest.html",
    "title": "Class WelchTTest | BenchmarkDotNet",
    "keywords": "Class WelchTTest Inheritance System.Object WelchTTest Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Mathematics Assembly : BenchmarkDotNet.dll Syntax public class WelchTTest Constructors WelchTTest(Double, Double, Double) Declaration public WelchTTest(double x, double df, double pValue) Parameters Type Name Description System.Double x System.Double df System.Double pValue Properties Df Declaration public double Df { get; } Property Value Type Description System.Double NullHypothesisIsRejected Declaration public bool NullHypothesisIsRejected { get; } Property Value Type Description System.Boolean PValue Declaration public double PValue { get; } Property Value Type Description System.Double T Declaration public double T { get; } Property Value Type Description System.Double Methods Calc(Statistics, Statistics) Welch's Two Sample t-test Declaration public static WelchTTest Calc(Statistics x, Statistics y) Parameters Type Name Description Statistics x Statistics y Returns Type Description WelchTTest Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Columns.BaselineScaledColumn.DiffKind.html": {
    "href": "api/BenchmarkDotNet.Columns.BaselineScaledColumn.DiffKind.html",
    "title": "Enum BaselineScaledColumn.DiffKind | BenchmarkDotNet",
    "keywords": "Enum BaselineScaledColumn.DiffKind Namespace : BenchmarkDotNet.Columns Assembly : BenchmarkDotNet.dll Syntax public enum DiffKind Fields Name Description Mean StdDev WelchTTestPValue Extension Methods CommonExtensions.IsOneOf<BaselineScaledColumn.DiffKind>(BaselineScaledColumn.DiffKind[])"
  },
  "api/BenchmarkDotNet.Columns.BaselineScaledColumn.html": {
    "href": "api/BenchmarkDotNet.Columns.BaselineScaledColumn.html",
    "title": "Class BaselineScaledColumn | BenchmarkDotNet",
    "keywords": "Class BaselineScaledColumn Inheritance System.Object BaselineScaledColumn Implements IColumn Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Columns Assembly : BenchmarkDotNet.dll Syntax public class BaselineScaledColumn : IColumn Fields Scaled Declaration public static readonly IColumn Scaled Field Value Type Description IColumn ScaledStdDev Declaration public static readonly IColumn ScaledStdDev Field Value Type Description IColumn WelchTTestPValue Declaration public static readonly IColumn WelchTTestPValue Field Value Type Description IColumn Properties AlwaysShow Declaration public bool AlwaysShow { get; } Property Value Type Description System.Boolean Category Declaration public ColumnCategory Category { get; } Property Value Type Description ColumnCategory ColumnName Declaration public string ColumnName { get; } Property Value Type Description System.String Id Declaration public string Id { get; } Property Value Type Description System.String IsNumeric Declaration public bool IsNumeric { get; } Property Value Type Description System.Boolean Kind Declaration public BaselineScaledColumn.DiffKind Kind { get; } Property Value Type Description BaselineScaledColumn.DiffKind Legend Declaration public string Legend { get; } Property Value Type Description System.String PriorityInCategory Declaration public int PriorityInCategory { get; } Property Value Type Description System.Int32 UnitType Declaration public UnitType UnitType { get; } Property Value Type Description UnitType Methods GetValue(Summary, Benchmark) Declaration public string GetValue(Summary summary, Benchmark benchmark) Parameters Type Name Description Summary summary Benchmark benchmark Returns Type Description System.String GetValue(Summary, Benchmark, ISummaryStyle) Declaration public string GetValue(Summary summary, Benchmark benchmark, ISummaryStyle style) Parameters Type Name Description Summary summary Benchmark benchmark ISummaryStyle style Returns Type Description System.String IsAvailable(Summary) Declaration public bool IsAvailable(Summary summary) Parameters Type Name Description Summary summary Returns Type Description System.Boolean IsDefault(Summary, Benchmark) Declaration public bool IsDefault(Summary summary, Benchmark benchmark) Parameters Type Name Description Summary summary Benchmark benchmark Returns Type Description System.Boolean IsNonBaselinesPrecise(Summary, Statistics, Benchmark) Declaration public bool IsNonBaselinesPrecise(Summary summary, Statistics baselineStat, Benchmark benchmark) Parameters Type Name Description Summary summary Statistics baselineStat Benchmark benchmark Returns Type Description System.Boolean ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements IColumn Extension Methods ColumnExtensions.ToProvider(IColumn) CommonExtensions.GetColumnTitle(IColumn, ISummaryStyle) CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Columns.SizeUnit.html": {
    "href": "api/BenchmarkDotNet.Columns.SizeUnit.html",
    "title": "Class SizeUnit | BenchmarkDotNet",
    "keywords": "Class SizeUnit Inheritance System.Object SizeUnit Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Columns Assembly : BenchmarkDotNet.dll Syntax public class SizeUnit Constructors SizeUnit(String, String, Int64) Declaration public SizeUnit(string name, string description, long byteAmount) Parameters Type Name Description System.String name System.String description System.Int64 byteAmount Fields All Declaration public static readonly SizeUnit[] All Field Value Type Description SizeUnit [] B Declaration public static readonly SizeUnit B Field Value Type Description SizeUnit BytesInKiloByte Declaration public const long BytesInKiloByte = 1024L Field Value Type Description System.Int64 GB Declaration public static readonly SizeUnit GB Field Value Type Description SizeUnit KB Declaration public static readonly SizeUnit KB Field Value Type Description SizeUnit MB Declaration public static readonly SizeUnit MB Field Value Type Description SizeUnit TB Declaration public static readonly SizeUnit TB Field Value Type Description SizeUnit Properties ByteAmount Declaration public long ByteAmount { get; } Property Value Type Description System.Int64 Description Declaration public string Description { get; } Property Value Type Description System.String Name Declaration public string Name { get; } Property Value Type Description System.String Methods Convert(Int64, SizeUnit, SizeUnit) Declaration public static double Convert(long value, SizeUnit from, SizeUnit to) Parameters Type Name Description System.Int64 value SizeUnit from SizeUnit to Returns Type Description System.Double GetBestSizeUnit(Int64[]) Declaration public static SizeUnit GetBestSizeUnit(params long[] values) Parameters Type Name Description System.Int64 [] values Returns Type Description SizeUnit Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Columns.StatisticColumn.Priority.html": {
    "href": "api/BenchmarkDotNet.Columns.StatisticColumn.Priority.html",
    "title": "Enum StatisticColumn.Priority | BenchmarkDotNet",
    "keywords": "Enum StatisticColumn.Priority Namespace : BenchmarkDotNet.Columns Assembly : BenchmarkDotNet.dll Syntax public enum Priority Fields Name Description Additional Main Percentiles Quartile Extension Methods CommonExtensions.IsOneOf<StatisticColumn.Priority>(StatisticColumn.Priority[])"
  },
  "api/BenchmarkDotNet.Reports.ISummaryStyle.html": {
    "href": "api/BenchmarkDotNet.Reports.ISummaryStyle.html",
    "title": "Interface ISummaryStyle | BenchmarkDotNet",
    "keywords": "Interface ISummaryStyle Namespace : BenchmarkDotNet.Reports Assembly : BenchmarkDotNet.dll Syntax public interface ISummaryStyle Properties PrintUnitsInContent Declaration bool PrintUnitsInContent { get; } Property Value Type Description System.Boolean PrintUnitsInHeader Declaration bool PrintUnitsInHeader { get; } Property Value Type Description System.Boolean SizeUnit Declaration SizeUnit SizeUnit { get; } Property Value Type Description SizeUnit TimeUnit Declaration TimeUnit TimeUnit { get; } Property Value Type Description TimeUnit Methods WithSizeUnit(SizeUnit) Declaration ISummaryStyle WithSizeUnit(SizeUnit sizeUnit) Parameters Type Name Description SizeUnit sizeUnit Returns Type Description ISummaryStyle WithTimeUnit(TimeUnit) Declaration ISummaryStyle WithTimeUnit(TimeUnit timeUnit) Parameters Type Name Description TimeUnit timeUnit Returns Type Description ISummaryStyle Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Reports.Measurement.html": {
    "href": "api/BenchmarkDotNet.Reports.Measurement.html",
    "title": "Struct Measurement | BenchmarkDotNet",
    "keywords": "Struct Measurement The basic captured statistics for a benchmark. Implements System.IComparable < Measurement > Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Reports Assembly : BenchmarkDotNet.dll Syntax public struct Measurement : IComparable<Measurement> Constructors Measurement(Int32, IterationMode, Int32, Int64, Double) Creates an instance of Measurement struct. Declaration public Measurement(int launchIndex, IterationMode iterationMode, int iterationIndex, long operations, double nanoseconds) Parameters Type Name Description System.Int32 launchIndex IterationMode iterationMode System.Int32 iterationIndex System.Int64 operations The number of operations performed. System.Double nanoseconds The total number of nanoseconds it took to perform all operations. Properties IterationIndex Declaration public int IterationIndex { get; } Property Value Type Description System.Int32 IterationMode Declaration public IterationMode IterationMode { get; } Property Value Type Description IterationMode LaunchIndex Declaration public int LaunchIndex { get; } Property Value Type Description System.Int32 Nanoseconds Gets the total number of nanoseconds it took to perform all operations. Declaration public double Nanoseconds { get; } Property Value Type Description System.Double Operations Gets the number of operations performed. Declaration public long Operations { get; } Property Value Type Description System.Int64 Methods CompareTo(Measurement) Declaration public int CompareTo(Measurement other) Parameters Type Name Description Measurement other Returns Type Description System.Int32 Parse(ILogger, String, Int32) Parses the benchmark statistics from the plain text line. E.g. given the input line : Target 1: 10 op, 1005842518 ns Will extract the number of Operations performed and the total number of Nanoseconds it took to perform them. Declaration public static Measurement Parse(ILogger logger, string line, int processIndex) Parameters Type Name Description ILogger logger The logger to write any diagnostic messages to. System.String line The line to parse. System.Int32 processIndex Returns Type Description Measurement An instance of Measurement if parsed successfully. Null in case of any trouble. ToOutputLine() Declaration public string ToOutputLine() Returns Type Description System.String ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Implements System.IComparable<T> Extension Methods CommonExtensions.IsOneOf<T>(T, T[]) MeasurementExtensions.GetOpsPerSecond(Measurement) MeasurementExtensions.GetAverageNanoseconds(Measurement) MeasurementExtensions.ToStr(Measurement)"
  },
  "api/BenchmarkDotNet.Reports.MeasurementExtensions.html": {
    "href": "api/BenchmarkDotNet.Reports.MeasurementExtensions.html",
    "title": "Class MeasurementExtensions | BenchmarkDotNet",
    "keywords": "Class MeasurementExtensions Inheritance System.Object MeasurementExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Reports Assembly : BenchmarkDotNet.dll Syntax public static class MeasurementExtensions Methods GetAverageNanoseconds(Measurement) Gets the average duration of one operation in nanoseconds. Declaration public static double GetAverageNanoseconds(this Measurement report) Parameters Type Name Description Measurement report Returns Type Description System.Double GetOpsPerSecond(Measurement) Gets the number of operations performed per second (ops/sec). Declaration public static double GetOpsPerSecond(this Measurement report) Parameters Type Name Description Measurement report Returns Type Description System.Double ToStr(Measurement) Declaration public static string ToStr(this Measurement run) Parameters Type Name Description Measurement run Returns Type Description System.String"
  },
  "api/BenchmarkDotNet.Reports.Summary.html": {
    "href": "api/BenchmarkDotNet.Reports.Summary.html",
    "title": "Class Summary | BenchmarkDotNet",
    "keywords": "Class Summary Inheritance System.Object Summary Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Reports Assembly : BenchmarkDotNet.dll Syntax public class Summary Constructors Summary(String, IList<BenchmarkReport>, HostEnvironmentInfo, IConfig, String, TimeSpan, ValidationError[]) Declaration public Summary(string title, IList<BenchmarkReport> reports, HostEnvironmentInfo hostEnvironmentInfo, IConfig config, string resultsDirectoryPath, TimeSpan totalTime, ValidationError[] validationErrors) Parameters Type Name Description System.String title System.Collections.Generic.IList < BenchmarkReport > reports HostEnvironmentInfo hostEnvironmentInfo IConfig config System.String resultsDirectoryPath System.TimeSpan totalTime ValidationError [] validationErrors Properties AllRuntimes Declaration public string AllRuntimes { get; } Property Value Type Description System.String Benchmarks Declaration public Benchmark[] Benchmarks { get; } Property Value Type Description Benchmark [] Config Declaration public IConfig Config { get; } Property Value Type Description IConfig HasCriticalValidationErrors Declaration public bool HasCriticalValidationErrors { get; } Property Value Type Description System.Boolean HostEnvironmentInfo Declaration public HostEnvironmentInfo HostEnvironmentInfo { get; } Property Value Type Description HostEnvironmentInfo Item[Benchmark] Returns a report for the given benchmark or null if there is no a corresponded report. Declaration public BenchmarkReport this[Benchmark benchmark] { get; } Parameters Type Name Description Benchmark benchmark Property Value Type Description BenchmarkReport Reports Declaration public BenchmarkReport[] Reports { get; } Property Value Type Description BenchmarkReport [] ResultsDirectoryPath Declaration public string ResultsDirectoryPath { get; } Property Value Type Description System.String Style Declaration public ISummaryStyle Style { get; } Property Value Type Description ISummaryStyle Table Declaration public SummaryTable Table { get; } Property Value Type Description SummaryTable Title Declaration public string Title { get; } Property Value Type Description System.String TotalTime Declaration public TimeSpan TotalTime { get; } Property Value Type Description System.TimeSpan ValidationErrors Declaration public ValidationError[] ValidationErrors { get; } Property Value Type Description ValidationError [] Methods GetLogicalGroupKey(Benchmark) Declaration public string GetLogicalGroupKey(Benchmark benchmark) Parameters Type Name Description Benchmark benchmark Returns Type Description System.String HasReport(Benchmark) Declaration public bool HasReport(Benchmark benchmark) Parameters Type Name Description Benchmark benchmark Returns Type Description System.Boolean Extension Methods CommonExtensions.IsOneOf<T>(T, T[]) ReportExtensions.GetReportFor<T>(Summary, Expression<Action<T>>) ReportExtensions.GetRunsFor<T>(Summary, Expression<Action<T>>) SummaryExtensions.GetColumns(Summary) SummaryExtensions.GetLogicalGroupForBenchmark(Summary, Benchmark)"
  },
  "api/BenchmarkDotNet.Engines.IHost.html": {
    "href": "api/BenchmarkDotNet.Engines.IHost.html",
    "title": "Interface IHost | BenchmarkDotNet",
    "keywords": "Interface IHost Namespace : BenchmarkDotNet.Engines Assembly : BenchmarkDotNet.dll Syntax public interface IHost Methods ReportResults(RunResults) Declaration void ReportResults(RunResults runResults) Parameters Type Name Description RunResults runResults SendError(String) Declaration void SendError(string message) Parameters Type Name Description System.String message SendSignal(HostSignal) Declaration void SendSignal(HostSignal hostSignal) Parameters Type Name Description HostSignal hostSignal Write(String) Declaration void Write(string message) Parameters Type Name Description System.String message WriteLine() Declaration void WriteLine() WriteLine(String) Declaration void WriteLine(string message) Parameters Type Name Description System.String message Extension Methods HostExtensions.WriteLine(IHost, String, Object[]) HostExtensions.BeforeAnythingElse(IHost) HostExtensions.BeforeMainRun(IHost) HostExtensions.AfterMainRun(IHost) HostExtensions.AfterAll(IHost) CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Engines.IterationData.html": {
    "href": "api/BenchmarkDotNet.Engines.IterationData.html",
    "title": "Struct IterationData | BenchmarkDotNet",
    "keywords": "Struct IterationData Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Engines Assembly : BenchmarkDotNet.dll Syntax public struct IterationData Constructors IterationData(IterationMode, Int32, Int64, Int32) Declaration public IterationData(IterationMode iterationMode, int index, long invokeCount, int unrollFactor) Parameters Type Name Description IterationMode iterationMode System.Int32 index System.Int64 invokeCount System.Int32 unrollFactor Properties Index Declaration public int Index { get; } Property Value Type Description System.Int32 InvokeCount Declaration public long InvokeCount { get; } Property Value Type Description System.Int64 IterationMode Declaration public IterationMode IterationMode { get; } Property Value Type Description IterationMode UnrollFactor Declaration public int UnrollFactor { get; } Property Value Type Description System.Int32 Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Engines.IterationMode.html": {
    "href": "api/BenchmarkDotNet.Engines.IterationMode.html",
    "title": "Enum IterationMode | BenchmarkDotNet",
    "keywords": "Enum IterationMode Namespace : BenchmarkDotNet.Engines Assembly : BenchmarkDotNet.dll Syntax public enum IterationMode Fields Name Description IdleJitting IdleTarget Idle method (overhead) IdleWarmup Warmup for idle method (overhead) MainJitting executing benchmark for the purpose of JIT wamup MainTarget Main benchmark iteration (with overhead) MainWarmup Warmup for main benchmark iteration (with overhead) Pilot https://en.wikipedia.org/wiki/Pilot_experiment Result Target - TargetIdle (without overhead) Unknown Unknown Extension Methods IterationModeExtensions.IsIdle() CommonExtensions.IsOneOf<IterationMode>(IterationMode[])"
  },
  "api/BenchmarkDotNet.Engines.IterationModeExtensions.html": {
    "href": "api/BenchmarkDotNet.Engines.IterationModeExtensions.html",
    "title": "Class IterationModeExtensions | BenchmarkDotNet",
    "keywords": "Class IterationModeExtensions Inheritance System.Object IterationModeExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Engines Assembly : BenchmarkDotNet.dll Syntax public static class IterationModeExtensions Methods IsIdle(IterationMode) Declaration public static bool IsIdle(this IterationMode mode) Parameters Type Name Description IterationMode mode Returns Type Description System.Boolean"
  },
  "api/BenchmarkDotNet.Exporters.DefaultExporters.html": {
    "href": "api/BenchmarkDotNet.Exporters.DefaultExporters.html",
    "title": "Class DefaultExporters | BenchmarkDotNet",
    "keywords": "Class DefaultExporters Inheritance System.Object DefaultExporters Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Exporters Assembly : BenchmarkDotNet.dll Syntax public static class DefaultExporters Fields AsciiDoc Declaration public static IExporter AsciiDoc Field Value Type Description IExporter Csv Declaration public static IExporter Csv Field Value Type Description IExporter CsvMeasurements Declaration public static IExporter CsvMeasurements Field Value Type Description IExporter Html Declaration public static IExporter Html Field Value Type Description IExporter Json Declaration public static IExporter Json Field Value Type Description IExporter JsonBrief Declaration public static IExporter JsonBrief Field Value Type Description IExporter JsonBriefCompressed Declaration public static IExporter JsonBriefCompressed Field Value Type Description IExporter JsonFull Declaration public static IExporter JsonFull Field Value Type Description IExporter JsonFullCompressed Declaration public static IExporter JsonFullCompressed Field Value Type Description IExporter Markdown Declaration public static IExporter Markdown Field Value Type Description IExporter Plain Declaration public static IExporter Plain Field Value Type Description IExporter RPlot Declaration public static IExporter RPlot Field Value Type Description IExporter Xml Declaration public static IExporter Xml Field Value Type Description IExporter XmlBrief Declaration public static IExporter XmlBrief Field Value Type Description IExporter XmlBriefCompressed Declaration public static IExporter XmlBriefCompressed Field Value Type Description IExporter XmlFull Declaration public static IExporter XmlFull Field Value Type Description IExporter XmlFullCompressed Declaration public static IExporter XmlFullCompressed Field Value Type Description IExporter"
  },
  "api/BenchmarkDotNet.Exporters.ExporterBase.html": {
    "href": "api/BenchmarkDotNet.Exporters.ExporterBase.html",
    "title": "Class ExporterBase | BenchmarkDotNet",
    "keywords": "Class ExporterBase Inheritance System.Object ExporterBase AsciiDocExporter BenchmarkReportExporter CombinedDisassemblyExporter CsvExporter CsvMeasurementsExporter HtmlExporter JsonExporterBase MarkdownExporter PlainExporter XmlExporterBase Implements IExporter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Exporters Assembly : BenchmarkDotNet.dll Syntax public abstract class ExporterBase : IExporter Properties FileCaption Declaration protected virtual string FileCaption { get; } Property Value Type Description System.String FileExtension Declaration protected virtual string FileExtension { get; } Property Value Type Description System.String FileNameSuffix Declaration protected virtual string FileNameSuffix { get; } Property Value Type Description System.String Name Declaration public string Name { get; } Property Value Type Description System.String Methods ExportToFiles(Summary, ILogger) Declaration public IEnumerable<string> ExportToFiles(Summary summary, ILogger consoleLogger) Parameters Type Name Description Summary summary ILogger consoleLogger Returns Type Description System.Collections.Generic.IEnumerable < System.String > ExportToLog(Summary, ILogger) Declaration public abstract void ExportToLog(Summary summary, ILogger logger) Parameters Type Name Description Summary summary ILogger logger Implements IExporter Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Exporters.HtmlExporter.html": {
    "href": "api/BenchmarkDotNet.Exporters.HtmlExporter.html",
    "title": "Class HtmlExporter | BenchmarkDotNet",
    "keywords": "Class HtmlExporter Inheritance System.Object ExporterBase HtmlExporter Implements IExporter Inherited Members ExporterBase.Name ExporterBase.FileNameSuffix ExporterBase.FileCaption ExporterBase.ExportToFiles(Summary, ILogger) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Exporters Assembly : BenchmarkDotNet.dll Syntax public class HtmlExporter : ExporterBase, IExporter Fields Default Declaration public static readonly IExporter Default Field Value Type Description IExporter Properties FileExtension Declaration protected override string FileExtension { get; } Property Value Type Description System.String Overrides ExporterBase.FileExtension Methods ExportToLog(Summary, ILogger) Declaration public override void ExportToLog(Summary summary, ILogger logger) Parameters Type Name Description Summary summary ILogger logger Overrides ExporterBase.ExportToLog(Summary, ILogger) Implements IExporter Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Horology.Frequency.html": {
    "href": "api/BenchmarkDotNet.Horology.Frequency.html",
    "title": "Struct Frequency | BenchmarkDotNet",
    "keywords": "Struct Frequency Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Horology Assembly : BenchmarkDotNet.dll Syntax public struct Frequency Constructors Frequency(Double) Declaration public Frequency(double hertz) Parameters Type Name Description System.Double hertz Frequency(Double, FrequencyUnit) Declaration public Frequency(double value, FrequencyUnit unit) Parameters Type Name Description System.Double value FrequencyUnit unit Fields GHz Declaration public static readonly Frequency GHz Field Value Type Description Frequency Hz Declaration public static readonly Frequency Hz Field Value Type Description Frequency KHz Declaration public static readonly Frequency KHz Field Value Type Description Frequency MHz Declaration public static readonly Frequency MHz Field Value Type Description Frequency Properties Hertz Declaration public double Hertz { get; } Property Value Type Description System.Double Methods FromGHz(Double) Declaration public static Frequency FromGHz(double value) Parameters Type Name Description System.Double value Returns Type Description Frequency FromHz(Double) Declaration public static Frequency FromHz(double value) Parameters Type Name Description System.Double value Returns Type Description Frequency FromKHz(Double) Declaration public static Frequency FromKHz(double value) Parameters Type Name Description System.Double value Returns Type Description Frequency FromMHz(Double) Declaration public static Frequency FromMHz(double value) Parameters Type Name Description System.Double value Returns Type Description Frequency ToGHz() Declaration public double ToGHz() Returns Type Description System.Double ToHz() Declaration public double ToHz() Returns Type Description System.Double ToKHz() Declaration public double ToKHz() Returns Type Description System.Double ToMHz() Declaration public double ToMHz() Returns Type Description System.Double ToResolution() Declaration public TimeInterval ToResolution() Returns Type Description TimeInterval ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Operators Division(Frequency, Frequency) Declaration public static double operator /(Frequency a, Frequency b) Parameters Type Name Description Frequency a Frequency b Returns Type Description System.Double Division(Frequency, Double) Declaration public static Frequency operator /(Frequency a, double k) Parameters Type Name Description Frequency a System.Double k Returns Type Description Frequency Division(Frequency, Int32) Declaration public static Frequency operator /(Frequency a, int k) Parameters Type Name Description Frequency a System.Int32 k Returns Type Description Frequency Implicit(Frequency to Double) Declaration public static implicit operator double (Frequency property) Parameters Type Name Description Frequency property Returns Type Description System.Double Implicit(Double to Frequency) Declaration public static implicit operator Frequency(double value) Parameters Type Name Description System.Double value Returns Type Description Frequency Multiply(Frequency, Double) Declaration public static Frequency operator *(Frequency a, double k) Parameters Type Name Description Frequency a System.Double k Returns Type Description Frequency Multiply(Frequency, Int32) Declaration public static Frequency operator *(Frequency a, int k) Parameters Type Name Description Frequency a System.Int32 k Returns Type Description Frequency Multiply(Double, Frequency) Declaration public static Frequency operator *(double k, Frequency a) Parameters Type Name Description System.Double k Frequency a Returns Type Description Frequency Multiply(Int32, Frequency) Declaration public static Frequency operator *(int k, Frequency a) Parameters Type Name Description System.Int32 k Frequency a Returns Type Description Frequency Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Horology.FrequencyUnit.html": {
    "href": "api/BenchmarkDotNet.Horology.FrequencyUnit.html",
    "title": "Class FrequencyUnit | BenchmarkDotNet",
    "keywords": "Class FrequencyUnit Inheritance System.Object FrequencyUnit Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Horology Assembly : BenchmarkDotNet.dll Syntax public class FrequencyUnit Fields All Declaration public static readonly FrequencyUnit[] All Field Value Type Description FrequencyUnit [] GHz Declaration public static readonly FrequencyUnit GHz Field Value Type Description FrequencyUnit Hz Declaration public static readonly FrequencyUnit Hz Field Value Type Description FrequencyUnit KHz Declaration public static readonly FrequencyUnit KHz Field Value Type Description FrequencyUnit MHz Declaration public static readonly FrequencyUnit MHz Field Value Type Description FrequencyUnit Properties Description Declaration public string Description { get; } Property Value Type Description System.String HertzAmount Declaration public long HertzAmount { get; } Property Value Type Description System.Int64 Name Declaration public string Name { get; } Property Value Type Description System.String Methods ToFrequency(Int64) Declaration public Frequency ToFrequency(long value = 1L) Parameters Type Name Description System.Int64 value Returns Type Description Frequency Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Horology.HardwareTimerKind.html": {
    "href": "api/BenchmarkDotNet.Horology.HardwareTimerKind.html",
    "title": "Enum HardwareTimerKind | BenchmarkDotNet",
    "keywords": "Enum HardwareTimerKind Namespace : BenchmarkDotNet.Horology Assembly : BenchmarkDotNet.dll Syntax public enum HardwareTimerKind Fields Name Description Acpi Hpet High Precision Event Timer https://en.wikipedia.org/wiki/High_Precision_Event_Timer System System timer Tsc Time Stamp Counter https://en.wikipedia.org/wiki/Time_Stamp_Counter Unknown Extension Methods CommonExtensions.IsOneOf<HardwareTimerKind>(HardwareTimerKind[])"
  },
  "api/BenchmarkDotNet.Horology.IClock.html": {
    "href": "api/BenchmarkDotNet.Horology.IClock.html",
    "title": "Interface IClock | BenchmarkDotNet",
    "keywords": "Interface IClock Namespace : BenchmarkDotNet.Horology Assembly : BenchmarkDotNet.dll Syntax public interface IClock Properties Frequency Declaration Frequency Frequency { get; } Property Value Type Description Frequency IsAvailable Declaration bool IsAvailable { get; } Property Value Type Description System.Boolean Title Declaration string Title { get; } Property Value Type Description System.String Methods GetTimestamp() Declaration long GetTimestamp() Returns Type Description System.Int64 Extension Methods CommonExtensions.IsOneOf<T>(T, T[]) ClockExtensions.GetResolution(IClock) ClockExtensions.Start(IClock)"
  },
  "api/BenchmarkDotNet.Exporters.IExporter.html": {
    "href": "api/BenchmarkDotNet.Exporters.IExporter.html",
    "title": "Interface IExporter | BenchmarkDotNet",
    "keywords": "Interface IExporter Namespace : BenchmarkDotNet.Exporters Assembly : BenchmarkDotNet.dll Syntax public interface IExporter Properties Name Declaration string Name { get; } Property Value Type Description System.String Methods ExportToFiles(Summary, ILogger) Declaration IEnumerable<string> ExportToFiles(Summary summary, ILogger consoleLogger) Parameters Type Name Description Summary summary ILogger consoleLogger Returns Type Description System.Collections.Generic.IEnumerable < System.String > ExportToLog(Summary, ILogger) Declaration void ExportToLog(Summary summary, ILogger logger) Parameters Type Name Description Summary summary ILogger logger Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Exporters.InstructionPointerExporter.html": {
    "href": "api/BenchmarkDotNet.Exporters.InstructionPointerExporter.html",
    "title": "Class InstructionPointerExporter | BenchmarkDotNet",
    "keywords": "Class InstructionPointerExporter Inheritance System.Object InstructionPointerExporter Implements IExporter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Exporters Assembly : BenchmarkDotNet.dll Syntax public class InstructionPointerExporter : IExporter Properties Name Declaration public string Name { get; } Property Value Type Description System.String Methods ExportToFiles(Summary, ILogger) Declaration public IEnumerable<string> ExportToFiles(Summary summary, ILogger consoleLogger) Parameters Type Name Description Summary summary ILogger consoleLogger Returns Type Description System.Collections.Generic.IEnumerable < System.String > ExportToLog(Summary, ILogger) Declaration public void ExportToLog(Summary summary, ILogger logger) Parameters Type Name Description Summary summary ILogger logger Implements IExporter Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Exporters.Json.JsonExporter.html": {
    "href": "api/BenchmarkDotNet.Exporters.Json.JsonExporter.html",
    "title": "Class JsonExporter | BenchmarkDotNet",
    "keywords": "Class JsonExporter Inheritance System.Object ExporterBase JsonExporterBase JsonExporter Implements IExporter Inherited Members JsonExporterBase.FileExtension JsonExporterBase.ExportToLog(Summary, ILogger) ExporterBase.Name ExporterBase.FileCaption ExporterBase.ExportToFiles(Summary, ILogger) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Exporters.Json Assembly : BenchmarkDotNet.dll Syntax public class JsonExporter : JsonExporterBase, IExporter Constructors JsonExporter(String, Boolean, Boolean) Declaration public JsonExporter(string fileNameSuffix = \"\", bool indentJson = false, bool excludeMeasurements = false) Parameters Type Name Description System.String fileNameSuffix System.Boolean indentJson System.Boolean excludeMeasurements Fields Brief Declaration public static readonly IExporter Brief Field Value Type Description IExporter BriefCompressed Declaration public static readonly IExporter BriefCompressed Field Value Type Description IExporter Default Declaration public static readonly IExporter Default Field Value Type Description IExporter Full Declaration public static readonly IExporter Full Field Value Type Description IExporter FullCompressed Declaration public static readonly IExporter FullCompressed Field Value Type Description IExporter Properties FileNameSuffix Declaration protected override string FileNameSuffix { get; } Property Value Type Description System.String Overrides ExporterBase.FileNameSuffix Methods Custom(String, Boolean, Boolean) Declaration public static IExporter Custom(string fileNameSuffix = \"\", bool indentJson = false, bool excludeMeasurements = false) Parameters Type Name Description System.String fileNameSuffix System.Boolean indentJson System.Boolean excludeMeasurements Returns Type Description IExporter Implements IExporter Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Exporters.Json.JsonExporterBase.html": {
    "href": "api/BenchmarkDotNet.Exporters.Json.JsonExporterBase.html",
    "title": "Class JsonExporterBase | BenchmarkDotNet",
    "keywords": "Class JsonExporterBase Inheritance System.Object ExporterBase JsonExporterBase JsonExporter Implements IExporter Inherited Members ExporterBase.Name ExporterBase.FileNameSuffix ExporterBase.FileCaption ExporterBase.ExportToFiles(Summary, ILogger) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Exporters.Json Assembly : BenchmarkDotNet.dll Syntax public abstract class JsonExporterBase : ExporterBase, IExporter Constructors JsonExporterBase(Boolean, Boolean) Declaration public JsonExporterBase(bool indentJson = false, bool excludeMeasurements = false) Parameters Type Name Description System.Boolean indentJson System.Boolean excludeMeasurements Properties FileExtension Declaration protected override string FileExtension { get; } Property Value Type Description System.String Overrides ExporterBase.FileExtension Methods ExportToLog(Summary, ILogger) Declaration public override void ExportToLog(Summary summary, ILogger logger) Parameters Type Name Description Summary summary ILogger logger Overrides ExporterBase.ExportToLog(Summary, ILogger) Implements IExporter Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Loggers.html": {
    "href": "api/BenchmarkDotNet.Loggers.html",
    "title": "Namespace BenchmarkDotNet.Loggers | BenchmarkDotNet",
    "keywords": "Namespace BenchmarkDotNet.Loggers Classes AccumulationLogger CompositeLogger ConsoleLogger LoggerExtensions LoggerWithPrefix Adds prefix for each line NullLogger StreamLogger Interfaces ILogger Enums LogKind"
  },
  "api/BenchmarkDotNet.Horology.html": {
    "href": "api/BenchmarkDotNet.Horology.html",
    "title": "Namespace BenchmarkDotNet.Horology | BenchmarkDotNet",
    "keywords": "Namespace BenchmarkDotNet.Horology Classes Chronometer ClockExtensions FrequencyUnit TimeUnit Structs ClockSpan Frequency StartedClock TimeInterval Interfaces IClock Enums HardwareTimerKind"
  },
  "api/BenchmarkDotNet.Characteristics.html": {
    "href": "api/BenchmarkDotNet.Characteristics.html",
    "title": "Namespace BenchmarkDotNet.Characteristics | BenchmarkDotNet",
    "keywords": "Namespace BenchmarkDotNet.Characteristics Classes Characteristic Characteristic<T> CharacteristicHelper CharacteristicObject CharacteristicObject<T> CharacteristicPresenter CharacteristicSet CharacteristicSetPresenter CompositeResolver Resolver Interfaces IResolver An entity which can resolve default values of Characteristic<T> ."
  },
  "api/BenchmarkDotNet.Toolchains.Results.html": {
    "href": "api/BenchmarkDotNet.Toolchains.Results.html",
    "title": "Namespace BenchmarkDotNet.Toolchains.Results | BenchmarkDotNet",
    "keywords": "Namespace BenchmarkDotNet.Toolchains.Results Classes BuildResult ExecuteResult GenerateResult"
  },
  "api/BenchmarkDotNet.Toolchains.CustomCoreClr.html": {
    "href": "api/BenchmarkDotNet.Toolchains.CustomCoreClr.html",
    "title": "Namespace BenchmarkDotNet.Toolchains.CustomCoreClr | BenchmarkDotNet",
    "keywords": "Namespace BenchmarkDotNet.Toolchains.CustomCoreClr Classes CustomCoreClrToolchain CustomCoreClrToolchainBuilder Generator generates new csproj file for self-contained .NET Core app which uses given CoreCLR NuGet packages based on https://github.com/dotnet/coreclr/blob/master/Documentation/workflow/UsingDotNetCli.md and https://github.com/dotnet/corefx/blob/master/Documentation/project-docs/dogfooding.md"
  },
  "api/BenchmarkDotNet.Properties.html": {
    "href": "api/BenchmarkDotNet.Properties.html",
    "title": "Namespace BenchmarkDotNet.Properties | BenchmarkDotNet",
    "keywords": "Namespace BenchmarkDotNet.Properties Classes BenchmarkDotNetInfo"
  },
  "api/BenchmarkDotNet.Environments.html": {
    "href": "api/BenchmarkDotNet.Environments.html",
    "title": "Namespace BenchmarkDotNet.Environments | BenchmarkDotNet",
    "keywords": "Namespace BenchmarkDotNet.Environments Classes BenchmarkEnvironmentInfo ClrRuntime CoreRtRuntime CoreRuntime EnvResolver GcResolver HostEnvironmentInfo InfrastructureResolver MonoRuntime OsBrandStringHelper ProcessorBrandStringHelper Runtime Enums Jit Platform"
  },
  "api/BenchmarkDotNet.Toolchains.DotNetCli.html": {
    "href": "api/BenchmarkDotNet.Toolchains.DotNetCli.html",
    "title": "Namespace BenchmarkDotNet.Toolchains.DotNetCli | BenchmarkDotNet",
    "keywords": "Namespace BenchmarkDotNet.Toolchains.DotNetCli Classes CustomDotNetCliToolchainBuilder DotNetCliBuilder DotNetCliExecutor DotNetCliGenerator DotNetCliPublisher NetCoreAppSettings custom settings used in the auto-generated project.json / .csproj file"
  },
  "api/BenchmarkDotNet.Mathematics.html": {
    "href": "api/BenchmarkDotNet.Mathematics.html",
    "title": "Namespace BenchmarkDotNet.Mathematics | BenchmarkDotNet",
    "keywords": "Namespace BenchmarkDotNet.Mathematics Classes ConfidenceLevelExtensions MathHelper NumeralSystemExtensions PercentileValues Statistics WelchTTest Structs ConfidenceInterval Enums ConfidenceLevel NumeralSystem OutlierMode The enum is design to remove some outliers from the distribution."
  },
  "api/BenchmarkDotNet.Jobs.html": {
    "href": "api/BenchmarkDotNet.Jobs.html",
    "title": "Namespace BenchmarkDotNet.Jobs | BenchmarkDotNet",
    "keywords": "Namespace BenchmarkDotNet.Jobs Classes AccuracyMode Argument EnvironmentVariable EnvMode GcMode GcModeExtensions InfrastructureMode Job JobExtensions JobIdGenerator JobMode<T> MetaMode MonoArgument Argument passed directly to mono when executing benchmarks (mono [options]) example: new MonoArgument(\"--gc=sgen\") MsBuildArgument Argument passed to dotnet cli when restoring and building the project example: new MsBuildArgument(\"/p:MyCustomSetting=123\") RunMode"
  },
  "api/BenchmarkDotNet.Attributes.Jobs.html": {
    "href": "api/BenchmarkDotNet.Attributes.Jobs.html",
    "title": "Namespace BenchmarkDotNet.Attributes.Jobs | BenchmarkDotNet",
    "keywords": "Namespace BenchmarkDotNet.Attributes.Jobs Classes ClrJobAttribute CoreJobAttribute CoreRtJobAttribute DryClrJobAttribute DryCoreJobAttribute DryCoreRtJobAttribute DryJobAttribute DryMonoJobAttribute InProcessAttribute JobConfigBaseAttribute LegacyJitX64JobAttribute LegacyJitX86JobAttribute LongRunJobAttribute MediumRunJobAttribute MonoJobAttribute RyuJitX64JobAttribute RyuJitX86JobAttribute ShortRunJobAttribute SimpleJobAttribute VeryLongRunJobAttribute"
  },
  "api/BenchmarkDotNet.Toolchains.InProcess.html": {
    "href": "api/BenchmarkDotNet.Toolchains.InProcess.html",
    "title": "Namespace BenchmarkDotNet.Toolchains.InProcess | BenchmarkDotNet",
    "keywords": "Namespace BenchmarkDotNet.Toolchains.InProcess Classes BenchmarkAction Common API to run the Setup/Clean/Idle/Run methods BenchmarkActionFactory Helper class that creates BenchmarkAction instances. InProcessBuilder InProcessExecutor Implementation of IExecutor for in-process benchmarks. InProcessGenerator Implementation of IGenerator for in-process benchmarks. InProcessHost Host API for in-process benchmarks. InProcessToolchain A toolchain to run the benchmarks in-process. InProcessValidator Validator to be used together with InProcessToolchain to proof that the config matches the environment. Enums BenchmarkActionCodegen How benchmark action code is generated"
  },
  "api/BenchmarkDotNet.Toolchains.CoreRt.html": {
    "href": "api/BenchmarkDotNet.Toolchains.CoreRt.html",
    "title": "Namespace BenchmarkDotNet.Toolchains.CoreRt | BenchmarkDotNet",
    "keywords": "Namespace BenchmarkDotNet.Toolchains.CoreRt Classes CoreRtToolchain CoreRtToolchainBuilder Generator generates new csproj file for self-contained .NET Core RT app based on https://github.com/dotnet/corert/blob/7f902d4d8b1c3280e60f5e06c71951a60da173fb/Documentation/how-to-build-and-run-ilcompiler-in-console-shell-prompt.md#compiling-source-to-native-code-using-the-ilcompiler-you-built and https://github.com/dotnet/corert/tree/7f902d4d8b1c3280e60f5e06c71951a60da173fb/samples/HelloWorld#add-corert-to-your-project Publisher"
  },
  "api/BenchmarkDotNet.Portability.html": {
    "href": "api/BenchmarkDotNet.Portability.html",
    "title": "Namespace BenchmarkDotNet.Portability | BenchmarkDotNet",
    "keywords": "Namespace BenchmarkDotNet.Portability Classes Antivirus HyperV VirtualBox VirtualMachineHypervisor VMware"
  },
  "api/BenchmarkDotNet.Filters.html": {
    "href": "api/BenchmarkDotNet.Filters.html",
    "title": "Namespace BenchmarkDotNet.Filters | BenchmarkDotNet",
    "keywords": "Namespace BenchmarkDotNet.Filters Classes AllCategoriesFilter Filter benchmarks which have all the target categories AnyCategoriesFilter Filter benchmarks which have any of the target categories CategoryFilter Filter benchmarks which have the target category DisjunctionFilter NameFilter SimpleFilter Interfaces IFilter"
  },
  "api/BenchmarkDotNet.Engines.html": {
    "href": "api/BenchmarkDotNet.Engines.html",
    "title": "Namespace BenchmarkDotNet.Engines | BenchmarkDotNet",
    "keywords": "Namespace BenchmarkDotNet.Engines Classes ConsoleHost Consumer DeadCodeEliminationHelper Engine Engine.Signals EngineFactory EngineParameters EngineResolver EngineStage EngineTargetStage HostExtensions IterationModeExtensions RunStrategyExtensions Structs GcStats IterationData RunResults Interfaces IEngine IEngineFactory IHost Enums HostSignal IterationMode RunStrategy"
  },
  "api/BenchmarkDotNet.Columns.html": {
    "href": "api/BenchmarkDotNet.Columns.html",
    "title": "Namespace BenchmarkDotNet.Columns | BenchmarkDotNet",
    "keywords": "Namespace BenchmarkDotNet.Columns Classes BaselineScaledColumn CategoriesColumn ColumnExtensions CompositeColumnProvider DefaultColumnProviders EmptyColumnProvider IsBaselineColumn JobCharacteristicColumn LogicalGroupColumn ParamColumn RankColumn SimpleColumnProvider SizeUnit StatisticColumn TagColumn TargetMethodColumn Interfaces IColumn IColumnProvider Enums BaselineScaledColumn.DiffKind ColumnCategory StatisticColumn.Priority UnitType"
  },
  "api/BenchmarkDotNet.Attributes.Exporters.html": {
    "href": "api/BenchmarkDotNet.Attributes.Exporters.html",
    "title": "Namespace BenchmarkDotNet.Attributes.Exporters | BenchmarkDotNet",
    "keywords": "Namespace BenchmarkDotNet.Attributes.Exporters Classes AsciiDocExporterAttribute CsvExporterAttribute CsvMeasurementsExporterAttribute ExporterConfigBaseAttribute HtmlExporterAttribute JsonExporterAttribute JsonExporterAttribute.BriefAttribute JsonExporterAttribute.BriefCompressed JsonExporterAttribute.Full JsonExporterAttribute.FullCompressed MarkdownExporterAttribute MarkdownExporterAttribute.Atlassian MarkdownExporterAttribute.Default MarkdownExporterAttribute.GitHub MarkdownExporterAttribute.StackOverflow PlainExporterAttribute RPlotExporterAttribute XmlExporterAttribute XmlExporterAttribute.Brief XmlExporterAttribute.BriefCompressed XmlExporterAttribute.Full XmlExporterAttribute.FullCompressed"
  },
  "api/BenchmarkDotNet.Parameters.html": {
    "href": "api/BenchmarkDotNet.Parameters.html",
    "title": "Namespace BenchmarkDotNet.Parameters | BenchmarkDotNet",
    "keywords": "Namespace BenchmarkDotNet.Parameters Classes ParameterDefinition ParameterDefinitions ParameterInstance ParameterInstances"
  },
  "api/BenchmarkDotNet.Exporters.Csv.html": {
    "href": "api/BenchmarkDotNet.Exporters.Csv.html",
    "title": "Namespace BenchmarkDotNet.Exporters.Csv | BenchmarkDotNet",
    "keywords": "Namespace BenchmarkDotNet.Exporters.Csv Classes CsvExporter CsvHelper CsvMeasurementsExporter CsvSeparatorExtensions Enums CsvSeparator"
  },
  "api/BenchmarkDotNet.Attributes.Filters.html": {
    "href": "api/BenchmarkDotNet.Attributes.Filters.html",
    "title": "Namespace BenchmarkDotNet.Attributes.Filters | BenchmarkDotNet",
    "keywords": "Namespace BenchmarkDotNet.Attributes.Filters Classes AllCategoriesFilterAttribute AnyCategoriesFilterAttribute CategoryFilterAttribute FilterConfigBaseAttribute"
  },
  "api/BenchmarkDotNet.Analysers.html": {
    "href": "api/BenchmarkDotNet.Analysers.html",
    "title": "Namespace BenchmarkDotNet.Analysers | BenchmarkDotNet",
    "keywords": "Namespace BenchmarkDotNet.Analysers Classes AnalyserBase CompositeAnalyser Conclusion ConclusionHelper EnvironmentAnalyser IterationSetupCleanupAnalyser MinIterationTimeAnalyser MultimodalDistributionAnalyzer OutliersAnalyser RuntimeErrorAnalyser Interfaces IAnalyser Enums ConclusionKind"
  },
  "api/BenchmarkDotNet.Toolchains.Parameters.html": {
    "href": "api/BenchmarkDotNet.Toolchains.Parameters.html",
    "title": "Namespace BenchmarkDotNet.Toolchains.Parameters | BenchmarkDotNet",
    "keywords": "Namespace BenchmarkDotNet.Toolchains.Parameters Classes ExecuteParameters"
  },
  "api/BenchmarkDotNet.Toolchains.CsProj.html": {
    "href": "api/BenchmarkDotNet.Toolchains.CsProj.html",
    "title": "Namespace BenchmarkDotNet.Toolchains.CsProj | BenchmarkDotNet",
    "keywords": "Namespace BenchmarkDotNet.Toolchains.CsProj Classes CsProjClassicNetToolchain this toolchain is designed for the new .csprojs, to build .NET 4.x benchmarks from the context of .NET Core host process it does not work with the old .csprojs or project.json! CsProjCoreToolchain CsProjGenerator"
  },
  "api/BenchmarkDotNet.Mathematics.Histograms.html": {
    "href": "api/BenchmarkDotNet.Mathematics.Histograms.html",
    "title": "Namespace BenchmarkDotNet.Mathematics.Histograms | BenchmarkDotNet",
    "keywords": "Namespace BenchmarkDotNet.Mathematics.Histograms Classes AdaptiveHistogramBuilder Histogram HistogramBin HistogramBuilder HistogramExtensions Interfaces IHistogramBuilder Enums BinSizeRule"
  },
  "api/BenchmarkDotNet.Exporters.html": {
    "href": "api/BenchmarkDotNet.Exporters.html",
    "title": "Namespace BenchmarkDotNet.Exporters | BenchmarkDotNet",
    "keywords": "Namespace BenchmarkDotNet.Exporters Classes AsciiDocExporter BenchmarkReportExporter CombinedDisassemblyExporter CompositeExporter DefaultExporters ExporterBase HtmlExporter InstructionPointerExporter MarkdownExporter PlainExporter PrettyDisassemblyExporter RawDisassemblyExporter RPlotExporter Interfaces IExporter Enums MarkdownExporter.MarkdownHighlightStrategy"
  },
  "api/BenchmarkDotNet.Exporters.Xml.html": {
    "href": "api/BenchmarkDotNet.Exporters.Xml.html",
    "title": "Namespace BenchmarkDotNet.Exporters.Xml | BenchmarkDotNet",
    "keywords": "Namespace BenchmarkDotNet.Exporters.Xml Classes XmlExporter XmlExporterBase"
  },
  "api/BenchmarkDotNet.Configs.html": {
    "href": "api/BenchmarkDotNet.Configs.html",
    "title": "Namespace BenchmarkDotNet.Configs | BenchmarkDotNet",
    "keywords": "Namespace BenchmarkDotNet.Configs Classes ConfigExtensions ConfigParser DefaultConfig ManualConfig ReadOnlyConfig Interfaces IConfig IConfigSource Enums BenchmarkLogicalGroupRule ConfigUnionRule"
  },
  "api/BenchmarkDotNet.Attributes.html": {
    "href": "api/BenchmarkDotNet.Attributes.html",
    "title": "Namespace BenchmarkDotNet.Attributes | BenchmarkDotNet",
    "keywords": "Namespace BenchmarkDotNet.Attributes Classes ArgumentsAttribute ArgumentsSourceAttribute ArtifactsPathAttribute BenchmarkAttribute BenchmarkCategoryAttribute CleanupAttribute Marks method to be executed after all benchmark iterations. It's going to be executed only once, after all benchmark runs. ConfigAttribute DisassemblyDiagnoserAttribute GenericTypeArgumentsAttribute GlobalCleanupAttribute Marks method to be executed after all benchmark iterations. It's going to be executed only once, after all benchmark runs. GlobalSetupAttribute Marks method to be executed before all benchmark iterations. It's going to be executed only once, just before warm up. GroupBenchmarksByAttribute HardwareCountersAttribute IterationCleanupAttribute Marks method to be executed after each benchmark iteration. IterationSetupAttribute Marks method to be executed before each benchmark iteration. KeepBenchmarkFilesAttribute MemoryDiagnoserAttribute OrderProviderAttribute ParamsAttribute ParamsSourceAttribute SetupAttribute Marks method to be executed before all benchmark iterations. It's going to be executed only once, just before warm up. TargetedAttribute Base class for attributes that are targeted at one method"
  },
  "api/BenchmarkDotNet.Toolchains.html": {
    "href": "api/BenchmarkDotNet.Toolchains.html",
    "title": "Namespace BenchmarkDotNet.Toolchains | BenchmarkDotNet",
    "keywords": "Namespace BenchmarkDotNet.Toolchains Classes ArtifactsPaths Executor GeneratorBase Toolchain Interfaces IBuilder IExecutor IGenerator IToolchain"
  },
  "api/BenchmarkDotNet.Attributes.Filters.AnyCategoriesFilterAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Filters.AnyCategoriesFilterAttribute.html",
    "title": "Class AnyCategoriesFilterAttribute | BenchmarkDotNet",
    "keywords": "Class AnyCategoriesFilterAttribute Inheritance System.Object System.Attribute FilterConfigBaseAttribute AnyCategoriesFilterAttribute Implements IConfigSource Inherited Members FilterConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Filters Assembly : BenchmarkDotNet.dll Syntax public class AnyCategoriesFilterAttribute : FilterConfigBaseAttribute, IConfigSource Constructors AnyCategoriesFilterAttribute() Declaration public AnyCategoriesFilterAttribute() AnyCategoriesFilterAttribute(String[]) Declaration public AnyCategoriesFilterAttribute(params string[] targetCategories) Parameters Type Name Description System.String [] targetCategories Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Exporters.RawDisassemblyExporter.html": {
    "href": "api/BenchmarkDotNet.Exporters.RawDisassemblyExporter.html",
    "title": "Class RawDisassemblyExporter | BenchmarkDotNet",
    "keywords": "Class RawDisassemblyExporter Inheritance System.Object RawDisassemblyExporter Implements IExporter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Exporters Assembly : BenchmarkDotNet.dll Syntax public class RawDisassemblyExporter : IExporter Constructors RawDisassemblyExporter(IReadOnlyDictionary<Benchmark, DisassemblyResult>) Declaration public RawDisassemblyExporter(IReadOnlyDictionary<Benchmark, DisassemblyResult> results) Parameters Type Name Description System.Collections.Generic.IReadOnlyDictionary < Benchmark , DisassemblyResult > results Properties Name Declaration public string Name { get; } Property Value Type Description System.String Methods ExportToFiles(Summary, ILogger) Declaration public IEnumerable<string> ExportToFiles(Summary summary, ILogger consoleLogger) Parameters Type Name Description Summary summary ILogger consoleLogger Returns Type Description System.Collections.Generic.IEnumerable < System.String > ExportToLog(Summary, ILogger) Declaration public void ExportToLog(Summary summary, ILogger logger) Parameters Type Name Description Summary summary ILogger logger Implements IExporter Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Exporters.Xml.XmlExporter.html": {
    "href": "api/BenchmarkDotNet.Exporters.Xml.XmlExporter.html",
    "title": "Class XmlExporter | BenchmarkDotNet",
    "keywords": "Class XmlExporter Inheritance System.Object ExporterBase XmlExporterBase XmlExporter Implements IExporter Inherited Members XmlExporterBase.FileExtension XmlExporterBase.ExportToLog(Summary, ILogger) ExporterBase.Name ExporterBase.FileCaption ExporterBase.ExportToFiles(Summary, ILogger) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Exporters.Xml Assembly : BenchmarkDotNet.dll Syntax public class XmlExporter : XmlExporterBase, IExporter Constructors XmlExporter(String, Boolean, Boolean) Declaration public XmlExporter(string fileNameSuffix = \"\", bool indentXml = false, bool excludeMeasurements = false) Parameters Type Name Description System.String fileNameSuffix System.Boolean indentXml System.Boolean excludeMeasurements Fields Brief Declaration public static readonly IExporter Brief Field Value Type Description IExporter BriefCompressed Declaration public static readonly IExporter BriefCompressed Field Value Type Description IExporter Default Declaration public static readonly IExporter Default Field Value Type Description IExporter Full Declaration public static readonly IExporter Full Field Value Type Description IExporter FullCompressed Declaration public static readonly IExporter FullCompressed Field Value Type Description IExporter Properties FileNameSuffix Declaration protected override string FileNameSuffix { get; } Property Value Type Description System.String Overrides ExporterBase.FileNameSuffix Methods Custom(String, Boolean, Boolean) Declaration public static IExporter Custom(string fileNameSuffix = \"\", bool indentXml = false, bool excludeMeasurements = false) Parameters Type Name Description System.String fileNameSuffix System.Boolean indentXml System.Boolean excludeMeasurements Returns Type Description IExporter Implements IExporter Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Horology.StartedClock.html": {
    "href": "api/BenchmarkDotNet.Horology.StartedClock.html",
    "title": "Struct StartedClock | BenchmarkDotNet",
    "keywords": "Struct StartedClock Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Horology Assembly : BenchmarkDotNet.dll Syntax public struct StartedClock Constructors StartedClock(IClock, Int64) Declaration public StartedClock(IClock clock, long startTimestamp) Parameters Type Name Description IClock clock System.Int64 startTimestamp Methods GetElapsed() Declaration public ClockSpan GetElapsed() Returns Type Description ClockSpan ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Horology.TimeInterval.html": {
    "href": "api/BenchmarkDotNet.Horology.TimeInterval.html",
    "title": "Struct TimeInterval | BenchmarkDotNet",
    "keywords": "Struct TimeInterval Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Horology Assembly : BenchmarkDotNet.dll Syntax public struct TimeInterval Constructors TimeInterval(Double) Declaration public TimeInterval(double nanoseconds) Parameters Type Name Description System.Double nanoseconds TimeInterval(Double, TimeUnit) Declaration public TimeInterval(double value, TimeUnit unit) Parameters Type Name Description System.Double value TimeUnit unit Fields Day Declaration public static readonly TimeInterval Day Field Value Type Description TimeInterval Hour Declaration public static readonly TimeInterval Hour Field Value Type Description TimeInterval Microsecond Declaration public static readonly TimeInterval Microsecond Field Value Type Description TimeInterval Millisecond Declaration public static readonly TimeInterval Millisecond Field Value Type Description TimeInterval Minute Declaration public static readonly TimeInterval Minute Field Value Type Description TimeInterval Nanosecond Declaration public static readonly TimeInterval Nanosecond Field Value Type Description TimeInterval Second Declaration public static readonly TimeInterval Second Field Value Type Description TimeInterval Properties Nanoseconds Declaration public double Nanoseconds { get; } Property Value Type Description System.Double Methods FromDays(Double) Declaration public static TimeInterval FromDays(double value) Parameters Type Name Description System.Double value Returns Type Description TimeInterval FromHours(Double) Declaration public static TimeInterval FromHours(double value) Parameters Type Name Description System.Double value Returns Type Description TimeInterval FromMicroseconds(Double) Declaration public static TimeInterval FromMicroseconds(double value) Parameters Type Name Description System.Double value Returns Type Description TimeInterval FromMilliseconds(Double) Declaration public static TimeInterval FromMilliseconds(double value) Parameters Type Name Description System.Double value Returns Type Description TimeInterval FromMinutes(Double) Declaration public static TimeInterval FromMinutes(double value) Parameters Type Name Description System.Double value Returns Type Description TimeInterval FromNanoseconds(Double) Declaration public static TimeInterval FromNanoseconds(double value) Parameters Type Name Description System.Double value Returns Type Description TimeInterval FromSeconds(Double) Declaration public static TimeInterval FromSeconds(double value) Parameters Type Name Description System.Double value Returns Type Description TimeInterval ToDays() Declaration public double ToDays() Returns Type Description System.Double ToFrequency() Declaration public Frequency ToFrequency() Returns Type Description Frequency ToHours() Declaration public double ToHours() Returns Type Description System.Double ToMicroseconds() Declaration public double ToMicroseconds() Returns Type Description System.Double ToMilliseconds() Declaration public double ToMilliseconds() Returns Type Description System.Double ToMinutes() Declaration public double ToMinutes() Returns Type Description System.Double ToNanoseconds() Declaration public double ToNanoseconds() Returns Type Description System.Double ToSeconds() Declaration public double ToSeconds() Returns Type Description System.Double ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Operators Division(TimeInterval, TimeInterval) Declaration public static double operator /(TimeInterval a, TimeInterval b) Parameters Type Name Description TimeInterval a TimeInterval b Returns Type Description System.Double Division(TimeInterval, Double) Declaration public static TimeInterval operator /(TimeInterval a, double k) Parameters Type Name Description TimeInterval a System.Double k Returns Type Description TimeInterval Division(TimeInterval, Int32) Declaration public static TimeInterval operator /(TimeInterval a, int k) Parameters Type Name Description TimeInterval a System.Int32 k Returns Type Description TimeInterval GreaterThan(TimeInterval, TimeInterval) Declaration public static bool operator>(TimeInterval a, TimeInterval b) Parameters Type Name Description TimeInterval a TimeInterval b Returns Type Description System.Boolean GreaterThanOrEqual(TimeInterval, TimeInterval) Declaration public static bool operator >=(TimeInterval a, TimeInterval b) Parameters Type Name Description TimeInterval a TimeInterval b Returns Type Description System.Boolean LessThan(TimeInterval, TimeInterval) Declaration public static bool operator <(TimeInterval a, TimeInterval b) Parameters Type Name Description TimeInterval a TimeInterval b Returns Type Description System.Boolean LessThanOrEqual(TimeInterval, TimeInterval) Declaration public static bool operator <=(TimeInterval a, TimeInterval b) Parameters Type Name Description TimeInterval a TimeInterval b Returns Type Description System.Boolean Multiply(TimeInterval, Double) Declaration public static TimeInterval operator *(TimeInterval a, double k) Parameters Type Name Description TimeInterval a System.Double k Returns Type Description TimeInterval Multiply(TimeInterval, Int32) Declaration public static TimeInterval operator *(TimeInterval a, int k) Parameters Type Name Description TimeInterval a System.Int32 k Returns Type Description TimeInterval Multiply(Double, TimeInterval) Declaration public static TimeInterval operator *(double k, TimeInterval a) Parameters Type Name Description System.Double k TimeInterval a Returns Type Description TimeInterval Multiply(Int32, TimeInterval) Declaration public static TimeInterval operator *(int k, TimeInterval a) Parameters Type Name Description System.Int32 k TimeInterval a Returns Type Description TimeInterval Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Horology.TimeUnit.html": {
    "href": "api/BenchmarkDotNet.Horology.TimeUnit.html",
    "title": "Class TimeUnit | BenchmarkDotNet",
    "keywords": "Class TimeUnit Inheritance System.Object TimeUnit Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Horology Assembly : BenchmarkDotNet.dll Syntax public class TimeUnit Fields All Declaration public static readonly TimeUnit[] All Field Value Type Description TimeUnit [] Day Declaration public static readonly TimeUnit Day Field Value Type Description TimeUnit Hour Declaration public static readonly TimeUnit Hour Field Value Type Description TimeUnit Microsecond Declaration public static readonly TimeUnit Microsecond Field Value Type Description TimeUnit Millisecond Declaration public static readonly TimeUnit Millisecond Field Value Type Description TimeUnit Minute Declaration public static readonly TimeUnit Minute Field Value Type Description TimeUnit Nanosecond Declaration public static readonly TimeUnit Nanosecond Field Value Type Description TimeUnit Second Declaration public static readonly TimeUnit Second Field Value Type Description TimeUnit Properties Description Declaration public string Description { get; } Property Value Type Description System.String Name Declaration public string Name { get; } Property Value Type Description System.String NanosecondAmount Declaration public long NanosecondAmount { get; } Property Value Type Description System.Int64 Methods Convert(Double, TimeUnit, TimeUnit) Declaration public static double Convert(double value, TimeUnit from, TimeUnit to) Parameters Type Name Description System.Double value TimeUnit from TimeUnit to Returns Type Description System.Double GetBestTimeUnit(Double[]) This method chooses the best time unit for representing a set of time measurements. Declaration public static TimeUnit GetBestTimeUnit(params double[] values) Parameters Type Name Description System.Double [] values The list of time measurements in nanoseconds. Returns Type Description TimeUnit Best time unit. ToInterval(Int64) Declaration public TimeInterval ToInterval(long value = 1L) Parameters Type Name Description System.Int64 value Returns Type Description TimeInterval Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Exporters.MarkdownExporter.MarkdownHighlightStrategy.html": {
    "href": "api/BenchmarkDotNet.Exporters.MarkdownExporter.MarkdownHighlightStrategy.html",
    "title": "Enum MarkdownExporter.MarkdownHighlightStrategy | BenchmarkDotNet",
    "keywords": "Enum MarkdownExporter.MarkdownHighlightStrategy Namespace : BenchmarkDotNet.Exporters Assembly : BenchmarkDotNet.dll Syntax public enum MarkdownHighlightStrategy Fields Name Description Bold Marker None Extension Methods CommonExtensions.IsOneOf<MarkdownExporter.MarkdownHighlightStrategy>(MarkdownExporter.MarkdownHighlightStrategy[])"
  },
  "api/BenchmarkDotNet.Exporters.MarkdownExporter.html": {
    "href": "api/BenchmarkDotNet.Exporters.MarkdownExporter.html",
    "title": "Class MarkdownExporter | BenchmarkDotNet",
    "keywords": "Class MarkdownExporter Inheritance System.Object ExporterBase MarkdownExporter Implements IExporter Inherited Members ExporterBase.Name ExporterBase.FileCaption ExporterBase.ExportToFiles(Summary, ILogger) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Exporters Assembly : BenchmarkDotNet.dll Syntax public class MarkdownExporter : ExporterBase, IExporter Fields Atlassian Declaration public static readonly IExporter Atlassian Field Value Type Description IExporter Console Declaration public static readonly IExporter Console Field Value Type Description IExporter Default Declaration public static readonly IExporter Default Field Value Type Description IExporter GitHub Declaration public static readonly IExporter GitHub Field Value Type Description IExporter StackOverflow Declaration public static readonly IExporter StackOverflow Field Value Type Description IExporter Properties FileExtension Declaration protected override string FileExtension { get; } Property Value Type Description System.String Overrides ExporterBase.FileExtension FileNameSuffix Declaration protected override string FileNameSuffix { get; } Property Value Type Description System.String Overrides ExporterBase.FileNameSuffix Methods ExportToLog(Summary, ILogger) Declaration public override void ExportToLog(Summary summary, ILogger logger) Parameters Type Name Description Summary summary ILogger logger Overrides ExporterBase.ExportToLog(Summary, ILogger) Implements IExporter Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Exporters.PlainExporter.html": {
    "href": "api/BenchmarkDotNet.Exporters.PlainExporter.html",
    "title": "Class PlainExporter | BenchmarkDotNet",
    "keywords": "Class PlainExporter Inheritance System.Object ExporterBase PlainExporter Implements IExporter Inherited Members ExporterBase.Name ExporterBase.FileExtension ExporterBase.FileNameSuffix ExporterBase.FileCaption ExporterBase.ExportToFiles(Summary, ILogger) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Exporters Assembly : BenchmarkDotNet.dll Syntax public class PlainExporter : ExporterBase, IExporter Fields Default Declaration public static readonly IExporter Default Field Value Type Description IExporter Methods ExportToLog(Summary, ILogger) Declaration public override void ExportToLog(Summary summary, ILogger logger) Parameters Type Name Description Summary summary ILogger logger Overrides ExporterBase.ExportToLog(Summary, ILogger) Implements IExporter Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Horology.Chronometer.html": {
    "href": "api/BenchmarkDotNet.Horology.Chronometer.html",
    "title": "Class Chronometer | BenchmarkDotNet",
    "keywords": "Class Chronometer Inheritance System.Object Chronometer Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Horology Assembly : BenchmarkDotNet.dll Syntax public static class Chronometer Fields BestClock Declaration public static readonly IClock BestClock Field Value Type Description IClock DateTime Declaration public static readonly IClock DateTime Field Value Type Description IClock Stopwatch Declaration public static readonly IClock Stopwatch Field Value Type Description IClock WindowsClock Declaration public static readonly IClock WindowsClock Field Value Type Description IClock Properties Frequency Declaration public static Frequency Frequency { get; } Property Value Type Description Frequency HardwareTimerKind Declaration public static HardwareTimerKind HardwareTimerKind { get; } Property Value Type Description HardwareTimerKind Methods GetHardwareTimerKind(Frequency) Declaration public static HardwareTimerKind GetHardwareTimerKind(Frequency frequency) Parameters Type Name Description Frequency frequency Returns Type Description HardwareTimerKind GetResolution() Declaration public static TimeInterval GetResolution() Returns Type Description TimeInterval GetTimestamp() Declaration public static long GetTimestamp() Returns Type Description System.Int64 Start() Declaration public static StartedClock Start() Returns Type Description StartedClock"
  },
  "api/BenchmarkDotNet.Horology.ClockExtensions.html": {
    "href": "api/BenchmarkDotNet.Horology.ClockExtensions.html",
    "title": "Class ClockExtensions | BenchmarkDotNet",
    "keywords": "Class ClockExtensions Inheritance System.Object ClockExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Horology Assembly : BenchmarkDotNet.dll Syntax public static class ClockExtensions Methods GetResolution(IClock) Declaration public static TimeInterval GetResolution(this IClock clock) Parameters Type Name Description IClock clock Returns Type Description TimeInterval Start(IClock) Declaration public static StartedClock Start(this IClock clock) Parameters Type Name Description IClock clock Returns Type Description StartedClock"
  },
  "api/BenchmarkDotNet.Horology.ClockSpan.html": {
    "href": "api/BenchmarkDotNet.Horology.ClockSpan.html",
    "title": "Struct ClockSpan | BenchmarkDotNet",
    "keywords": "Struct ClockSpan Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Horology Assembly : BenchmarkDotNet.dll Syntax public struct ClockSpan Constructors ClockSpan(Int64, Int64, Frequency) Declaration public ClockSpan(long startTimestamp, long endTimestamp, Frequency frequency) Parameters Type Name Description System.Int64 startTimestamp System.Int64 endTimestamp Frequency frequency Methods GetDateTimeTicks() Declaration public long GetDateTimeTicks() Returns Type Description System.Int64 GetNanoseconds() Declaration public double GetNanoseconds() Returns Type Description System.Double GetSeconds() Declaration public double GetSeconds() Returns Type Description System.Double GetTimeInterval() Declaration public TimeInterval GetTimeInterval() Returns Type Description TimeInterval GetTimeSpan() Declaration public TimeSpan GetTimeSpan() Returns Type Description System.TimeSpan ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Reports.SummaryTable.html": {
    "href": "api/BenchmarkDotNet.Reports.SummaryTable.html",
    "title": "Class SummaryTable | BenchmarkDotNet",
    "keywords": "Class SummaryTable Inheritance System.Object SummaryTable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Reports Assembly : BenchmarkDotNet.dll Syntax public class SummaryTable Properties ColumnCount Declaration public int ColumnCount { get; } Property Value Type Description System.Int32 Columns Declaration public SummaryTable.SummaryTableColumn[] Columns { get; } Property Value Type Description SummaryTable.SummaryTableColumn [] EffectiveSummaryStyle Declaration public ISummaryStyle EffectiveSummaryStyle { get; } Property Value Type Description ISummaryStyle FullContent Declaration public string[][] FullContent { get; } Property Value Type Description System.String [][] FullContentStartOfHighlightGroup Declaration public bool[] FullContentStartOfHighlightGroup { get; } Property Value Type Description System.Boolean [] FullContentStartOfLogicalGroup Declaration public bool[] FullContentStartOfLogicalGroup { get; } Property Value Type Description System.Boolean [] FullContentWithHeader Declaration public string[][] FullContentWithHeader { get; } Property Value Type Description System.String [][] FullHeader Declaration public string[] FullHeader { get; } Property Value Type Description System.String [] IsDefault Declaration public bool[] IsDefault { get; } Property Value Type Description System.Boolean [] SeparateLogicalGroups Declaration public bool SeparateLogicalGroups { get; } Property Value Type Description System.Boolean Summary Declaration public Summary Summary { get; } Property Value Type Description Summary Extension Methods CommonExtensions.IsOneOf<T>(T, T[]) SummaryTableExtensions.PrintCommonColumns(SummaryTable, ILogger) SummaryTableExtensions.PrintLine(SummaryTable, String[], ILogger, String, String) SummaryTableExtensions.PrintLine(SummaryTable, String[], ILogger, String, String, Boolean, Boolean, MarkdownExporter.MarkdownHighlightStrategy, String, Boolean)"
  },
  "api/BenchmarkDotNet.Reports.SummaryTableExtensions.html": {
    "href": "api/BenchmarkDotNet.Reports.SummaryTableExtensions.html",
    "title": "Class SummaryTableExtensions | BenchmarkDotNet",
    "keywords": "Class SummaryTableExtensions Inheritance System.Object SummaryTableExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Reports Assembly : BenchmarkDotNet.dll Syntax public static class SummaryTableExtensions Methods PrintCommonColumns(SummaryTable, ILogger) Declaration public static void PrintCommonColumns(this SummaryTable table, ILogger logger) Parameters Type Name Description SummaryTable table ILogger logger PrintLine(SummaryTable, String[], ILogger, String, String) Declaration public static void PrintLine(this SummaryTable table, string[] line, ILogger logger, string leftDel, string rightDel) Parameters Type Name Description SummaryTable table System.String [] line ILogger logger System.String leftDel System.String rightDel PrintLine(SummaryTable, String[], ILogger, String, String, Boolean, Boolean, MarkdownExporter.MarkdownHighlightStrategy, String, Boolean) Declaration public static void PrintLine(this SummaryTable table, string[] line, ILogger logger, string leftDel, string rightDel, bool highlightRow, bool startOfGroup, MarkdownExporter.MarkdownHighlightStrategy startOfGroupHighlightStrategy, string boldMarkupFormat, bool escapeHtml) Parameters Type Name Description SummaryTable table System.String [] line ILogger logger System.String leftDel System.String rightDel System.Boolean highlightRow System.Boolean startOfGroup MarkdownExporter.MarkdownHighlightStrategy startOfGroupHighlightStrategy System.String boldMarkupFormat System.Boolean escapeHtml"
  },
  "api/BenchmarkDotNet.Running.Benchmark.html": {
    "href": "api/BenchmarkDotNet.Running.Benchmark.html",
    "title": "Class Benchmark | BenchmarkDotNet",
    "keywords": "Class Benchmark Inheritance System.Object Benchmark Implements System.IComparable < Benchmark > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Running Assembly : BenchmarkDotNet.dll Syntax public class Benchmark : IComparable<Benchmark> Properties DisplayInfo Declaration public string DisplayInfo { get; } Property Value Type Description System.String FolderInfo Declaration public string FolderInfo { get; } Property Value Type Description System.String HasArguments Declaration public bool HasArguments { get; } Property Value Type Description System.Boolean Job Declaration public Job Job { get; } Property Value Type Description Job Parameters Declaration public ParameterInstances Parameters { get; } Property Value Type Description ParameterInstances Target Declaration public Target Target { get; } Property Value Type Description Target Methods CompareTo(Benchmark) Declaration public int CompareTo(Benchmark other) Parameters Type Name Description Benchmark other Returns Type Description System.Int32 Create(Target, Job, ParameterInstances) Declaration public static Benchmark Create(Target target, Job job, ParameterInstances parameters) Parameters Type Name Description Target target Job job ParameterInstances parameters Returns Type Description Benchmark IsBaseline() Declaration public bool IsBaseline() Returns Type Description System.Boolean ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements System.IComparable<T> Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Toolchains.GeneratorBase.html": {
    "href": "api/BenchmarkDotNet.Toolchains.GeneratorBase.html",
    "title": "Class GeneratorBase | BenchmarkDotNet",
    "keywords": "Class GeneratorBase Inheritance System.Object GeneratorBase DotNetCliGenerator Generator Implements IGenerator Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Toolchains Assembly : BenchmarkDotNet.dll Syntax public abstract class GeneratorBase : IGenerator Methods CopyAllRequiredFiles(ArtifactsPaths) Declaration protected virtual void CopyAllRequiredFiles(ArtifactsPaths artifactsPaths) Parameters Type Name Description ArtifactsPaths artifactsPaths GenerateBuildScript(BuildPartition, ArtifactsPaths) Declaration protected abstract void GenerateBuildScript(BuildPartition buildPartition, ArtifactsPaths artifactsPaths) Parameters Type Name Description BuildPartition buildPartition ArtifactsPaths artifactsPaths GenerateNuGetConfig(ArtifactsPaths) Declaration protected virtual void GenerateNuGetConfig(ArtifactsPaths artifactsPaths) Parameters Type Name Description ArtifactsPaths artifactsPaths GenerateProject(BuildPartition, ILogger, String) Declaration public GenerateResult GenerateProject(BuildPartition buildPartition, ILogger logger, string rootArtifactsFolderPath) Parameters Type Name Description BuildPartition buildPartition ILogger logger System.String rootArtifactsFolderPath Returns Type Description GenerateResult GenerateProject(BuildPartition, ArtifactsPaths, ILogger) Declaration protected virtual void GenerateProject(BuildPartition buildPartition, ArtifactsPaths artifactsPaths, ILogger logger) Parameters Type Name Description BuildPartition buildPartition ArtifactsPaths artifactsPaths ILogger logger GetArtifactsToCleanup(ArtifactsPaths) Declaration protected abstract string[] GetArtifactsToCleanup(ArtifactsPaths artifactsPaths) Parameters Type Name Description ArtifactsPaths artifactsPaths Returns Type Description System.String [] GetBinariesDirectoryPath(String, String) Declaration protected virtual string GetBinariesDirectoryPath(string buildArtifactsDirectoryPath, string configuration) Parameters Type Name Description System.String buildArtifactsDirectoryPath System.String configuration Returns Type Description System.String GetBuildArtifactsDirectoryPath(BuildPartition, String) Declaration protected abstract string GetBuildArtifactsDirectoryPath(BuildPartition assemblyLocation, string programName) Parameters Type Name Description BuildPartition assemblyLocation System.String programName Returns Type Description System.String GetExecutableExtension() Declaration protected virtual string GetExecutableExtension() Returns Type Description System.String GetPackagesDirectoryPath(String) Declaration protected virtual string GetPackagesDirectoryPath(string buildArtifactsDirectoryPath) Parameters Type Name Description System.String buildArtifactsDirectoryPath Returns Type Description System.String GetProjectFilePath(String) Declaration protected virtual string GetProjectFilePath(string binariesDirectoryPath) Parameters Type Name Description System.String binariesDirectoryPath Returns Type Description System.String Implements IGenerator Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Toolchains.IBuilder.html": {
    "href": "api/BenchmarkDotNet.Toolchains.IBuilder.html",
    "title": "Interface IBuilder | BenchmarkDotNet",
    "keywords": "Interface IBuilder Namespace : BenchmarkDotNet.Toolchains Assembly : BenchmarkDotNet.dll Syntax public interface IBuilder Methods Build(GenerateResult, BuildPartition, ILogger) Declaration BuildResult Build(GenerateResult generateResult, BuildPartition buildPartition, ILogger logger) Parameters Type Name Description GenerateResult generateResult BuildPartition buildPartition ILogger logger Returns Type Description BuildResult Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Toolchains.IExecutor.html": {
    "href": "api/BenchmarkDotNet.Toolchains.IExecutor.html",
    "title": "Interface IExecutor | BenchmarkDotNet",
    "keywords": "Interface IExecutor Namespace : BenchmarkDotNet.Toolchains Assembly : BenchmarkDotNet.dll Syntax public interface IExecutor Methods Execute(ExecuteParameters) Declaration ExecuteResult Execute(ExecuteParameters executeParameters) Parameters Type Name Description ExecuteParameters executeParameters Returns Type Description ExecuteResult Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Toolchains.IGenerator.html": {
    "href": "api/BenchmarkDotNet.Toolchains.IGenerator.html",
    "title": "Interface IGenerator | BenchmarkDotNet",
    "keywords": "Interface IGenerator Namespace : BenchmarkDotNet.Toolchains Assembly : BenchmarkDotNet.dll Syntax public interface IGenerator Methods GenerateProject(BuildPartition, ILogger, String) Declaration GenerateResult GenerateProject(BuildPartition buildPartition, ILogger logger, string rootArtifactsFolderPath) Parameters Type Name Description BuildPartition buildPartition ILogger logger System.String rootArtifactsFolderPath Returns Type Description GenerateResult Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Validators.ExecutionValidatorBase.html": {
    "href": "api/BenchmarkDotNet.Validators.ExecutionValidatorBase.html",
    "title": "Class ExecutionValidatorBase | BenchmarkDotNet",
    "keywords": "Class ExecutionValidatorBase Inheritance System.Object ExecutionValidatorBase ExecutionValidator ReturnValueValidator Implements IValidator Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Validators Assembly : BenchmarkDotNet.dll Syntax public abstract class ExecutionValidatorBase : IValidator Constructors ExecutionValidatorBase(Boolean) Declaration protected ExecutionValidatorBase(bool failOnError) Parameters Type Name Description System.Boolean failOnError Properties TreatsWarningsAsErrors Declaration public bool TreatsWarningsAsErrors { get; } Property Value Type Description System.Boolean Methods ExecuteBenchmarks(Object, IEnumerable<Benchmark>, List<ValidationError>) Declaration protected abstract void ExecuteBenchmarks(object benchmarkTypeInstance, IEnumerable<Benchmark> benchmarks, List<ValidationError> errors) Parameters Type Name Description System.Object benchmarkTypeInstance System.Collections.Generic.IEnumerable < Benchmark > benchmarks System.Collections.Generic.List < ValidationError > errors GetDisplayExceptionMessage(Exception) Declaration protected static string GetDisplayExceptionMessage(Exception ex) Parameters Type Name Description System.Exception ex Returns Type Description System.String Validate(ValidationParameters) Declaration public IEnumerable<ValidationError> Validate(ValidationParameters validationParameters) Parameters Type Name Description ValidationParameters validationParameters Returns Type Description System.Collections.Generic.IEnumerable < ValidationError > Implements IValidator Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Validators.GenericBenchmarksValidator.html": {
    "href": "api/BenchmarkDotNet.Validators.GenericBenchmarksValidator.html",
    "title": "Class GenericBenchmarksValidator | BenchmarkDotNet",
    "keywords": "Class GenericBenchmarksValidator Inheritance System.Object GenericBenchmarksValidator Implements IValidator Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Validators Assembly : BenchmarkDotNet.dll Syntax public class GenericBenchmarksValidator : IValidator Fields DontFailOnError Declaration public static readonly IValidator DontFailOnError Field Value Type Description IValidator Properties TreatsWarningsAsErrors Declaration public bool TreatsWarningsAsErrors { get; } Property Value Type Description System.Boolean Methods Validate(ValidationParameters) Declaration public IEnumerable<ValidationError> Validate(ValidationParameters validationParameters) Parameters Type Name Description ValidationParameters validationParameters Returns Type Description System.Collections.Generic.IEnumerable < ValidationError > Implements IValidator Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Validators.IValidator.html": {
    "href": "api/BenchmarkDotNet.Validators.IValidator.html",
    "title": "Interface IValidator | BenchmarkDotNet",
    "keywords": "Interface IValidator Namespace : BenchmarkDotNet.Validators Assembly : BenchmarkDotNet.dll Syntax public interface IValidator Properties TreatsWarningsAsErrors Declaration bool TreatsWarningsAsErrors { get; } Property Value Type Description System.Boolean Methods Validate(ValidationParameters) Declaration IEnumerable<ValidationError> Validate(ValidationParameters validationParameters) Parameters Type Name Description ValidationParameters validationParameters Returns Type Description System.Collections.Generic.IEnumerable < ValidationError > Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Validators.JitOptimizationsValidator.html": {
    "href": "api/BenchmarkDotNet.Validators.JitOptimizationsValidator.html",
    "title": "Class JitOptimizationsValidator | BenchmarkDotNet",
    "keywords": "Class JitOptimizationsValidator Inheritance System.Object JitOptimizationsValidator Implements IValidator Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Validators Assembly : BenchmarkDotNet.dll Syntax public class JitOptimizationsValidator : IValidator Fields DontFailOnError Declaration public static readonly IValidator DontFailOnError Field Value Type Description IValidator FailOnError Declaration public static readonly IValidator FailOnError Field Value Type Description IValidator Properties TreatsWarningsAsErrors Declaration public bool TreatsWarningsAsErrors { get; } Property Value Type Description System.Boolean Methods Validate(ValidationParameters) Declaration public IEnumerable<ValidationError> Validate(ValidationParameters validationParameters) Parameters Type Name Description ValidationParameters validationParameters Returns Type Description System.Collections.Generic.IEnumerable < ValidationError > Implements IValidator Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Analysers.MultimodalDistributionAnalyzer.html": {
    "href": "api/BenchmarkDotNet.Analysers.MultimodalDistributionAnalyzer.html",
    "title": "Class MultimodalDistributionAnalyzer | BenchmarkDotNet",
    "keywords": "Class MultimodalDistributionAnalyzer Inheritance System.Object AnalyserBase MultimodalDistributionAnalyzer Implements IAnalyser Inherited Members AnalyserBase.Analyse(Summary) AnalyserBase.AnalyseSummary(Summary) AnalyserBase.CreateHint(String, BenchmarkReport) AnalyserBase.CreateWarning(String, BenchmarkReport) AnalyserBase.CreateError(String, BenchmarkReport) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Analysers Assembly : BenchmarkDotNet.dll Syntax public class MultimodalDistributionAnalyzer : AnalyserBase, IAnalyser Fields Default Declaration public static readonly IAnalyser Default Field Value Type Description IAnalyser Properties Id Declaration public override string Id { get; } Property Value Type Description System.String Overrides AnalyserBase.Id Methods AnalyseReport(BenchmarkReport, Summary) Declaration public override IEnumerable<Conclusion> AnalyseReport(BenchmarkReport report, Summary summary) Parameters Type Name Description BenchmarkReport report Summary summary Returns Type Description System.Collections.Generic.IEnumerable < Conclusion > Overrides AnalyserBase.AnalyseReport(BenchmarkReport, Summary) Implements IAnalyser Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Exporters.MarkdownExporterAttribute.Atlassian.html": {
    "href": "api/BenchmarkDotNet.Attributes.Exporters.MarkdownExporterAttribute.Atlassian.html",
    "title": "Class MarkdownExporterAttribute.Atlassian | BenchmarkDotNet",
    "keywords": "Class MarkdownExporterAttribute.Atlassian Inheritance System.Object System.Attribute ExporterConfigBaseAttribute MarkdownExporterAttribute.Atlassian Implements IConfigSource Inherited Members ExporterConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Exporters Assembly : BenchmarkDotNet.dll Syntax public class Atlassian : ExporterConfigBaseAttribute, IConfigSource Constructors Atlassian() Declaration public Atlassian() Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.IterationSetupAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.IterationSetupAttribute.html",
    "title": "Class IterationSetupAttribute | BenchmarkDotNet",
    "keywords": "Class IterationSetupAttribute Marks method to be executed before each benchmark iteration. Inheritance System.Object System.Attribute TargetedAttribute IterationSetupAttribute Inherited Members TargetedAttribute.Target System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes Assembly : BenchmarkDotNet.dll Syntax [AttributeUsage(AttributeTargets.Method)] public class IterationSetupAttribute : TargetedAttribute Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Jobs.GcMode.html": {
    "href": "api/BenchmarkDotNet.Jobs.GcMode.html",
    "title": "Class GcMode | BenchmarkDotNet",
    "keywords": "Class GcMode Inheritance System.Object CharacteristicObject CharacteristicObject < GcMode > JobMode < GcMode > GcMode Implements System.IEquatable < GcMode > Inherited Members JobMode<GcMode>.Default JobMode<GcMode>.Job CharacteristicObject<GcMode>.Apply(CharacteristicObject) CharacteristicObject<GcMode>.Apply(CharacteristicObject[]) CharacteristicObject<GcMode>.ApplyAndFreeze(CharacteristicObject) CharacteristicObject<GcMode>.ApplyAndFreeze(CharacteristicObject[]) CharacteristicObject<GcMode>.Freeze() CharacteristicObject<GcMode>.UnfreezeCopy() CharacteristicObject<GcMode>.CreateCharacteristic<TC>(String) CharacteristicObject.ResolveId(CharacteristicObject, String) CharacteristicObject.IdCharacteristic CharacteristicObject.AssertNotFrozen() CharacteristicObject.AssertIsRoot() CharacteristicObject.AssertIsNonFrozenRoot() CharacteristicObject.AssertIsAssignable(Characteristic, Object) CharacteristicObject.Owner CharacteristicObject.OwnerOrSelf CharacteristicObject.Frozen CharacteristicObject.IsPropertyBag CharacteristicObject.HasChanges CharacteristicObject.GetCharacteristicsWithValues() CharacteristicObject.HasValue(Characteristic) CharacteristicObject.ResolveValue<T>(Characteristic<T>, IResolver) CharacteristicObject.ResolveValue(Characteristic, IResolver) CharacteristicObject.ResolveValue<T>(Characteristic<T>, T) CharacteristicObject.ResolveValue(Characteristic, Object) CharacteristicObject.ResolveValueAsNullable<T>(Characteristic<T>) CharacteristicObject.ApplyCore(CharacteristicObject) CharacteristicObject.FreezeCore() CharacteristicObject.UnfreezeCopyCore() CharacteristicObject.Id CharacteristicObject.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Jobs Assembly : BenchmarkDotNet.dll Syntax public sealed class GcMode : JobMode<GcMode>, IEquatable<GcMode> Fields AllowVeryLargeObjectsCharacteristic Declaration public static readonly Characteristic<bool> AllowVeryLargeObjectsCharacteristic Field Value Type Description Characteristic < System.Boolean > ConcurrentCharacteristic Declaration public static readonly Characteristic<bool> ConcurrentCharacteristic Field Value Type Description Characteristic < System.Boolean > CpuGroupsCharacteristic Declaration public static readonly Characteristic<bool> CpuGroupsCharacteristic Field Value Type Description Characteristic < System.Boolean > ForceCharacteristic Declaration public static readonly Characteristic<bool> ForceCharacteristic Field Value Type Description Characteristic < System.Boolean > HeapAffinitizeMaskCharacteristic Declaration public static readonly Characteristic<int> HeapAffinitizeMaskCharacteristic Field Value Type Description Characteristic < System.Int32 > HeapCountCharacteristic Declaration public static readonly Characteristic<int> HeapCountCharacteristic Field Value Type Description Characteristic < System.Int32 > NoAffinitizeCharacteristic Declaration public static readonly Characteristic<bool> NoAffinitizeCharacteristic Field Value Type Description Characteristic < System.Boolean > RetainVmCharacteristic Declaration public static readonly Characteristic<bool> RetainVmCharacteristic Field Value Type Description Characteristic < System.Boolean > ServerCharacteristic Declaration public static readonly Characteristic<bool> ServerCharacteristic Field Value Type Description Characteristic < System.Boolean > Properties AllowVeryLargeObjects On 64-bit platforms, enables arrays that are greater than 2 gigabytes (GB) in total size. false: Arrays greater than 2 GB in total size are not enabled. This is the default. true: Arrays greater than 2 GB in total size are enabled on 64-bit platforms. Declaration public bool AllowVeryLargeObjects { get; set; } Property Value Type Description System.Boolean Concurrent Specifies whether the common language runtime runs garbage collection on a separate thread. false: Does not run garbage collection concurrently. true: Runs garbage collection concurrently. This is the default. Declaration public bool Concurrent { get; set; } Property Value Type Description System.Boolean CpuGroups Specifies whether garbage collection supports multiple CPU groups. false: Garbage collection does not support multiple CPU groups. This is the default. true: Garbage collection supports multiple CPU groups, if server garbage collection is enabled. Declaration public bool CpuGroups { get; set; } Property Value Type Description System.Boolean Force Specifies whether the BenchmarkDotNet's benchmark runner forces full garbage collection after each benchmark invocation false: Does not force garbage collection. true: Forces full garbage collection after each benchmark invocation. This is the default. Declaration public bool Force { get; set; } Property Value Type Description System.Boolean HeapAffinitizeMask process mask, see MSDN for more. Declaration public int HeapAffinitizeMask { get; set; } Property Value Type Description System.Int32 HeapCount specify the # of Server GC threads/heaps, must be smaller than the # of logical CPUs the process is allowed to run on, ie, if you don't specifically affinitize your process it means the # of total logical CPUs on the machine; otherwise this is the # of logical CPUs you affinitized your process to. Declaration public int HeapCount { get; set; } Property Value Type Description System.Int32 NoAffinitize specify true to disable hard affinity of Server GC threads to CPUs Declaration public bool NoAffinitize { get; set; } Property Value Type Description System.Boolean RetainVm Put segments that should be deleted on a standby list for future use instead of releasing them back to the OS The default is false Declaration public bool RetainVm { get; set; } Property Value Type Description System.Boolean Server Specifies whether the common language runtime runs server garbage collection. false: Does not run server garbage collection. This is the default. true: Runs server garbage collection. Declaration public bool Server { get; set; } Property Value Type Description System.Boolean Methods Equals(GcMode) Declaration public bool Equals(GcMode other) Parameters Type Name Description GcMode other Returns Type Description System.Boolean GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() Implements System.IEquatable<T> Extension Methods CharacteristicHelper.GetThisTypeCharacteristics(CharacteristicObject) CharacteristicHelper.GetAllCharacteristics(CharacteristicObject) CommonExtensions.IsOneOf<T>(T, T[]) GcModeExtensions.WithServer(GcMode, Boolean) GcModeExtensions.WithConcurrent(GcMode, Boolean) GcModeExtensions.WithCpuGroups(GcMode, Boolean) GcModeExtensions.WithForce(GcMode, Boolean) GcModeExtensions.WithAllowVeryLargeObjects(GcMode, Boolean) GcModeExtensions.WithRetainVm(GcMode, Boolean) GcModeExtensions.WithHeapCount(GcMode, Int32) GcModeExtensions.WithNoAffinitize(GcMode, Boolean) GcModeExtensions.WithHeapAffinitizeMask(GcMode, Int32)"
  },
  "api/BenchmarkDotNet.Toolchains.InProcess.BenchmarkActionCodegen.html": {
    "href": "api/BenchmarkDotNet.Toolchains.InProcess.BenchmarkActionCodegen.html",
    "title": "Enum BenchmarkActionCodegen | BenchmarkDotNet",
    "keywords": "Enum BenchmarkActionCodegen How benchmark action code is generated Namespace : BenchmarkDotNet.Toolchains.InProcess Assembly : BenchmarkDotNet.dll Syntax public enum BenchmarkActionCodegen Fields Name Description DelegateCombine Fallback option: the unroll feature is implemented using System.Delegate.Combine(System.Delegate,System.Delegate) method. Has additional overhead (+1 delegate call) but should work on all platforms. ReflectionEmit The unroll feature is implemented using dynamic method codegen (Reflection.Emit). Provides most accurate results but may not work as expected on some platforms (e.g. .Net Native). Extension Methods CommonExtensions.IsOneOf<BenchmarkActionCodegen>(BenchmarkActionCodegen[])"
  },
  "api/BenchmarkDotNet.Toolchains.InProcess.BenchmarkActionFactory.html": {
    "href": "api/BenchmarkDotNet.Toolchains.InProcess.BenchmarkActionFactory.html",
    "title": "Class BenchmarkActionFactory | BenchmarkDotNet",
    "keywords": "Class BenchmarkActionFactory Helper class that creates BenchmarkAction instances. Inheritance System.Object BenchmarkActionFactory Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Toolchains.InProcess Assembly : BenchmarkDotNet.dll Syntax public static class BenchmarkActionFactory Methods CreateDummy() Creates a dummy benchmark action. Declaration public static BenchmarkAction CreateDummy() Returns Type Description BenchmarkAction Dummy benchmark action. CreateGlobalCleanup(Target, Object) Creates global cleanup benchmark action. Declaration public static BenchmarkAction CreateGlobalCleanup(Target target, object instance) Parameters Type Name Description Target target Target info. System.Object instance Instance of target. Returns Type Description BenchmarkAction Cleanup benchmark action. CreateGlobalSetup(Target, Object) Creates global setup benchmark action. Declaration public static BenchmarkAction CreateGlobalSetup(Target target, object instance) Parameters Type Name Description Target target Target info. System.Object instance Instance of target. Returns Type Description BenchmarkAction Setup benchmark action. CreateIdle(Target, Object, BenchmarkActionCodegen, Int32) Creates idle benchmark action. Declaration public static BenchmarkAction CreateIdle(Target target, object instance, BenchmarkActionCodegen codegenMode, int unrollFactor) Parameters Type Name Description Target target Target info. System.Object instance Instance of target. BenchmarkActionCodegen codegenMode Describes how benchmark action code is generated. System.Int32 unrollFactor Unroll factor. Returns Type Description BenchmarkAction Idle benchmark action. CreateIterationCleanup(Target, Object) Creates global cleanup benchmark action. Declaration public static BenchmarkAction CreateIterationCleanup(Target target, object instance) Parameters Type Name Description Target target Target info. System.Object instance Instance of target. Returns Type Description BenchmarkAction Cleanup benchmark action. CreateIterationSetup(Target, Object) Creates global setup benchmark action. Declaration public static BenchmarkAction CreateIterationSetup(Target target, object instance) Parameters Type Name Description Target target Target info. System.Object instance Instance of target. Returns Type Description BenchmarkAction Setup benchmark action. CreateRun(Target, Object, BenchmarkActionCodegen, Int32) Creates run benchmark action. Declaration public static BenchmarkAction CreateRun(Target target, object instance, BenchmarkActionCodegen codegenMode, int unrollFactor) Parameters Type Name Description Target target Target info. System.Object instance Instance of target. BenchmarkActionCodegen codegenMode Describes how benchmark action code is generated. System.Int32 unrollFactor Unroll factor. Returns Type Description BenchmarkAction Run benchmark action."
  },
  "api/BenchmarkDotNet.Portability.VMware.html": {
    "href": "api/BenchmarkDotNet.Portability.VMware.html",
    "title": "Class VMware | BenchmarkDotNet",
    "keywords": "Class VMware Inheritance System.Object VirtualMachineHypervisor VMware Inherited Members VirtualMachineHypervisor.ContainsVmIdentifier(String, String) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Portability Assembly : BenchmarkDotNet.dll Syntax public class VMware : VirtualMachineHypervisor Properties Default Declaration public static VMware Default { get; } Property Value Type Description VMware Name Declaration public override string Name { get; } Property Value Type Description System.String Overrides VirtualMachineHypervisor.Name Methods IsVirtualMachine(String, String) Declaration public override bool IsVirtualMachine(string manufacturer, string model) Parameters Type Name Description System.String manufacturer System.String model Returns Type Description System.Boolean Overrides VirtualMachineHypervisor.IsVirtualMachine(String, String) Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Portability.VirtualBox.html": {
    "href": "api/BenchmarkDotNet.Portability.VirtualBox.html",
    "title": "Class VirtualBox | BenchmarkDotNet",
    "keywords": "Class VirtualBox Inheritance System.Object VirtualMachineHypervisor VirtualBox Inherited Members VirtualMachineHypervisor.ContainsVmIdentifier(String, String) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Portability Assembly : BenchmarkDotNet.dll Syntax public class VirtualBox : VirtualMachineHypervisor Properties Default Declaration public static VirtualBox Default { get; } Property Value Type Description VirtualBox Name Declaration public override string Name { get; } Property Value Type Description System.String Overrides VirtualMachineHypervisor.Name Methods IsVirtualMachine(String, String) Declaration public override bool IsVirtualMachine(string manufacturer, string model) Parameters Type Name Description System.String manufacturer System.String model Returns Type Description System.Boolean Overrides VirtualMachineHypervisor.IsVirtualMachine(String, String) Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Portability.VirtualMachineHypervisor.html": {
    "href": "api/BenchmarkDotNet.Portability.VirtualMachineHypervisor.html",
    "title": "Class VirtualMachineHypervisor | BenchmarkDotNet",
    "keywords": "Class VirtualMachineHypervisor Inheritance System.Object VirtualMachineHypervisor HyperV VirtualBox VMware Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Portability Assembly : BenchmarkDotNet.dll Syntax public abstract class VirtualMachineHypervisor Properties Name Declaration public abstract string Name { get; } Property Value Type Description System.String Methods ContainsVmIdentifier(String, String) Declaration protected bool ContainsVmIdentifier(string systemInformation, string vmIdentifier) Parameters Type Name Description System.String systemInformation System.String vmIdentifier Returns Type Description System.Boolean IsVirtualMachine(String, String) Declaration public abstract bool IsVirtualMachine(string manufacturer, string model) Parameters Type Name Description System.String manufacturer System.String model Returns Type Description System.Boolean Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Toolchains.CoreRt.CoreRtToolchainBuilder.html": {
    "href": "api/BenchmarkDotNet.Toolchains.CoreRt.CoreRtToolchainBuilder.html",
    "title": "Class CoreRtToolchainBuilder | BenchmarkDotNet",
    "keywords": "Class CoreRtToolchainBuilder Inheritance System.Object CustomDotNetCliToolchainBuilder CoreRtToolchainBuilder Inherited Members CustomDotNetCliToolchainBuilder.runtimeIdentifier CustomDotNetCliToolchainBuilder.customDotNetCliPath CustomDotNetCliToolchainBuilder.targetFrameworkMoniker CustomDotNetCliToolchainBuilder.displayName CustomDotNetCliToolchainBuilder.runtimeFrameworkVersion CustomDotNetCliToolchainBuilder.useNuGetClearTag CustomDotNetCliToolchainBuilder.useTempFolderForRestore CustomDotNetCliToolchainBuilder.feeds CustomDotNetCliToolchainBuilder.AdditionalNuGetFeed(String, String) CustomDotNetCliToolchainBuilder.UseNuGetClearTag(Boolean) CustomDotNetCliToolchainBuilder.TargetFrameworkMoniker(String) CustomDotNetCliToolchainBuilder.DotNetCli(String) CustomDotNetCliToolchainBuilder.RuntimeIdentifier(String) CustomDotNetCliToolchainBuilder.RuntimeFrameworkVersion(String) CustomDotNetCliToolchainBuilder.DisplayName(String) CustomDotNetCliToolchainBuilder.UseTempFolderForRestore(Boolean) CustomDotNetCliToolchainBuilder.GetPortableRuntimeIdentifier() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Toolchains.CoreRt Assembly : BenchmarkDotNet.dll Syntax public class CoreRtToolchainBuilder : CustomDotNetCliToolchainBuilder Methods Create() Declaration public static CoreRtToolchainBuilder Create() Returns Type Description CoreRtToolchainBuilder ToToolchain() Declaration public override IToolchain ToToolchain() Returns Type Description IToolchain Overrides CustomDotNetCliToolchainBuilder.ToToolchain() UseCoreRtLocal(String) creates a CoreRT toolchain targeting local build for CoreRT Based on https://github.com/dotnet/corert/blob/7f902d4d8b1c3280e60f5e06c71951a60da173fb/Documentation/how-to-build-and-run-ilcompiler-in-console-shell-prompt.md#compiling-source-to-native-code-using-the-ilcompiler-you-built Declaration public CoreRtToolchainBuilder UseCoreRtLocal(string ilcPath) Parameters Type Name Description System.String ilcPath the ilcPath, an example: \"C:\\Projects\\corert\\bin\\Windows_NT.x64.Release\" Returns Type Description CoreRtToolchainBuilder UseCoreRtNuGet(String, String) creates a CoreRT toolchain targeting NuGet build of CoreRT Based on https://github.com/dotnet/corert/blob/7f902d4d8b1c3280e60f5e06c71951a60da173fb/samples/HelloWorld/README.md#add-corert-to-your-project Declaration public CoreRtToolchainBuilder UseCoreRtNuGet(string microsoftDotNetILCompilerVersion = \"1.0.0-alpha-*\", string nugetFeedUrl = \"https://dotnet.myget.org/F/dotnet-core/api/v3/index.json\") Parameters Type Name Description System.String microsoftDotNetILCompilerVersion the version of Microsoft.DotNet.ILCompiler which should be used. The default is: \"1.0.0-alpha-*\" System.String nugetFeedUrl url to NuGet CoreRT feed, The default is: \"https://dotnet.myget.org/F/dotnet-core/api/v3/index.json\" Returns Type Description CoreRtToolchainBuilder UseCppCodeGenerator() \"This approach uses transpiler to convert IL to C++, and then uses platform specific C++ compiler and linker for compiling/linking the application. The transpiler is a lot less mature than the RyuJIT path. If you came here to give CoreRT a try\" please don't use this option. Based on https://github.com/dotnet/corert/blob/7f902d4d8b1c3280e60f5e06c71951a60da173fb/Documentation/how-to-build-and-run-ilcompiler-in-console-shell-prompt.md#using-cpp-code-generator Declaration public CoreRtToolchainBuilder UseCppCodeGenerator() Returns Type Description CoreRtToolchainBuilder Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Toolchains.CoreRt.Generator.html": {
    "href": "api/BenchmarkDotNet.Toolchains.CoreRt.Generator.html",
    "title": "Class Generator | BenchmarkDotNet",
    "keywords": "Class Generator generates new csproj file for self-contained .NET Core RT app based on https://github.com/dotnet/corert/blob/7f902d4d8b1c3280e60f5e06c71951a60da173fb/Documentation/how-to-build-and-run-ilcompiler-in-console-shell-prompt.md#compiling-source-to-native-code-using-the-ilcompiler-you-built and https://github.com/dotnet/corert/tree/7f902d4d8b1c3280e60f5e06c71951a60da173fb/samples/HelloWorld#add-corert-to-your-project Inheritance System.Object GeneratorBase DotNetCliGenerator CsProjGenerator Generator Implements IGenerator Inherited Members CsProjGenerator.RuntimeFrameworkVersion CsProjGenerator.GetProjectFilePath(String) CsProjGenerator.GetRuntimeSettings(GcMode, IResolver) CsProjGenerator.GetProjectFilePath(Type, ILogger) DotNetCliGenerator.TargetFrameworkMoniker DotNetCliGenerator.PlatformProvider DotNetCliGenerator.Runtime DotNetCliGenerator.ExtraDependencies DotNetCliGenerator.Imports DotNetCliGenerator.CopyAllRequiredFiles(ArtifactsPaths) DotNetCliGenerator.SetPlatform(String, String) DotNetCliGenerator.SetCodeFileName(String, String) DotNetCliGenerator.SetTargetFrameworkMoniker(String, String) GeneratorBase.GenerateProject(BuildPartition, ILogger, String) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Toolchains.CoreRt Assembly : BenchmarkDotNet.dll Syntax public class Generator : CsProjGenerator, IGenerator Methods GenerateBuildScript(BuildPartition, ArtifactsPaths) Declaration protected override void GenerateBuildScript(BuildPartition buildPartition, ArtifactsPaths artifactsPaths) Parameters Type Name Description BuildPartition buildPartition ArtifactsPaths artifactsPaths Overrides DotNetCliGenerator.GenerateBuildScript(BuildPartition, ArtifactsPaths) GenerateNuGetConfig(ArtifactsPaths) Declaration protected override void GenerateNuGetConfig(ArtifactsPaths artifactsPaths) Parameters Type Name Description ArtifactsPaths artifactsPaths Overrides GeneratorBase.GenerateNuGetConfig(ArtifactsPaths) GenerateProject(BuildPartition, ArtifactsPaths, ILogger) Declaration protected override void GenerateProject(BuildPartition buildPartition, ArtifactsPaths artifactsPaths, ILogger logger) Parameters Type Name Description BuildPartition buildPartition ArtifactsPaths artifactsPaths ILogger logger Overrides CsProjGenerator.GenerateProject(BuildPartition, ArtifactsPaths, ILogger) GetArtifactsToCleanup(ArtifactsPaths) Declaration protected override string[] GetArtifactsToCleanup(ArtifactsPaths artifactsPaths) Parameters Type Name Description ArtifactsPaths artifactsPaths Returns Type Description System.String [] Overrides DotNetCliGenerator.GetArtifactsToCleanup(ArtifactsPaths) GetBinariesDirectoryPath(String, String) Declaration protected override string GetBinariesDirectoryPath(string buildArtifactsDirectoryPath, string configuration) Parameters Type Name Description System.String buildArtifactsDirectoryPath System.String configuration Returns Type Description System.String Overrides CsProjGenerator.GetBinariesDirectoryPath(String, String) GetBuildArtifactsDirectoryPath(BuildPartition, String) Declaration protected override string GetBuildArtifactsDirectoryPath(BuildPartition buildPartition, string programName) Parameters Type Name Description BuildPartition buildPartition System.String programName Returns Type Description System.String Overrides CsProjGenerator.GetBuildArtifactsDirectoryPath(BuildPartition, String) GetExecutableExtension() Declaration protected override string GetExecutableExtension() Returns Type Description System.String Overrides DotNetCliGenerator.GetExecutableExtension() GetPackagesDirectoryPath(String) Declaration protected override string GetPackagesDirectoryPath(string buildArtifactsDirectoryPath) Parameters Type Name Description System.String buildArtifactsDirectoryPath Returns Type Description System.String Overrides GeneratorBase.GetPackagesDirectoryPath(String) Implements IGenerator Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Toolchains.CoreRt.Publisher.html": {
    "href": "api/BenchmarkDotNet.Toolchains.CoreRt.Publisher.html",
    "title": "Class Publisher | BenchmarkDotNet",
    "keywords": "Class Publisher Inheritance System.Object DotNetCliPublisher Publisher Implements IBuilder Inherited Members DotNetCliPublisher.Build(GenerateResult, BuildPartition, ILogger) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Toolchains.CoreRt Assembly : BenchmarkDotNet.dll Syntax public class Publisher : DotNetCliPublisher, IBuilder Constructors Publisher(String, String, Boolean, String) Declaration public Publisher(string customDotNetCliPath, string ilcPath, bool useCppCodeGenerator, string runtimeIdentifier) Parameters Type Name Description System.String customDotNetCliPath System.String ilcPath System.Boolean useCppCodeGenerator System.String runtimeIdentifier Methods GetEnvironmentVariables() Declaration protected override IReadOnlyList<EnvironmentVariable> GetEnvironmentVariables() Returns Type Description System.Collections.Generic.IReadOnlyList < EnvironmentVariable > Overrides DotNetCliPublisher.GetEnvironmentVariables() GetExtraArguments(BuildPartition) Declaration protected override string GetExtraArguments(BuildPartition buildPartition) Parameters Type Name Description BuildPartition buildPartition Returns Type Description System.String Overrides DotNetCliPublisher.GetExtraArguments(BuildPartition) Implements IBuilder Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Order.DefaultOrderProvider.html": {
    "href": "api/BenchmarkDotNet.Order.DefaultOrderProvider.html",
    "title": "Class DefaultOrderProvider | BenchmarkDotNet",
    "keywords": "Class DefaultOrderProvider Inheritance System.Object DefaultOrderProvider Implements IOrderProvider Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Order Assembly : BenchmarkDotNet.dll Syntax public class DefaultOrderProvider : IOrderProvider Constructors DefaultOrderProvider(SummaryOrderPolicy, MethodOrderPolicy) Declaration public DefaultOrderProvider(SummaryOrderPolicy summaryOrderPolicy = SummaryOrderPolicy.Default, MethodOrderPolicy methodOrderPolicy = MethodOrderPolicy.Declared) Parameters Type Name Description SummaryOrderPolicy summaryOrderPolicy MethodOrderPolicy methodOrderPolicy Fields Instance Declaration public static readonly IOrderProvider Instance Field Value Type Description IOrderProvider Properties SeparateLogicalGroups Declaration public bool SeparateLogicalGroups { get; } Property Value Type Description System.Boolean Methods GetExecutionOrder(Benchmark[]) Declaration public virtual IEnumerable<Benchmark> GetExecutionOrder(Benchmark[] benchmarks) Parameters Type Name Description Benchmark [] benchmarks Returns Type Description System.Collections.Generic.IEnumerable < Benchmark > GetHighlightGroupKey(Benchmark) Declaration public string GetHighlightGroupKey(Benchmark benchmark) Parameters Type Name Description Benchmark benchmark Returns Type Description System.String GetLogicalGroupKey(IConfig, Benchmark[], Benchmark) Declaration public string GetLogicalGroupKey(IConfig config, Benchmark[] allBenchmarks, Benchmark benchmark) Parameters Type Name Description IConfig config Benchmark [] allBenchmarks Benchmark benchmark Returns Type Description System.String GetLogicalGroupOrder(IEnumerable<IGrouping<String, Benchmark>>) Declaration public virtual IEnumerable<IGrouping<string, Benchmark>> GetLogicalGroupOrder(IEnumerable<IGrouping<string, Benchmark>> logicalGroups) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.Linq.IGrouping < System.String , Benchmark >> logicalGroups Returns Type Description System.Collections.Generic.IEnumerable < System.Linq.IGrouping < System.String , Benchmark >> GetSummaryOrder(Benchmark[], Summary) Declaration public virtual IEnumerable<Benchmark> GetSummaryOrder(Benchmark[] benchmarks, Summary summary) Parameters Type Name Description Benchmark [] benchmarks Summary summary Returns Type Description System.Collections.Generic.IEnumerable < Benchmark > GetSummaryOrderForGroup(Benchmark[], Summary) Declaration protected virtual IEnumerable<Benchmark> GetSummaryOrderForGroup(Benchmark[] benchmarks, Summary summary) Parameters Type Name Description Benchmark [] benchmarks Summary summary Returns Type Description System.Collections.Generic.IEnumerable < Benchmark > Implements IOrderProvider Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Order.IOrderProvider.html": {
    "href": "api/BenchmarkDotNet.Order.IOrderProvider.html",
    "title": "Interface IOrderProvider | BenchmarkDotNet",
    "keywords": "Interface IOrderProvider Namespace : BenchmarkDotNet.Order Assembly : BenchmarkDotNet.dll Syntax public interface IOrderProvider Properties SeparateLogicalGroups Declaration bool SeparateLogicalGroups { get; } Property Value Type Description System.Boolean Methods GetExecutionOrder(Benchmark[]) Declaration IEnumerable<Benchmark> GetExecutionOrder(Benchmark[] benchmarks) Parameters Type Name Description Benchmark [] benchmarks Returns Type Description System.Collections.Generic.IEnumerable < Benchmark > GetHighlightGroupKey(Benchmark) Declaration string GetHighlightGroupKey(Benchmark benchmark) Parameters Type Name Description Benchmark benchmark Returns Type Description System.String GetLogicalGroupKey(IConfig, Benchmark[], Benchmark) Declaration string GetLogicalGroupKey(IConfig config, Benchmark[] allBenchmarks, Benchmark benchmark) Parameters Type Name Description IConfig config Benchmark [] allBenchmarks Benchmark benchmark Returns Type Description System.String GetLogicalGroupOrder(IEnumerable<IGrouping<String, Benchmark>>) Declaration IEnumerable<IGrouping<string, Benchmark>> GetLogicalGroupOrder(IEnumerable<IGrouping<string, Benchmark>> logicalGroups) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.Linq.IGrouping < System.String , Benchmark >> logicalGroups Returns Type Description System.Collections.Generic.IEnumerable < System.Linq.IGrouping < System.String , Benchmark >> GetSummaryOrder(Benchmark[], Summary) Declaration IEnumerable<Benchmark> GetSummaryOrder(Benchmark[] benchmarks, Summary summary) Parameters Type Name Description Benchmark [] benchmarks Summary summary Returns Type Description System.Collections.Generic.IEnumerable < Benchmark > Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Order.MethodOrderPolicy.html": {
    "href": "api/BenchmarkDotNet.Order.MethodOrderPolicy.html",
    "title": "Enum MethodOrderPolicy | BenchmarkDotNet",
    "keywords": "Enum MethodOrderPolicy Namespace : BenchmarkDotNet.Order Assembly : BenchmarkDotNet.dll Syntax public enum MethodOrderPolicy Fields Name Description Alphabetical Declared Extension Methods CommonExtensions.IsOneOf<MethodOrderPolicy>(MethodOrderPolicy[])"
  },
  "api/BenchmarkDotNet.Running.BenchmarkBuildInfo.html": {
    "href": "api/BenchmarkDotNet.Running.BenchmarkBuildInfo.html",
    "title": "Class BenchmarkBuildInfo | BenchmarkDotNet",
    "keywords": "Class BenchmarkBuildInfo Inheritance System.Object BenchmarkBuildInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Running Assembly : BenchmarkDotNet.dll Syntax public class BenchmarkBuildInfo Constructors BenchmarkBuildInfo(Benchmark, ReadOnlyConfig, Int32) Declaration public BenchmarkBuildInfo(Benchmark benchmark, ReadOnlyConfig config, int id) Parameters Type Name Description Benchmark benchmark ReadOnlyConfig config System.Int32 id Properties Benchmark Declaration public Benchmark Benchmark { get; } Property Value Type Description Benchmark Config Declaration public ReadOnlyConfig Config { get; } Property Value Type Description ReadOnlyConfig Id Declaration public BenchmarkId Id { get; } Property Value Type Description BenchmarkId Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Running.BenchmarkConverter.html": {
    "href": "api/BenchmarkDotNet.Running.BenchmarkConverter.html",
    "title": "Class BenchmarkConverter | BenchmarkDotNet",
    "keywords": "Class BenchmarkConverter Inheritance System.Object BenchmarkConverter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Running Assembly : BenchmarkDotNet.dll Syntax public static class BenchmarkConverter Methods GetFullConfig(Type, IConfig) Declaration public static ReadOnlyConfig GetFullConfig(Type type, IConfig config) Parameters Type Name Description System.Type type IConfig config Returns Type Description ReadOnlyConfig MethodsToBenchmarks(Type, MethodInfo[], IConfig) Declaration public static BenchmarkRunInfo MethodsToBenchmarks(Type containingType, MethodInfo[] benchmarkMethods, IConfig config = null) Parameters Type Name Description System.Type containingType System.Reflection.MethodInfo [] benchmarkMethods IConfig config Returns Type Description BenchmarkRunInfo SourceToBenchmarks(String, IConfig) Declaration public static BenchmarkRunInfo[] SourceToBenchmarks(string source, IConfig config = null) Parameters Type Name Description System.String source IConfig config Returns Type Description BenchmarkRunInfo [] TypeToBenchmarks(Type, IConfig) Declaration public static BenchmarkRunInfo TypeToBenchmarks(Type type, IConfig config = null) Parameters Type Name Description System.Type type IConfig config Returns Type Description BenchmarkRunInfo UrlToBenchmarks(String, IConfig) Declaration public static BenchmarkRunInfo[] UrlToBenchmarks(string url, IConfig config = null) Parameters Type Name Description System.String url IConfig config Returns Type Description BenchmarkRunInfo []"
  },
  "api/BenchmarkDotNet.Running.BenchmarkId.html": {
    "href": "api/BenchmarkDotNet.Running.BenchmarkId.html",
    "title": "Struct BenchmarkId | BenchmarkDotNet",
    "keywords": "Struct BenchmarkId represents an internal entity used to identify a benchmark within an executable with multiple benchmarks Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Running Assembly : BenchmarkDotNet.dll Syntax public struct BenchmarkId Constructors BenchmarkId(Int32) Declaration public BenchmarkId(int value) Parameters Type Name Description System.Int32 value Properties Value Declaration public int Value { get; } Property Value Type Description System.Int32 Methods Equals(BenchmarkId) Declaration public bool Equals(BenchmarkId other) Parameters Type Name Description BenchmarkId other Returns Type Description System.Boolean Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() ToArgument() Declaration public string ToArgument() Returns Type Description System.String ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Running.BenchmarkPartitioner.html": {
    "href": "api/BenchmarkDotNet.Running.BenchmarkPartitioner.html",
    "title": "Class BenchmarkPartitioner | BenchmarkDotNet",
    "keywords": "Class BenchmarkPartitioner Inheritance System.Object BenchmarkPartitioner Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Running Assembly : BenchmarkDotNet.dll Syntax public class BenchmarkPartitioner Methods CreateForBuild(BenchmarkRunInfo[], IResolver) Declaration public static BuildPartition[] CreateForBuild(BenchmarkRunInfo[] supportedBenchmarks, IResolver resolver) Parameters Type Name Description BenchmarkRunInfo [] supportedBenchmarks IResolver resolver Returns Type Description BuildPartition [] Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Diagnosers.PmcStats.html": {
    "href": "api/BenchmarkDotNet.Diagnosers.PmcStats.html",
    "title": "Class PmcStats | BenchmarkDotNet",
    "keywords": "Class PmcStats Inheritance System.Object PmcStats Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Diagnosers Assembly : BenchmarkDotNet.dll Syntax public class PmcStats Constructors PmcStats() Declaration public PmcStats() PmcStats(IReadOnlyCollection<HardwareCounter>, Func<HardwareCounter, PreciseMachineCounter>) Declaration public PmcStats(IReadOnlyCollection<HardwareCounter> hardwareCounters, Func<HardwareCounter, PreciseMachineCounter> factory) Parameters Type Name Description System.Collections.Generic.IReadOnlyCollection < HardwareCounter > hardwareCounters System.Func < HardwareCounter , PreciseMachineCounter > factory Properties Counters Declaration public IReadOnlyDictionary<HardwareCounter, PreciseMachineCounter> Counters { get; } Property Value Type Description System.Collections.Generic.IReadOnlyDictionary < HardwareCounter , PreciseMachineCounter > TotalOperations Declaration public long TotalOperations { get; set; } Property Value Type Description System.Int64 Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Engines.IEngine.html": {
    "href": "api/BenchmarkDotNet.Engines.IEngine.html",
    "title": "Interface IEngine | BenchmarkDotNet",
    "keywords": "Interface IEngine Inherited Members System.IDisposable.Dispose() Namespace : BenchmarkDotNet.Engines Assembly : BenchmarkDotNet.dll Syntax public interface IEngine : IDisposable Properties GlobalCleanupAction Declaration Action GlobalCleanupAction { get; } Property Value Type Description System.Action GlobalSetupAction Declaration Action GlobalSetupAction { get; } Property Value Type Description System.Action Host Declaration IHost Host { get; } Property Value Type Description IHost IdleAction Declaration Action<long> IdleAction { get; } Property Value Type Description System.Action < System.Int64 > MainAction Declaration Action<long> MainAction { get; } Property Value Type Description System.Action < System.Int64 > OperationsPerInvoke Declaration long OperationsPerInvoke { get; } Property Value Type Description System.Int64 Resolver Declaration IResolver Resolver { get; } Property Value Type Description IResolver TargetJob Declaration Job TargetJob { get; } Property Value Type Description Job Methods Run() Declaration RunResults Run() Returns Type Description RunResults RunIteration(IterationData) Declaration Measurement RunIteration(IterationData data) Parameters Type Name Description IterationData data Returns Type Description Measurement WriteLine() Declaration void WriteLine() WriteLine(String) Declaration void WriteLine(string line) Parameters Type Name Description System.String line Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Engines.IEngineFactory.html": {
    "href": "api/BenchmarkDotNet.Engines.IEngineFactory.html",
    "title": "Interface IEngineFactory | BenchmarkDotNet",
    "keywords": "Interface IEngineFactory Namespace : BenchmarkDotNet.Engines Assembly : BenchmarkDotNet.dll Syntax public interface IEngineFactory Methods CreateReadyToRun(EngineParameters) Declaration IEngine CreateReadyToRun(EngineParameters engineParameters) Parameters Type Name Description EngineParameters engineParameters Returns Type Description IEngine Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Environments.ProcessorBrandStringHelper.html": {
    "href": "api/BenchmarkDotNet.Environments.ProcessorBrandStringHelper.html",
    "title": "Class ProcessorBrandStringHelper | BenchmarkDotNet",
    "keywords": "Class ProcessorBrandStringHelper Inheritance System.Object ProcessorBrandStringHelper Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Environments Assembly : BenchmarkDotNet.dll Syntax public static class ProcessorBrandStringHelper Methods Prettify(String) Transform a processor brand string to a nice form for summary. Declaration public static string Prettify(string processorName) Parameters Type Name Description System.String processorName Original processor brand string Returns Type Description System.String Prettified version"
  },
  "api/BenchmarkDotNet.Environments.Runtime.html": {
    "href": "api/BenchmarkDotNet.Environments.Runtime.html",
    "title": "Class Runtime | BenchmarkDotNet",
    "keywords": "Class Runtime Inheritance System.Object Runtime ClrRuntime CoreRtRuntime CoreRuntime MonoRuntime Implements System.IEquatable < Runtime > Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Environments Assembly : BenchmarkDotNet.dll Syntax public abstract class Runtime : IEquatable<Runtime> Constructors Runtime(String) Declaration protected Runtime(string name) Parameters Type Name Description System.String name Fields Clr Full .NET Framework (Windows only) Declaration public static readonly Runtime Clr Field Value Type Description Runtime Core Cross-platform Core CLR runtime See also: https://docs.microsoft.com/en-us/dotnet/ Declaration public static readonly Runtime Core Field Value Type Description Runtime CoreRT Cross-platform .NET Core runtime optimized for ahead of time compilation See also: https://github.com/dotnet/corert Declaration public static readonly Runtime CoreRT Field Value Type Description Runtime Mono Mono See also: http://www.mono-project.com/ Declaration public static readonly Runtime Mono Field Value Type Description Runtime Properties Name Declaration public string Name { get; } Property Value Type Description System.String Methods Equals(Runtime) Declaration public bool Equals(Runtime other) Parameters Type Name Description Runtime other Returns Type Description System.Boolean Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements System.IEquatable<T> Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Exporters.AsciiDocExporter.html": {
    "href": "api/BenchmarkDotNet.Exporters.AsciiDocExporter.html",
    "title": "Class AsciiDocExporter | BenchmarkDotNet",
    "keywords": "Class AsciiDocExporter Inheritance System.Object ExporterBase AsciiDocExporter Implements IExporter Inherited Members ExporterBase.Name ExporterBase.FileNameSuffix ExporterBase.FileCaption ExporterBase.ExportToFiles(Summary, ILogger) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Exporters Assembly : BenchmarkDotNet.dll Syntax public class AsciiDocExporter : ExporterBase, IExporter Fields Default Declaration public static readonly IExporter Default Field Value Type Description IExporter Properties FileExtension Declaration protected override string FileExtension { get; } Property Value Type Description System.String Overrides ExporterBase.FileExtension Methods ExportToLog(Summary, ILogger) Declaration public override void ExportToLog(Summary summary, ILogger logger) Parameters Type Name Description Summary summary ILogger logger Overrides ExporterBase.ExportToLog(Summary, ILogger) Implements IExporter Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Extensions.ConfigurationExtensions.html": {
    "href": "api/BenchmarkDotNet.Extensions.ConfigurationExtensions.html",
    "title": "Class ConfigurationExtensions | BenchmarkDotNet",
    "keywords": "Class ConfigurationExtensions Inheritance System.Object ConfigurationExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Extensions Assembly : BenchmarkDotNet.dll Syntax public static class ConfigurationExtensions Methods ToConfig(Jit) Declaration public static string ToConfig(this Jit jit) Parameters Type Name Description Jit jit Returns Type Description System.String ToConfig(Platform) Declaration public static string ToConfig(this Platform platform) Parameters Type Name Description Platform platform Returns Type Description System.String"
  },
  "api/BenchmarkDotNet.Extensions.ReportExtensions.html": {
    "href": "api/BenchmarkDotNet.Extensions.ReportExtensions.html",
    "title": "Class ReportExtensions | BenchmarkDotNet",
    "keywords": "Class ReportExtensions Inheritance System.Object ReportExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Extensions Assembly : BenchmarkDotNet.dll Syntax public static class ReportExtensions Methods GetReportFor<T>(Summary, Expression<Action<T>>) Declaration public static BenchmarkReport GetReportFor<T>(this Summary summary, Expression<Action<T>> actionExp) Parameters Type Name Description Summary summary System.Linq.Expressions.Expression < System.Action <T>> actionExp Returns Type Description BenchmarkReport Type Parameters Name Description T GetRunsFor<T>(Summary, Expression<Action<T>>) Declaration public static IList<Measurement> GetRunsFor<T>(this Summary summary, Expression<Action<T>> actionExp) Parameters Type Name Description Summary summary System.Linq.Expressions.Expression < System.Action <T>> actionExp Returns Type Description System.Collections.Generic.IList < Measurement > Type Parameters Name Description T GetStatistics(IEnumerable<Measurement>) Declaration public static Statistics GetStatistics(this IEnumerable<Measurement> runs) Parameters Type Name Description System.Collections.Generic.IEnumerable < Measurement > runs Returns Type Description Statistics GetStatistics(IReadOnlyCollection<Measurement>) Declaration public static Statistics GetStatistics(this IReadOnlyCollection<Measurement> runs) Parameters Type Name Description System.Collections.Generic.IReadOnlyCollection < Measurement > runs Returns Type Description Statistics"
  },
  "api/BenchmarkDotNet.Extensions.StatisticsExtensions.html": {
    "href": "api/BenchmarkDotNet.Extensions.StatisticsExtensions.html",
    "title": "Class StatisticsExtensions | BenchmarkDotNet",
    "keywords": "Class StatisticsExtensions Inheritance System.Object StatisticsExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Extensions Assembly : BenchmarkDotNet.dll Syntax public static class StatisticsExtensions Methods ToStr(Statistics) Declaration public static string ToStr(this Statistics s) Parameters Type Name Description Statistics s Returns Type Description System.String ToTimeStr(Statistics, TimeUnit, Boolean) Declaration public static string ToTimeStr(this Statistics s, TimeUnit unit = null, bool calcHistogram = false) Parameters Type Name Description Statistics s TimeUnit unit System.Boolean calcHistogram Returns Type Description System.String"
  },
  "api/BenchmarkDotNet.Extensions.StringAndTextExtensions.html": {
    "href": "api/BenchmarkDotNet.Extensions.StringAndTextExtensions.html",
    "title": "Class StringAndTextExtensions | BenchmarkDotNet",
    "keywords": "Class StringAndTextExtensions Inheritance System.Object StringAndTextExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Extensions Assembly : BenchmarkDotNet.dll Syntax public static class StringAndTextExtensions"
  },
  "api/BenchmarkDotNet.Attributes.Exporters.HtmlExporterAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Exporters.HtmlExporterAttribute.html",
    "title": "Class HtmlExporterAttribute | BenchmarkDotNet",
    "keywords": "Class HtmlExporterAttribute Inheritance System.Object System.Attribute ExporterConfigBaseAttribute HtmlExporterAttribute Implements IConfigSource Inherited Members ExporterConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Exporters Assembly : BenchmarkDotNet.dll Syntax public class HtmlExporterAttribute : ExporterConfigBaseAttribute, IConfigSource Constructors HtmlExporterAttribute() Declaration public HtmlExporterAttribute() Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Exporters.MarkdownExporterAttribute.StackOverflow.html": {
    "href": "api/BenchmarkDotNet.Attributes.Exporters.MarkdownExporterAttribute.StackOverflow.html",
    "title": "Class MarkdownExporterAttribute.StackOverflow | BenchmarkDotNet",
    "keywords": "Class MarkdownExporterAttribute.StackOverflow Inheritance System.Object System.Attribute ExporterConfigBaseAttribute MarkdownExporterAttribute.StackOverflow Implements IConfigSource Inherited Members ExporterConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Exporters Assembly : BenchmarkDotNet.dll Syntax public class StackOverflow : ExporterConfigBaseAttribute, IConfigSource Constructors StackOverflow() Declaration public StackOverflow() Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Exporters.XmlExporterAttribute.FullCompressed.html": {
    "href": "api/BenchmarkDotNet.Attributes.Exporters.XmlExporterAttribute.FullCompressed.html",
    "title": "Class XmlExporterAttribute.FullCompressed | BenchmarkDotNet",
    "keywords": "Class XmlExporterAttribute.FullCompressed Inheritance System.Object System.Attribute ExporterConfigBaseAttribute XmlExporterAttribute XmlExporterAttribute.FullCompressed Implements IConfigSource Inherited Members ExporterConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Exporters Assembly : BenchmarkDotNet.dll Syntax public class FullCompressed : XmlExporterAttribute, IConfigSource Constructors FullCompressed() Declaration public FullCompressed() Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.GlobalCleanupAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.GlobalCleanupAttribute.html",
    "title": "Class GlobalCleanupAttribute | BenchmarkDotNet",
    "keywords": "Class GlobalCleanupAttribute Marks method to be executed after all benchmark iterations. It's going to be executed only once, after all benchmark runs. Inheritance System.Object System.Attribute TargetedAttribute GlobalCleanupAttribute CleanupAttribute Inherited Members TargetedAttribute.Target System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes Assembly : BenchmarkDotNet.dll Syntax [AttributeUsage(AttributeTargets.Method)] public class GlobalCleanupAttribute : TargetedAttribute Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.GlobalSetupAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.GlobalSetupAttribute.html",
    "title": "Class GlobalSetupAttribute | BenchmarkDotNet",
    "keywords": "Class GlobalSetupAttribute Marks method to be executed before all benchmark iterations. It's going to be executed only once, just before warm up. Inheritance System.Object System.Attribute TargetedAttribute GlobalSetupAttribute SetupAttribute Inherited Members TargetedAttribute.Target System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes Assembly : BenchmarkDotNet.dll Syntax [AttributeUsage(AttributeTargets.Method)] public class GlobalSetupAttribute : TargetedAttribute Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Jobs.LegacyJitX64JobAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Jobs.LegacyJitX64JobAttribute.html",
    "title": "Class LegacyJitX64JobAttribute | BenchmarkDotNet",
    "keywords": "Class LegacyJitX64JobAttribute Inheritance System.Object System.Attribute JobConfigBaseAttribute LegacyJitX64JobAttribute Implements IConfigSource Inherited Members JobConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Jobs Assembly : BenchmarkDotNet.dll Syntax public class LegacyJitX64JobAttribute : JobConfigBaseAttribute, IConfigSource Constructors LegacyJitX64JobAttribute() Declaration public LegacyJitX64JobAttribute() Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Jobs.LegacyJitX86JobAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Jobs.LegacyJitX86JobAttribute.html",
    "title": "Class LegacyJitX86JobAttribute | BenchmarkDotNet",
    "keywords": "Class LegacyJitX86JobAttribute Inheritance System.Object System.Attribute JobConfigBaseAttribute LegacyJitX86JobAttribute Implements IConfigSource Inherited Members JobConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Jobs Assembly : BenchmarkDotNet.dll Syntax public class LegacyJitX86JobAttribute : JobConfigBaseAttribute, IConfigSource Constructors LegacyJitX86JobAttribute() Declaration public LegacyJitX86JobAttribute() Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.SetupAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.SetupAttribute.html",
    "title": "Class SetupAttribute | BenchmarkDotNet",
    "keywords": "Class SetupAttribute Marks method to be executed before all benchmark iterations. It's going to be executed only once, just before warm up. Inheritance System.Object System.Attribute TargetedAttribute GlobalSetupAttribute SetupAttribute Inherited Members TargetedAttribute.Target System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes Assembly : BenchmarkDotNet.dll Syntax [AttributeUsage(AttributeTargets.Method)] [Obsolete(\"Use GlobalSetupAttribute\")] public class SetupAttribute : GlobalSetupAttribute Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.TargetedAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.TargetedAttribute.html",
    "title": "Class TargetedAttribute | BenchmarkDotNet",
    "keywords": "Class TargetedAttribute Base class for attributes that are targeted at one method Inheritance System.Object System.Attribute TargetedAttribute GlobalCleanupAttribute GlobalSetupAttribute IterationCleanupAttribute IterationSetupAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes Assembly : BenchmarkDotNet.dll Syntax public abstract class TargetedAttribute : Attribute Properties Target Target method for attribute Declaration public string Target { get; set; } Property Value Type Description System.String Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Characteristics.IResolver.html": {
    "href": "api/BenchmarkDotNet.Characteristics.IResolver.html",
    "title": "Interface IResolver | BenchmarkDotNet",
    "keywords": "Interface IResolver An entity which can resolve default values of Characteristic<T> . Namespace : BenchmarkDotNet.Characteristics Assembly : BenchmarkDotNet.dll Syntax public interface IResolver Methods CanResolve(Characteristic) Declaration bool CanResolve(Characteristic characteristic) Parameters Type Name Description Characteristic characteristic Returns Type Description System.Boolean Resolve(CharacteristicObject, Characteristic) Declaration object Resolve(CharacteristicObject obj, Characteristic characteristic) Parameters Type Name Description CharacteristicObject obj Characteristic characteristic Returns Type Description System.Object Resolve<T>(CharacteristicObject, Characteristic<T>) Declaration T Resolve<T>(CharacteristicObject obj, Characteristic<T> characteristic) Parameters Type Name Description CharacteristicObject obj Characteristic <T> characteristic Returns Type Description T Type Parameters Name Description T Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Jobs.DryCoreRtJobAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Jobs.DryCoreRtJobAttribute.html",
    "title": "Class DryCoreRtJobAttribute | BenchmarkDotNet",
    "keywords": "Class DryCoreRtJobAttribute Inheritance System.Object System.Attribute JobConfigBaseAttribute DryCoreRtJobAttribute Implements IConfigSource Inherited Members JobConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Jobs Assembly : BenchmarkDotNet.dll Syntax public class DryCoreRtJobAttribute : JobConfigBaseAttribute, IConfigSource Constructors DryCoreRtJobAttribute() Declaration public DryCoreRtJobAttribute() Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Validators.ExecutionValidatorAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Validators.ExecutionValidatorAttribute.html",
    "title": "Class ExecutionValidatorAttribute | BenchmarkDotNet",
    "keywords": "Class ExecutionValidatorAttribute Inheritance System.Object System.Attribute ValidatorConfigBaseAttribute ExecutionValidatorAttribute Implements IConfigSource Inherited Members ValidatorConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Validators Assembly : BenchmarkDotNet.dll Syntax public class ExecutionValidatorAttribute : ValidatorConfigBaseAttribute, IConfigSource Constructors ExecutionValidatorAttribute() Declaration public ExecutionValidatorAttribute() ExecutionValidatorAttribute(Boolean) Declaration public ExecutionValidatorAttribute(bool failOnError) Parameters Type Name Description System.Boolean failOnError Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Validators.ReturnValueValidatorAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Validators.ReturnValueValidatorAttribute.html",
    "title": "Class ReturnValueValidatorAttribute | BenchmarkDotNet",
    "keywords": "Class ReturnValueValidatorAttribute Inheritance System.Object System.Attribute ValidatorConfigBaseAttribute ReturnValueValidatorAttribute Implements IConfigSource Inherited Members ValidatorConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Validators Assembly : BenchmarkDotNet.dll Syntax public class ReturnValueValidatorAttribute : ValidatorConfigBaseAttribute, IConfigSource Constructors ReturnValueValidatorAttribute() Declaration public ReturnValueValidatorAttribute() ReturnValueValidatorAttribute(Boolean) Declaration public ReturnValueValidatorAttribute(bool failOnError) Parameters Type Name Description System.Boolean failOnError Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Code.ArrayParam-1.html": {
    "href": "api/BenchmarkDotNet.Code.ArrayParam-1.html",
    "title": "Class ArrayParam<T> | BenchmarkDotNet",
    "keywords": "Class ArrayParam<T> Inheritance System.Object ArrayParam<T> Implements IParam Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Code Assembly : BenchmarkDotNet.dll Syntax public class ArrayParam<T> : IParam Type Parameters Name Description T Properties DisplayText Declaration public string DisplayText { get; } Property Value Type Description System.String Value Declaration public object Value { get; } Property Value Type Description System.Object Methods ForComplexTypes(T[], Func<T, String>) for types where calling .ToString() will be NOT enough to re-create them in auto-generated source code file Declaration public static ArrayParam<T> ForComplexTypes(T[] array, Func<T, string> toSourceCode) Parameters Type Name Description T[] array the array System.Func <T, System.String > toSourceCode method which tranforms an item of type T to it's C# representation example: point => $\"new Point2d({point.X}, {point.Y})\" Returns Type Description ArrayParam <T> ForPrimitives(T[]) for types where calling .ToString() will be enough to re-create them in auto-generated source code file (integers, strings and other primitives) Declaration public static ArrayParam<T> ForPrimitives(T[] array) Parameters Type Name Description T[] array Returns Type Description ArrayParam <T> ToSourceCode() Declaration public string ToSourceCode() Returns Type Description System.String Implements IParam Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Columns.LogicalGroupColumn.html": {
    "href": "api/BenchmarkDotNet.Columns.LogicalGroupColumn.html",
    "title": "Class LogicalGroupColumn | BenchmarkDotNet",
    "keywords": "Class LogicalGroupColumn Inheritance System.Object LogicalGroupColumn Implements IColumn Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Columns Assembly : BenchmarkDotNet.dll Syntax public class LogicalGroupColumn : IColumn Fields Default Declaration public static readonly IColumn Default Field Value Type Description IColumn Properties AlwaysShow Declaration public bool AlwaysShow { get; } Property Value Type Description System.Boolean Category Declaration public ColumnCategory Category { get; } Property Value Type Description ColumnCategory ColumnName Declaration public string ColumnName { get; } Property Value Type Description System.String Id Declaration public string Id { get; } Property Value Type Description System.String IsNumeric Declaration public bool IsNumeric { get; } Property Value Type Description System.Boolean Legend Declaration public string Legend { get; } Property Value Type Description System.String PriorityInCategory Declaration public int PriorityInCategory { get; } Property Value Type Description System.Int32 UnitType Declaration public UnitType UnitType { get; } Property Value Type Description UnitType Methods GetValue(Summary, Benchmark) Declaration public string GetValue(Summary summary, Benchmark benchmark) Parameters Type Name Description Summary summary Benchmark benchmark Returns Type Description System.String GetValue(Summary, Benchmark, ISummaryStyle) Declaration public string GetValue(Summary summary, Benchmark benchmark, ISummaryStyle style) Parameters Type Name Description Summary summary Benchmark benchmark ISummaryStyle style Returns Type Description System.String IsAvailable(Summary) Declaration public bool IsAvailable(Summary summary) Parameters Type Name Description Summary summary Returns Type Description System.Boolean IsDefault(Summary, Benchmark) Declaration public bool IsDefault(Summary summary, Benchmark benchmark) Parameters Type Name Description Summary summary Benchmark benchmark Returns Type Description System.Boolean Implements IColumn Extension Methods ColumnExtensions.ToProvider(IColumn) CommonExtensions.GetColumnTitle(IColumn, ISummaryStyle) CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Columns.ParamColumn.html": {
    "href": "api/BenchmarkDotNet.Columns.ParamColumn.html",
    "title": "Class ParamColumn | BenchmarkDotNet",
    "keywords": "Class ParamColumn Inheritance System.Object ParamColumn Implements IColumn Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Columns Assembly : BenchmarkDotNet.dll Syntax public class ParamColumn : IColumn Constructors ParamColumn(String) Declaration public ParamColumn(string columnName) Parameters Type Name Description System.String columnName Properties AlwaysShow Declaration public bool AlwaysShow { get; } Property Value Type Description System.Boolean Category Declaration public ColumnCategory Category { get; } Property Value Type Description ColumnCategory ColumnName Declaration public string ColumnName { get; } Property Value Type Description System.String Id Declaration public string Id { get; } Property Value Type Description System.String IsNumeric Declaration public bool IsNumeric { get; } Property Value Type Description System.Boolean Legend Declaration public string Legend { get; } Property Value Type Description System.String PriorityInCategory Declaration public int PriorityInCategory { get; } Property Value Type Description System.Int32 UnitType Declaration public UnitType UnitType { get; } Property Value Type Description UnitType Methods GetValue(Summary, Benchmark) Declaration public string GetValue(Summary summary, Benchmark benchmark) Parameters Type Name Description Summary summary Benchmark benchmark Returns Type Description System.String GetValue(Summary, Benchmark, ISummaryStyle) Declaration public string GetValue(Summary summary, Benchmark benchmark, ISummaryStyle style) Parameters Type Name Description Summary summary Benchmark benchmark ISummaryStyle style Returns Type Description System.String IsAvailable(Summary) Declaration public bool IsAvailable(Summary summary) Parameters Type Name Description Summary summary Returns Type Description System.Boolean IsDefault(Summary, Benchmark) Declaration public bool IsDefault(Summary summary, Benchmark benchmark) Parameters Type Name Description Summary summary Benchmark benchmark Returns Type Description System.Boolean ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements IColumn Extension Methods ColumnExtensions.ToProvider(IColumn) CommonExtensions.GetColumnTitle(IColumn, ISummaryStyle) CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Configs.IConfig.html": {
    "href": "api/BenchmarkDotNet.Configs.IConfig.html",
    "title": "Interface IConfig | BenchmarkDotNet",
    "keywords": "Interface IConfig Namespace : BenchmarkDotNet.Configs Assembly : BenchmarkDotNet.dll Syntax public interface IConfig Properties ArtifactsPath the default value is \"./BenchmarkDotNet.Artifacts\" Declaration string ArtifactsPath { get; } Property Value Type Description System.String KeepBenchmarkFiles determines if all auto-generated files should be kept or removed after running benchmarks Declaration bool KeepBenchmarkFiles { get; } Property Value Type Description System.Boolean UnionRule Declaration ConfigUnionRule UnionRule { get; } Property Value Type Description ConfigUnionRule Methods GetAnalysers() Declaration IEnumerable<IAnalyser> GetAnalysers() Returns Type Description System.Collections.Generic.IEnumerable < IAnalyser > GetColumnProviders() Declaration IEnumerable<IColumnProvider> GetColumnProviders() Returns Type Description System.Collections.Generic.IEnumerable < IColumnProvider > GetDiagnosers() Declaration IEnumerable<IDiagnoser> GetDiagnosers() Returns Type Description System.Collections.Generic.IEnumerable < IDiagnoser > GetExporters() Declaration IEnumerable<IExporter> GetExporters() Returns Type Description System.Collections.Generic.IEnumerable < IExporter > GetFilters() Declaration IEnumerable<IFilter> GetFilters() Returns Type Description System.Collections.Generic.IEnumerable < IFilter > GetHardwareCounters() Declaration IEnumerable<HardwareCounter> GetHardwareCounters() Returns Type Description System.Collections.Generic.IEnumerable < HardwareCounter > GetJobs() Declaration IEnumerable<Job> GetJobs() Returns Type Description System.Collections.Generic.IEnumerable < Job > GetLoggers() Declaration IEnumerable<ILogger> GetLoggers() Returns Type Description System.Collections.Generic.IEnumerable < ILogger > GetLogicalGroupRules() Declaration IEnumerable<BenchmarkLogicalGroupRule> GetLogicalGroupRules() Returns Type Description System.Collections.Generic.IEnumerable < BenchmarkLogicalGroupRule > GetOrderProvider() Declaration IOrderProvider GetOrderProvider() Returns Type Description IOrderProvider GetSummaryStyle() Declaration ISummaryStyle GetSummaryStyle() Returns Type Description ISummaryStyle GetValidators() Declaration IEnumerable<IValidator> GetValidators() Returns Type Description System.Collections.Generic.IEnumerable < IValidator > Extension Methods ConfigExtensions.GetCompositeLogger(IConfig) ConfigExtensions.GetCompositeExporter(IConfig) ConfigExtensions.GetCompositeDiagnoser(IConfig) ConfigExtensions.GetCompositeDiagnoser(IConfig, Benchmark, RunMode) ConfigExtensions.GetCompositeAnalyser(IConfig) ConfigExtensions.GetCompositeValidator(IConfig) ConfigExtensions.With(IConfig, IColumn[]) ConfigExtensions.With(IConfig, IColumnProvider[]) ConfigExtensions.With(IConfig, ILogger[]) ConfigExtensions.With(IConfig, IExporter[]) ConfigExtensions.With(IConfig, IDiagnoser[]) ConfigExtensions.With(IConfig, IAnalyser[]) ConfigExtensions.With(IConfig, IValidator[]) ConfigExtensions.With(IConfig, Job[]) ConfigExtensions.With(IConfig, IOrderProvider) ConfigExtensions.With(IConfig, HardwareCounter[]) ConfigExtensions.With(IConfig, IFilter[]) ConfigExtensions.KeepBenchmarkFiles(IConfig, Boolean) ConfigExtensions.RemoveBenchmarkFiles(IConfig) ConfigExtensions.WithArtifactsPath(IConfig, String) ConfigExtensions.With(IConfig, BenchmarkLogicalGroupRule[]) ConfigExtensions.AsReadOnly(IConfig) ConfigExtensions.HasMemoryDiagnoser(IConfig) CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Configs.IConfigSource.html": {
    "href": "api/BenchmarkDotNet.Configs.IConfigSource.html",
    "title": "Interface IConfigSource | BenchmarkDotNet",
    "keywords": "Interface IConfigSource Namespace : BenchmarkDotNet.Configs Assembly : BenchmarkDotNet.dll Syntax public interface IConfigSource Properties Config Declaration IConfig Config { get; } Property Value Type Description IConfig Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Loggers.AccumulationLogger.html": {
    "href": "api/BenchmarkDotNet.Loggers.AccumulationLogger.html",
    "title": "Class AccumulationLogger | BenchmarkDotNet",
    "keywords": "Class AccumulationLogger Inheritance System.Object AccumulationLogger Implements ILogger Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Loggers Assembly : BenchmarkDotNet.dll Syntax public class AccumulationLogger : ILogger Methods ClearLog() Declaration public void ClearLog() GetLog() Declaration public string GetLog() Returns Type Description System.String Write(LogKind, String) Declaration public virtual void Write(LogKind logKind, string text) Parameters Type Name Description LogKind logKind System.String text WriteLine() Declaration public virtual void WriteLine() WriteLine(LogKind, String) Declaration public virtual void WriteLine(LogKind logKind, string text) Parameters Type Name Description LogKind logKind System.String text Implements ILogger Extension Methods CommonExtensions.IsOneOf<T>(T, T[]) LoggerExtensions.WriteLine(ILogger, String) LoggerExtensions.WriteLineHelp(ILogger, String) LoggerExtensions.WriteLineHeader(ILogger, String) LoggerExtensions.WriteLineResult(ILogger, String) LoggerExtensions.WriteLineStatistic(ILogger, String) LoggerExtensions.WriteLineInfo(ILogger, String) LoggerExtensions.WriteLineError(ILogger, String) LoggerExtensions.WriteLineHint(ILogger, String) LoggerExtensions.Write(ILogger, String) LoggerExtensions.WriteHelp(ILogger, String) LoggerExtensions.WriteHeader(ILogger, String) LoggerExtensions.WriteResult(ILogger, String) LoggerExtensions.WriteStatistic(ILogger, String) LoggerExtensions.WriteInfo(ILogger, String) LoggerExtensions.WriteError(ILogger, String) LoggerExtensions.WriteHint(ILogger, String)"
  },
  "api/BenchmarkDotNet.Loggers.CompositeLogger.html": {
    "href": "api/BenchmarkDotNet.Loggers.CompositeLogger.html",
    "title": "Class CompositeLogger | BenchmarkDotNet",
    "keywords": "Class CompositeLogger Inheritance System.Object CompositeLogger Implements ILogger Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Loggers Assembly : BenchmarkDotNet.dll Syntax public class CompositeLogger : ILogger Constructors CompositeLogger(ILogger[]) Declaration public CompositeLogger(params ILogger[] loggers) Parameters Type Name Description ILogger [] loggers Methods Write(LogKind, String) Declaration public void Write(LogKind logKind, string text) Parameters Type Name Description LogKind logKind System.String text WriteLine() Declaration public void WriteLine() WriteLine(LogKind, String) Declaration public void WriteLine(LogKind logKind, string text) Parameters Type Name Description LogKind logKind System.String text Implements ILogger Extension Methods CommonExtensions.IsOneOf<T>(T, T[]) LoggerExtensions.WriteLine(ILogger, String) LoggerExtensions.WriteLineHelp(ILogger, String) LoggerExtensions.WriteLineHeader(ILogger, String) LoggerExtensions.WriteLineResult(ILogger, String) LoggerExtensions.WriteLineStatistic(ILogger, String) LoggerExtensions.WriteLineInfo(ILogger, String) LoggerExtensions.WriteLineError(ILogger, String) LoggerExtensions.WriteLineHint(ILogger, String) LoggerExtensions.Write(ILogger, String) LoggerExtensions.WriteHelp(ILogger, String) LoggerExtensions.WriteHeader(ILogger, String) LoggerExtensions.WriteResult(ILogger, String) LoggerExtensions.WriteStatistic(ILogger, String) LoggerExtensions.WriteInfo(ILogger, String) LoggerExtensions.WriteError(ILogger, String) LoggerExtensions.WriteHint(ILogger, String)"
  },
  "api/BenchmarkDotNet.Loggers.ConsoleLogger.html": {
    "href": "api/BenchmarkDotNet.Loggers.ConsoleLogger.html",
    "title": "Class ConsoleLogger | BenchmarkDotNet",
    "keywords": "Class ConsoleLogger Inheritance System.Object ConsoleLogger Implements ILogger Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Loggers Assembly : BenchmarkDotNet.dll Syntax public sealed class ConsoleLogger : ILogger Constructors ConsoleLogger(Dictionary<LogKind, ConsoleColor>) Declaration public ConsoleLogger(Dictionary<LogKind, ConsoleColor> colorScheme = null) Parameters Type Name Description System.Collections.Generic.Dictionary < LogKind , System.ConsoleColor > colorScheme Fields Default Declaration public static readonly ILogger Default Field Value Type Description ILogger Methods CreateGrayScheme() Declaration public static Dictionary<LogKind, ConsoleColor> CreateGrayScheme() Returns Type Description System.Collections.Generic.Dictionary < LogKind , System.ConsoleColor > Write(LogKind, String) Declaration public void Write(LogKind logKind, string text) Parameters Type Name Description LogKind logKind System.String text WriteLine() Declaration public void WriteLine() WriteLine(LogKind, String) Declaration public void WriteLine(LogKind logKind, string text) Parameters Type Name Description LogKind logKind System.String text Implements ILogger Extension Methods CommonExtensions.IsOneOf<T>(T, T[]) LoggerExtensions.WriteLine(ILogger, String) LoggerExtensions.WriteLineHelp(ILogger, String) LoggerExtensions.WriteLineHeader(ILogger, String) LoggerExtensions.WriteLineResult(ILogger, String) LoggerExtensions.WriteLineStatistic(ILogger, String) LoggerExtensions.WriteLineInfo(ILogger, String) LoggerExtensions.WriteLineError(ILogger, String) LoggerExtensions.WriteLineHint(ILogger, String) LoggerExtensions.Write(ILogger, String) LoggerExtensions.WriteHelp(ILogger, String) LoggerExtensions.WriteHeader(ILogger, String) LoggerExtensions.WriteResult(ILogger, String) LoggerExtensions.WriteStatistic(ILogger, String) LoggerExtensions.WriteInfo(ILogger, String) LoggerExtensions.WriteError(ILogger, String) LoggerExtensions.WriteHint(ILogger, String)"
  },
  "api/BenchmarkDotNet.Loggers.ILogger.html": {
    "href": "api/BenchmarkDotNet.Loggers.ILogger.html",
    "title": "Interface ILogger | BenchmarkDotNet",
    "keywords": "Interface ILogger Namespace : BenchmarkDotNet.Loggers Assembly : BenchmarkDotNet.dll Syntax public interface ILogger Methods Write(LogKind, String) Declaration void Write(LogKind logKind, string text) Parameters Type Name Description LogKind logKind System.String text WriteLine() Declaration void WriteLine() WriteLine(LogKind, String) Declaration void WriteLine(LogKind logKind, string text) Parameters Type Name Description LogKind logKind System.String text Extension Methods CommonExtensions.IsOneOf<T>(T, T[]) LoggerExtensions.WriteLine(ILogger, String) LoggerExtensions.WriteLineHelp(ILogger, String) LoggerExtensions.WriteLineHeader(ILogger, String) LoggerExtensions.WriteLineResult(ILogger, String) LoggerExtensions.WriteLineStatistic(ILogger, String) LoggerExtensions.WriteLineInfo(ILogger, String) LoggerExtensions.WriteLineError(ILogger, String) LoggerExtensions.WriteLineHint(ILogger, String) LoggerExtensions.Write(ILogger, String) LoggerExtensions.WriteHelp(ILogger, String) LoggerExtensions.WriteHeader(ILogger, String) LoggerExtensions.WriteResult(ILogger, String) LoggerExtensions.WriteStatistic(ILogger, String) LoggerExtensions.WriteInfo(ILogger, String) LoggerExtensions.WriteError(ILogger, String) LoggerExtensions.WriteHint(ILogger, String)"
  },
  "api/BenchmarkDotNet.Order.SummaryOrderPolicy.html": {
    "href": "api/BenchmarkDotNet.Order.SummaryOrderPolicy.html",
    "title": "Enum SummaryOrderPolicy | BenchmarkDotNet",
    "keywords": "Enum SummaryOrderPolicy Namespace : BenchmarkDotNet.Order Assembly : BenchmarkDotNet.dll Syntax public enum SummaryOrderPolicy Fields Name Description Declared Default FastestToSlowest Method SlowestToFastest Extension Methods CommonExtensions.IsOneOf<SummaryOrderPolicy>(SummaryOrderPolicy[])"
  },
  "api/BenchmarkDotNet.Parameters.ParameterDefinition.html": {
    "href": "api/BenchmarkDotNet.Parameters.ParameterDefinition.html",
    "title": "Class ParameterDefinition | BenchmarkDotNet",
    "keywords": "Class ParameterDefinition Inheritance System.Object ParameterDefinition Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Parameters Assembly : BenchmarkDotNet.dll Syntax public class ParameterDefinition Constructors ParameterDefinition(String, Boolean, Object[], Boolean) Declaration public ParameterDefinition(string name, bool isStatic, object[] values, bool isArgument) Parameters Type Name Description System.String name System.Boolean isStatic System.Object [] values System.Boolean isArgument Properties IsArgument Declaration public bool IsArgument { get; } Property Value Type Description System.Boolean IsStatic Declaration public bool IsStatic { get; } Property Value Type Description System.Boolean Name Declaration public string Name { get; } Property Value Type Description System.String Values Declaration public object[] Values { get; } Property Value Type Description System.Object [] Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Parameters.ParameterDefinitions.html": {
    "href": "api/BenchmarkDotNet.Parameters.ParameterDefinitions.html",
    "title": "Class ParameterDefinitions | BenchmarkDotNet",
    "keywords": "Class ParameterDefinitions Inheritance System.Object ParameterDefinitions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Parameters Assembly : BenchmarkDotNet.dll Syntax public class ParameterDefinitions Constructors ParameterDefinitions(IReadOnlyList<ParameterDefinition>) Declaration public ParameterDefinitions(IReadOnlyList<ParameterDefinition> items) Parameters Type Name Description System.Collections.Generic.IReadOnlyList < ParameterDefinition > items Properties Items Declaration public IReadOnlyList<ParameterDefinition> Items { get; } Property Value Type Description System.Collections.Generic.IReadOnlyList < ParameterDefinition > Methods Expand() Declaration public IReadOnlyList<ParameterInstances> Expand() Returns Type Description System.Collections.Generic.IReadOnlyList < ParameterInstances > ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Columns.StdDevColumnAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Columns.StdDevColumnAttribute.html",
    "title": "Class StdDevColumnAttribute | BenchmarkDotNet",
    "keywords": "Class StdDevColumnAttribute Inheritance System.Object System.Attribute ColumnConfigBaseAttribute StdDevColumnAttribute Implements IConfigSource Inherited Members ColumnConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Columns Assembly : BenchmarkDotNet.dll Syntax public class StdDevColumnAttribute : ColumnConfigBaseAttribute, IConfigSource Constructors StdDevColumnAttribute() Declaration public StdDevColumnAttribute() Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.HardwareCountersAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.HardwareCountersAttribute.html",
    "title": "Class HardwareCountersAttribute | BenchmarkDotNet",
    "keywords": "Class HardwareCountersAttribute Inheritance System.Object System.Attribute HardwareCountersAttribute Implements IConfigSource Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes Assembly : BenchmarkDotNet.dll Syntax [AttributeUsage(AttributeTargets.Assembly | AttributeTargets.Class)] public class HardwareCountersAttribute : Attribute, IConfigSource Constructors HardwareCountersAttribute() Declaration protected HardwareCountersAttribute() HardwareCountersAttribute(HardwareCounter[]) Declaration public HardwareCountersAttribute(params HardwareCounter[] counters) Parameters Type Name Description HardwareCounter [] counters Properties Config Declaration public IConfig Config { get; } Property Value Type Description IConfig Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Filters.AllCategoriesFilter.html": {
    "href": "api/BenchmarkDotNet.Filters.AllCategoriesFilter.html",
    "title": "Class AllCategoriesFilter | BenchmarkDotNet",
    "keywords": "Class AllCategoriesFilter Filter benchmarks which have all the target categories Inheritance System.Object AllCategoriesFilter Implements IFilter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Filters Assembly : BenchmarkDotNet.dll Syntax public class AllCategoriesFilter : IFilter Constructors AllCategoriesFilter(String[]) Declaration public AllCategoriesFilter(string[] targetCategories) Parameters Type Name Description System.String [] targetCategories Methods Predicate(Benchmark) Declaration public bool Predicate(Benchmark benchmark) Parameters Type Name Description Benchmark benchmark Returns Type Description System.Boolean Implements IFilter Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Jobs.JobMode-1.html": {
    "href": "api/BenchmarkDotNet.Jobs.JobMode-1.html",
    "title": "Class JobMode<T> | BenchmarkDotNet",
    "keywords": "Class JobMode<T> Inheritance System.Object CharacteristicObject CharacteristicObject <T> JobMode<T> AccuracyMode EnvMode GcMode InfrastructureMode Job MetaMode RunMode Inherited Members CharacteristicObject<T>.Apply(CharacteristicObject) CharacteristicObject<T>.Apply(CharacteristicObject[]) CharacteristicObject<T>.ApplyAndFreeze(CharacteristicObject) CharacteristicObject<T>.ApplyAndFreeze(CharacteristicObject[]) CharacteristicObject<T>.Freeze() CharacteristicObject<T>.UnfreezeCopy() CharacteristicObject<T>.CreateCharacteristic<TC>(String) CharacteristicObject.ResolveId(CharacteristicObject, String) CharacteristicObject.IdCharacteristic CharacteristicObject.AssertNotFrozen() CharacteristicObject.AssertIsRoot() CharacteristicObject.AssertIsNonFrozenRoot() CharacteristicObject.AssertIsAssignable(Characteristic, Object) CharacteristicObject.Owner CharacteristicObject.OwnerOrSelf CharacteristicObject.Frozen CharacteristicObject.IsPropertyBag CharacteristicObject.HasChanges CharacteristicObject.GetCharacteristicsWithValues() CharacteristicObject.HasValue(Characteristic) CharacteristicObject.ResolveValue<T>(Characteristic<T>, IResolver) CharacteristicObject.ResolveValue(Characteristic, IResolver) CharacteristicObject.ResolveValue<T>(Characteristic<T>, T) CharacteristicObject.ResolveValue(Characteristic, Object) CharacteristicObject.ResolveValueAsNullable<T>(Characteristic<T>) CharacteristicObject.ApplyCore(CharacteristicObject) CharacteristicObject.FreezeCore() CharacteristicObject.UnfreezeCopyCore() CharacteristicObject.Id CharacteristicObject.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Jobs Assembly : BenchmarkDotNet.dll Syntax public abstract class JobMode<T> : CharacteristicObject<T> where T : JobMode<T>, new() Type Parameters Name Description T Constructors JobMode() Declaration protected JobMode() JobMode(String) Declaration protected JobMode(string id) Parameters Type Name Description System.String id Fields Default Declaration public static readonly T Default Field Value Type Description T Properties Job Declaration public Job Job { get; } Property Value Type Description Job Extension Methods CharacteristicHelper.GetThisTypeCharacteristics(CharacteristicObject) CharacteristicHelper.GetAllCharacteristics(CharacteristicObject) CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Jobs.MetaMode.html": {
    "href": "api/BenchmarkDotNet.Jobs.MetaMode.html",
    "title": "Class MetaMode | BenchmarkDotNet",
    "keywords": "Class MetaMode Inheritance System.Object CharacteristicObject CharacteristicObject < MetaMode > JobMode < MetaMode > MetaMode Inherited Members JobMode<MetaMode>.Default JobMode<MetaMode>.Job CharacteristicObject<MetaMode>.Apply(CharacteristicObject) CharacteristicObject<MetaMode>.Apply(CharacteristicObject[]) CharacteristicObject<MetaMode>.ApplyAndFreeze(CharacteristicObject) CharacteristicObject<MetaMode>.ApplyAndFreeze(CharacteristicObject[]) CharacteristicObject<MetaMode>.Freeze() CharacteristicObject<MetaMode>.UnfreezeCopy() CharacteristicObject<MetaMode>.CreateCharacteristic<TC>(String) CharacteristicObject.ResolveId(CharacteristicObject, String) CharacteristicObject.IdCharacteristic CharacteristicObject.AssertNotFrozen() CharacteristicObject.AssertIsRoot() CharacteristicObject.AssertIsNonFrozenRoot() CharacteristicObject.AssertIsAssignable(Characteristic, Object) CharacteristicObject.Owner CharacteristicObject.OwnerOrSelf CharacteristicObject.Frozen CharacteristicObject.IsPropertyBag CharacteristicObject.HasChanges CharacteristicObject.GetCharacteristicsWithValues() CharacteristicObject.HasValue(Characteristic) CharacteristicObject.ResolveValue<T>(Characteristic<T>, IResolver) CharacteristicObject.ResolveValue(Characteristic, IResolver) CharacteristicObject.ResolveValue<T>(Characteristic<T>, T) CharacteristicObject.ResolveValue(Characteristic, Object) CharacteristicObject.ResolveValueAsNullable<T>(Characteristic<T>) CharacteristicObject.ApplyCore(CharacteristicObject) CharacteristicObject.FreezeCore() CharacteristicObject.UnfreezeCopyCore() CharacteristicObject.Id CharacteristicObject.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Jobs Assembly : BenchmarkDotNet.dll Syntax public class MetaMode : JobMode<MetaMode> Fields IsBaselineCharacteristic Declaration public static readonly Characteristic<bool> IsBaselineCharacteristic Field Value Type Description Characteristic < System.Boolean > Properties IsBaseline Declaration public bool IsBaseline { get; set; } Property Value Type Description System.Boolean Extension Methods CharacteristicHelper.GetThisTypeCharacteristics(CharacteristicObject) CharacteristicHelper.GetAllCharacteristics(CharacteristicObject) CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Diagnosers.UnresolvedDiagnoser.html": {
    "href": "api/BenchmarkDotNet.Diagnosers.UnresolvedDiagnoser.html",
    "title": "Class UnresolvedDiagnoser | BenchmarkDotNet",
    "keywords": "Class UnresolvedDiagnoser Inheritance System.Object UnresolvedDiagnoser Implements IDiagnoser Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Diagnosers Assembly : BenchmarkDotNet.dll Syntax public class UnresolvedDiagnoser : IDiagnoser Constructors UnresolvedDiagnoser(Type) Declaration public UnresolvedDiagnoser(Type unresolved) Parameters Type Name Description System.Type unresolved Properties Analysers Declaration public IEnumerable<IAnalyser> Analysers { get; } Property Value Type Description System.Collections.Generic.IEnumerable < IAnalyser > Exporters Declaration public IEnumerable<IExporter> Exporters { get; } Property Value Type Description System.Collections.Generic.IEnumerable < IExporter > Ids Declaration public IEnumerable<string> Ids { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.String > Methods DisplayResults(ILogger) Declaration public void DisplayResults(ILogger logger) Parameters Type Name Description ILogger logger GetColumnProvider() Declaration public IColumnProvider GetColumnProvider() Returns Type Description IColumnProvider GetRunMode(Benchmark) Declaration public RunMode GetRunMode(Benchmark benchmark) Parameters Type Name Description Benchmark benchmark Returns Type Description RunMode Handle(HostSignal, DiagnoserActionParameters) Declaration public void Handle(HostSignal signal, DiagnoserActionParameters parameters) Parameters Type Name Description HostSignal signal DiagnoserActionParameters parameters ProcessResults(DiagnoserResults) Declaration public void ProcessResults(DiagnoserResults results) Parameters Type Name Description DiagnoserResults results Validate(ValidationParameters) Declaration public IEnumerable<ValidationError> Validate(ValidationParameters validationParameters) Parameters Type Name Description ValidationParameters validationParameters Returns Type Description System.Collections.Generic.IEnumerable < ValidationError > Implements IDiagnoser Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Running.BenchmarkRunInfo.html": {
    "href": "api/BenchmarkDotNet.Running.BenchmarkRunInfo.html",
    "title": "Class BenchmarkRunInfo | BenchmarkDotNet",
    "keywords": "Class BenchmarkRunInfo Inheritance System.Object BenchmarkRunInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Running Assembly : BenchmarkDotNet.dll Syntax public class BenchmarkRunInfo Constructors BenchmarkRunInfo(Benchmark[], Type, ReadOnlyConfig) Declaration public BenchmarkRunInfo(Benchmark[] benchmarks, Type type, ReadOnlyConfig config) Parameters Type Name Description Benchmark [] benchmarks System.Type type ReadOnlyConfig config Properties Benchmarks Declaration public Benchmark[] Benchmarks { get; } Property Value Type Description Benchmark [] Config Declaration public ReadOnlyConfig Config { get; } Property Value Type Description ReadOnlyConfig Type Declaration public Type Type { get; } Property Value Type Description System.Type Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Running.BenchmarkRunner.html": {
    "href": "api/BenchmarkDotNet.Running.BenchmarkRunner.html",
    "title": "Class BenchmarkRunner | BenchmarkDotNet",
    "keywords": "Class BenchmarkRunner Inheritance System.Object BenchmarkRunner Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Running Assembly : BenchmarkDotNet.dll Syntax public static class BenchmarkRunner Methods Run(BenchmarkRunInfo, Boolean) Declaration public static Summary Run(BenchmarkRunInfo benchmarkRunInfo, bool summaryPerType) Parameters Type Name Description BenchmarkRunInfo benchmarkRunInfo System.Boolean summaryPerType Returns Type Description Summary Run(BenchmarkRunInfo[], IConfig, Boolean) Declaration public static Summary[] Run(BenchmarkRunInfo[] benchmarkRunInfos, IConfig commonSettingsConfig, bool summaryPerType) Parameters Type Name Description BenchmarkRunInfo [] benchmarkRunInfos IConfig commonSettingsConfig System.Boolean summaryPerType Returns Type Description Summary [] Run(Assembly, Boolean, IConfig) Declaration public static Summary[] Run(Assembly assembly, bool summaryPerType, IConfig config = null) Parameters Type Name Description System.Reflection.Assembly assembly System.Boolean summaryPerType IConfig config Returns Type Description Summary [] Run(Type, IConfig) Declaration public static Summary Run(Type type, IConfig config = null) Parameters Type Name Description System.Type type IConfig config Returns Type Description Summary Run(Type, MethodInfo[], IConfig) Declaration public static Summary Run(Type type, MethodInfo[] methods, IConfig config = null) Parameters Type Name Description System.Type type System.Reflection.MethodInfo [] methods IConfig config Returns Type Description Summary Run<T>(IConfig) Declaration public static Summary Run<T>(IConfig config = null) Parameters Type Name Description IConfig config Returns Type Description Summary Type Parameters Name Description T RunSource(String, IConfig) Declaration public static Summary RunSource(string source, IConfig config = null) Parameters Type Name Description System.String source IConfig config Returns Type Description Summary RunUrl(String, IConfig) Declaration public static Summary RunUrl(string url, IConfig config = null) Parameters Type Name Description System.String url IConfig config Returns Type Description Summary"
  },
  "api/BenchmarkDotNet.Running.BenchmarkSwitcher.html": {
    "href": "api/BenchmarkDotNet.Running.BenchmarkSwitcher.html",
    "title": "Class BenchmarkSwitcher | BenchmarkDotNet",
    "keywords": "Class BenchmarkSwitcher Inheritance System.Object BenchmarkSwitcher Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Running Assembly : BenchmarkDotNet.dll Syntax public class BenchmarkSwitcher Constructors BenchmarkSwitcher(Assembly) Declaration public BenchmarkSwitcher(Assembly assembly) Parameters Type Name Description System.Reflection.Assembly assembly BenchmarkSwitcher(Assembly[]) Declaration public BenchmarkSwitcher(Assembly[] assemblies) Parameters Type Name Description System.Reflection.Assembly [] assemblies BenchmarkSwitcher(Type[]) Declaration public BenchmarkSwitcher(Type[] types) Parameters Type Name Description System.Type [] types Methods FromAssemblies(Assembly[]) Declaration public static BenchmarkSwitcher FromAssemblies(Assembly[] assemblies) Parameters Type Name Description System.Reflection.Assembly [] assemblies Returns Type Description BenchmarkSwitcher FromAssembly(Assembly) Declaration public static BenchmarkSwitcher FromAssembly(Assembly assembly) Parameters Type Name Description System.Reflection.Assembly assembly Returns Type Description BenchmarkSwitcher FromAssemblyAndTypes(Assembly, Type[]) Declaration public static BenchmarkSwitcher FromAssemblyAndTypes(Assembly assembly, Type[] types) Parameters Type Name Description System.Reflection.Assembly assembly System.Type [] types Returns Type Description BenchmarkSwitcher FromTypes(Type[]) Declaration public static BenchmarkSwitcher FromTypes(Type[] types) Parameters Type Name Description System.Type [] types Returns Type Description BenchmarkSwitcher Run(String[], IConfig) Declaration public IEnumerable<Summary> Run(string[] args = null, IConfig config = null) Parameters Type Name Description System.String [] args IConfig config Returns Type Description System.Collections.Generic.IEnumerable < Summary > RunAll() Run all available benchmarks. Declaration public IEnumerable<Summary> RunAll() Returns Type Description System.Collections.Generic.IEnumerable < Summary > RunAllJoined() Run all available benchmarks and join them to a single summary Declaration public Summary RunAllJoined() Returns Type Description Summary ShouldDisplayOptions(String[]) Declaration public bool ShouldDisplayOptions(string[] args) Parameters Type Name Description System.String [] args Returns Type Description System.Boolean Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Running.BuildPartition.html": {
    "href": "api/BenchmarkDotNet.Running.BuildPartition.html",
    "title": "Class BuildPartition | BenchmarkDotNet",
    "keywords": "Class BuildPartition Inheritance System.Object BuildPartition Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Running Assembly : BenchmarkDotNet.dll Syntax public class BuildPartition Constructors BuildPartition(BenchmarkBuildInfo[], IResolver) Declaration public BuildPartition(BenchmarkBuildInfo[] benchmarks, IResolver resolver) Parameters Type Name Description BenchmarkBuildInfo [] benchmarks IResolver resolver Properties AssemblyLocation Declaration public string AssemblyLocation { get; } Property Value Type Description System.String Benchmarks Declaration public BenchmarkBuildInfo[] Benchmarks { get; } Property Value Type Description BenchmarkBuildInfo [] BuildConfiguration Declaration public string BuildConfiguration { get; } Property Value Type Description System.String IsCoreRT Declaration public bool IsCoreRT { get; } Property Value Type Description System.Boolean Jit Declaration public Jit Jit { get; } Property Value Type Description Jit Platform Declaration public Platform Platform { get; } Property Value Type Description Platform ProgramName Declaration public string ProgramName { get; } Property Value Type Description System.String RepresentativeBenchmark the benchmarks are groupped by the build settings so you can use this benchmark to get the runtime settings Declaration public Benchmark RepresentativeBenchmark { get; } Property Value Type Description Benchmark Resolver Declaration public IResolver Resolver { get; } Property Value Type Description IResolver Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Toolchains.IToolchain.html": {
    "href": "api/BenchmarkDotNet.Toolchains.IToolchain.html",
    "title": "Interface IToolchain | BenchmarkDotNet",
    "keywords": "Interface IToolchain Namespace : BenchmarkDotNet.Toolchains Assembly : BenchmarkDotNet.dll Syntax public interface IToolchain Properties Builder Declaration IBuilder Builder { get; } Property Value Type Description IBuilder Executor Declaration IExecutor Executor { get; } Property Value Type Description IExecutor Generator Declaration IGenerator Generator { get; } Property Value Type Description IGenerator Name Declaration string Name { get; } Property Value Type Description System.String Methods IsSupported(Benchmark, ILogger, IResolver) Declaration bool IsSupported(Benchmark benchmark, ILogger logger, IResolver resolver) Parameters Type Name Description Benchmark benchmark ILogger logger IResolver resolver Returns Type Description System.Boolean Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Toolchains.InProcess.BenchmarkAction.html": {
    "href": "api/BenchmarkDotNet.Toolchains.InProcess.BenchmarkAction.html",
    "title": "Class BenchmarkAction | BenchmarkDotNet",
    "keywords": "Class BenchmarkAction Common API to run the Setup/Clean/Idle/Run methods Inheritance System.Object BenchmarkAction Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Toolchains.InProcess Assembly : BenchmarkDotNet.dll Syntax public abstract class BenchmarkAction Properties InvokeMultiple Gets or sets invoke multiple times callback. Declaration public Action<long> InvokeMultiple { get; protected set; } Property Value Type Description System.Action < System.Int64 > Invoke multiple times callback. InvokeSingle Gets or sets invoke single callback. Declaration public Action InvokeSingle { get; protected set; } Property Value Type Description System.Action Invoke single callback. LastRunResult Gets the last run result. Declaration public virtual object LastRunResult { get; } Property Value Type Description System.Object The last run result. Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.ArgumentsAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.ArgumentsAttribute.html",
    "title": "Class ArgumentsAttribute | BenchmarkDotNet",
    "keywords": "Class ArgumentsAttribute Inheritance System.Object System.Attribute ArgumentsAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes Assembly : BenchmarkDotNet.dll Syntax [AttributeUsage(AttributeTargets.Method, AllowMultiple = true)] public class ArgumentsAttribute : Attribute Constructors ArgumentsAttribute() Declaration public ArgumentsAttribute() ArgumentsAttribute(Object[]) Declaration public ArgumentsAttribute(params object[] values) Parameters Type Name Description System.Object [] values Properties Values Declaration public object[] Values { get; } Property Value Type Description System.Object [] Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Columns.ColumnConfigBaseAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Columns.ColumnConfigBaseAttribute.html",
    "title": "Class ColumnConfigBaseAttribute | BenchmarkDotNet",
    "keywords": "Class ColumnConfigBaseAttribute Inheritance System.Object System.Attribute ColumnConfigBaseAttribute AllStatisticsColumnAttribute CategoriesColumnAttribute ConfidenceIntervalErrorColumnAttribute IsBaselineColumnAttribute IterationsColumnAttribute KurtosisColumnAttribute LogicalGroupColumnAttribute MaxColumnAttribute MeanColumnAttribute MedianColumnAttribute MinColumnAttribute MValueColumnAttribute NamespaceColumnAttribute Q1ColumnAttribute Q3ColumnAttribute RankColumnAttribute SkewnessColumnAttribute StdDevColumnAttribute StdErrorColumnAttribute WelchTTestPValueColumnAttribute Implements IConfigSource Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Columns Assembly : BenchmarkDotNet.dll Syntax [AttributeUsage(AttributeTargets.Assembly | AttributeTargets.Class)] public abstract class ColumnConfigBaseAttribute : Attribute, IConfigSource Constructors ColumnConfigBaseAttribute() Declaration protected ColumnConfigBaseAttribute() ColumnConfigBaseAttribute(IColumn[]) Declaration protected ColumnConfigBaseAttribute(params IColumn[] columns) Parameters Type Name Description IColumn [] columns Properties Config Declaration public IConfig Config { get; } Property Value Type Description IConfig Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Columns.MaxColumnAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Columns.MaxColumnAttribute.html",
    "title": "Class MaxColumnAttribute | BenchmarkDotNet",
    "keywords": "Class MaxColumnAttribute Inheritance System.Object System.Attribute ColumnConfigBaseAttribute MaxColumnAttribute Implements IConfigSource Inherited Members ColumnConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Columns Assembly : BenchmarkDotNet.dll Syntax public class MaxColumnAttribute : ColumnConfigBaseAttribute, IConfigSource Constructors MaxColumnAttribute() Declaration public MaxColumnAttribute() Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Columns.MinColumnAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Columns.MinColumnAttribute.html",
    "title": "Class MinColumnAttribute | BenchmarkDotNet",
    "keywords": "Class MinColumnAttribute Inheritance System.Object System.Attribute ColumnConfigBaseAttribute MinColumnAttribute Implements IConfigSource Inherited Members ColumnConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Columns Assembly : BenchmarkDotNet.dll Syntax public class MinColumnAttribute : ColumnConfigBaseAttribute, IConfigSource Constructors MinColumnAttribute() Declaration public MinColumnAttribute() Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Helpers.ExternalToolsHelper.html": {
    "href": "api/BenchmarkDotNet.Helpers.ExternalToolsHelper.html",
    "title": "Class ExternalToolsHelper | BenchmarkDotNet",
    "keywords": "Class ExternalToolsHelper Inheritance System.Object ExternalToolsHelper Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Helpers Assembly : BenchmarkDotNet.dll Syntax public static class ExternalToolsHelper Fields LsbRelease Output of the lsb_release -a command. Linux only. Declaration public static readonly Lazy<Dictionary<string, string>> LsbRelease Field Value Type Description System.Lazy < System.Collections.Generic.Dictionary < System.String , System.String >> MacSystemProfilerData Output of the system_profiler SPSoftwareDataType command. MacOSX only. Declaration public static readonly Lazy<Dictionary<string, string>> MacSystemProfilerData Field Value Type Description System.Lazy < System.Collections.Generic.Dictionary < System.String , System.String >>"
  },
  "api/BenchmarkDotNet.Helpers.FolderNameHelper.html": {
    "href": "api/BenchmarkDotNet.Helpers.FolderNameHelper.html",
    "title": "Class FolderNameHelper | BenchmarkDotNet",
    "keywords": "Class FolderNameHelper Inheritance System.Object FolderNameHelper Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Helpers Assembly : BenchmarkDotNet.dll Syntax public class FolderNameHelper Methods ToFolderName(Object) Declaration public static string ToFolderName(object value) Parameters Type Name Description System.Object value Returns Type Description System.String ToFolderName(Type) Declaration public static string ToFolderName(Type type) Parameters Type Name Description System.Type type Returns Type Description System.String Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Helpers.SourceCodeHelper.html": {
    "href": "api/BenchmarkDotNet.Helpers.SourceCodeHelper.html",
    "title": "Class SourceCodeHelper | BenchmarkDotNet",
    "keywords": "Class SourceCodeHelper Inheritance System.Object SourceCodeHelper Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Helpers Assembly : BenchmarkDotNet.dll Syntax public class SourceCodeHelper Methods IsCompilationTimeConstant(Object) Declaration public static bool IsCompilationTimeConstant(object value) Parameters Type Name Description System.Object value Returns Type Description System.Boolean IsCompilationTimeConstant(Type) Declaration public static bool IsCompilationTimeConstant(Type type) Parameters Type Name Description System.Type type Returns Type Description System.Boolean ToSourceCode(Object) Declaration public static string ToSourceCode(object value) Parameters Type Name Description System.Object value Returns Type Description System.String Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Diagnosers.DiagnoserActionParameters.html": {
    "href": "api/BenchmarkDotNet.Diagnosers.DiagnoserActionParameters.html",
    "title": "Class DiagnoserActionParameters | BenchmarkDotNet",
    "keywords": "Class DiagnoserActionParameters Inheritance System.Object DiagnoserActionParameters Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Diagnosers Assembly : BenchmarkDotNet.dll Syntax public class DiagnoserActionParameters Constructors DiagnoserActionParameters(Process, Benchmark, BenchmarkId, IConfig) Declaration public DiagnoserActionParameters(Process process, Benchmark benchmark, BenchmarkId benchmarkId, IConfig config) Parameters Type Name Description System.Diagnostics.Process process Benchmark benchmark BenchmarkId benchmarkId IConfig config Properties Benchmark Declaration public Benchmark Benchmark { get; } Property Value Type Description Benchmark BenchmarkId Declaration public BenchmarkId BenchmarkId { get; } Property Value Type Description BenchmarkId Config Declaration public IConfig Config { get; } Property Value Type Description IConfig Process Declaration public Process Process { get; } Property Value Type Description System.Diagnostics.Process Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Columns.StatisticColumn.html": {
    "href": "api/BenchmarkDotNet.Columns.StatisticColumn.html",
    "title": "Class StatisticColumn | BenchmarkDotNet",
    "keywords": "Class StatisticColumn Inheritance System.Object StatisticColumn Implements IColumn Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Columns Assembly : BenchmarkDotNet.dll Syntax public class StatisticColumn : IColumn Fields AllStatistics Declaration public static readonly IColumn[] AllStatistics Field Value Type Description IColumn [] Error Declaration public static readonly IColumn Error Field Value Type Description IColumn Iterations Declaration public static readonly IColumn Iterations Field Value Type Description IColumn Kurtosis Declaration public static readonly IColumn Kurtosis Field Value Type Description IColumn Max Declaration public static readonly IColumn Max Field Value Type Description IColumn Mean Declaration public static readonly IColumn Mean Field Value Type Description IColumn Median Declaration public static readonly IColumn Median Field Value Type Description IColumn Min Declaration public static readonly IColumn Min Field Value Type Description IColumn MValue See http://www.brendangregg.com/FrequencyTrails/modes.html Declaration public static readonly IColumn MValue Field Value Type Description IColumn OperationsPerSecond Declaration public static readonly IColumn OperationsPerSecond Field Value Type Description IColumn P0 Declaration public static readonly IColumn P0 Field Value Type Description IColumn P100 Declaration public static readonly IColumn P100 Field Value Type Description IColumn P25 Declaration public static readonly IColumn P25 Field Value Type Description IColumn P50 Declaration public static readonly IColumn P50 Field Value Type Description IColumn P67 Declaration public static readonly IColumn P67 Field Value Type Description IColumn P80 Declaration public static readonly IColumn P80 Field Value Type Description IColumn P85 Declaration public static readonly IColumn P85 Field Value Type Description IColumn P90 Declaration public static readonly IColumn P90 Field Value Type Description IColumn P95 Declaration public static readonly IColumn P95 Field Value Type Description IColumn Q1 Declaration public static readonly IColumn Q1 Field Value Type Description IColumn Q3 Declaration public static readonly IColumn Q3 Field Value Type Description IColumn Skewness Declaration public static readonly IColumn Skewness Field Value Type Description IColumn StdDev Declaration public static readonly IColumn StdDev Field Value Type Description IColumn StdErr Declaration public static readonly IColumn StdErr Field Value Type Description IColumn Properties AlwaysShow Declaration public bool AlwaysShow { get; } Property Value Type Description System.Boolean Category Declaration public ColumnCategory Category { get; } Property Value Type Description ColumnCategory ColumnName Declaration public string ColumnName { get; } Property Value Type Description System.String Id Declaration public string Id { get; } Property Value Type Description System.String IsNumeric Declaration public bool IsNumeric { get; } Property Value Type Description System.Boolean Legend Declaration public string Legend { get; } Property Value Type Description System.String PriorityInCategory Declaration public int PriorityInCategory { get; } Property Value Type Description System.Int32 UnitType Declaration public UnitType UnitType { get; } Property Value Type Description UnitType Methods CiError(ConfidenceLevel) Declaration public static IColumn CiError(ConfidenceLevel level) Parameters Type Name Description ConfidenceLevel level Returns Type Description IColumn CiLower(ConfidenceLevel) Declaration public static IColumn CiLower(ConfidenceLevel level) Parameters Type Name Description ConfidenceLevel level Returns Type Description IColumn CiUpper(ConfidenceLevel) Declaration public static IColumn CiUpper(ConfidenceLevel level) Parameters Type Name Description ConfidenceLevel level Returns Type Description IColumn GetBestAmountOfDecimalDigits(Double) Declaration public static int GetBestAmountOfDecimalDigits(double value) Parameters Type Name Description System.Double value Returns Type Description System.Int32 GetValue(Summary, Benchmark) Declaration public string GetValue(Summary summary, Benchmark benchmark) Parameters Type Name Description Summary summary Benchmark benchmark Returns Type Description System.String GetValue(Summary, Benchmark, ISummaryStyle) Declaration public string GetValue(Summary summary, Benchmark benchmark, ISummaryStyle style) Parameters Type Name Description Summary summary Benchmark benchmark ISummaryStyle style Returns Type Description System.String IsAvailable(Summary) Declaration public bool IsAvailable(Summary summary) Parameters Type Name Description Summary summary Returns Type Description System.Boolean IsDefault(Summary, Benchmark) Declaration public bool IsDefault(Summary summary, Benchmark benchmark) Parameters Type Name Description Summary summary Benchmark benchmark Returns Type Description System.Boolean ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements IColumn Extension Methods ColumnExtensions.ToProvider(IColumn) CommonExtensions.GetColumnTitle(IColumn, ISummaryStyle) CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Columns.TagColumn.html": {
    "href": "api/BenchmarkDotNet.Columns.TagColumn.html",
    "title": "Class TagColumn | BenchmarkDotNet",
    "keywords": "Class TagColumn Inheritance System.Object TagColumn Implements IColumn Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Columns Assembly : BenchmarkDotNet.dll Syntax public class TagColumn : IColumn Constructors TagColumn(String, Func<String, String>) Declaration public TagColumn(string columnName, Func<string, string> getTag) Parameters Type Name Description System.String columnName System.Func < System.String , System.String > getTag Properties AlwaysShow Declaration public bool AlwaysShow { get; } Property Value Type Description System.Boolean Category Declaration public ColumnCategory Category { get; } Property Value Type Description ColumnCategory ColumnName Declaration public string ColumnName { get; } Property Value Type Description System.String Id Declaration public string Id { get; } Property Value Type Description System.String IsNumeric Declaration public bool IsNumeric { get; } Property Value Type Description System.Boolean Legend Declaration public string Legend { get; } Property Value Type Description System.String PriorityInCategory Declaration public int PriorityInCategory { get; } Property Value Type Description System.Int32 UnitType Declaration public UnitType UnitType { get; } Property Value Type Description UnitType Methods GetValue(Summary, Benchmark) Declaration public string GetValue(Summary summary, Benchmark benchmark) Parameters Type Name Description Summary summary Benchmark benchmark Returns Type Description System.String GetValue(Summary, Benchmark, ISummaryStyle) Declaration public string GetValue(Summary summary, Benchmark benchmark, ISummaryStyle style) Parameters Type Name Description Summary summary Benchmark benchmark ISummaryStyle style Returns Type Description System.String IsAvailable(Summary) Declaration public bool IsAvailable(Summary summary) Parameters Type Name Description Summary summary Returns Type Description System.Boolean IsDefault(Summary, Benchmark) Declaration public bool IsDefault(Summary summary, Benchmark benchmark) Parameters Type Name Description Summary summary Benchmark benchmark Returns Type Description System.Boolean ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements IColumn Extension Methods ColumnExtensions.ToProvider(IColumn) CommonExtensions.GetColumnTitle(IColumn, ISummaryStyle) CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Diagnosers.Code.html": {
    "href": "api/BenchmarkDotNet.Diagnosers.Code.html",
    "title": "Class Code | BenchmarkDotNet",
    "keywords": "Class Code Inheritance System.Object Code Asm IL Sharp Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Diagnosers Assembly : BenchmarkDotNet.dll Syntax public class Code Properties Comment Declaration public string Comment { get; set; } Property Value Type Description System.String TextRepresentation Declaration public string TextRepresentation { get; set; } Property Value Type Description System.String Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Diagnosers.CompositeDiagnoser.html": {
    "href": "api/BenchmarkDotNet.Diagnosers.CompositeDiagnoser.html",
    "title": "Class CompositeDiagnoser | BenchmarkDotNet",
    "keywords": "Class CompositeDiagnoser Inheritance System.Object CompositeDiagnoser Implements IDiagnoser Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Diagnosers Assembly : BenchmarkDotNet.dll Syntax public class CompositeDiagnoser : IDiagnoser Constructors CompositeDiagnoser(IDiagnoser[]) Declaration public CompositeDiagnoser(params IDiagnoser[] diagnosers) Parameters Type Name Description IDiagnoser [] diagnosers Properties Analysers Declaration public IEnumerable<IAnalyser> Analysers { get; } Property Value Type Description System.Collections.Generic.IEnumerable < IAnalyser > Exporters Declaration public IEnumerable<IExporter> Exporters { get; } Property Value Type Description System.Collections.Generic.IEnumerable < IExporter > Ids Declaration public IEnumerable<string> Ids { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.String > Methods DisplayResults(ILogger) Declaration public void DisplayResults(ILogger logger) Parameters Type Name Description ILogger logger GetColumnProvider() Declaration public IColumnProvider GetColumnProvider() Returns Type Description IColumnProvider GetRunMode(Benchmark) Declaration public RunMode GetRunMode(Benchmark benchmark) Parameters Type Name Description Benchmark benchmark Returns Type Description RunMode Handle(HostSignal, DiagnoserActionParameters) Declaration public void Handle(HostSignal signal, DiagnoserActionParameters parameters) Parameters Type Name Description HostSignal signal DiagnoserActionParameters parameters ProcessResults(DiagnoserResults) Declaration public void ProcessResults(DiagnoserResults results) Parameters Type Name Description DiagnoserResults results Validate(ValidationParameters) Declaration public IEnumerable<ValidationError> Validate(ValidationParameters validationParameters) Parameters Type Name Description ValidationParameters validationParameters Returns Type Description System.Collections.Generic.IEnumerable < ValidationError > Implements IDiagnoser Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Diagnosers.MemoryDiagnoser.html": {
    "href": "api/BenchmarkDotNet.Diagnosers.MemoryDiagnoser.html",
    "title": "Class MemoryDiagnoser | BenchmarkDotNet",
    "keywords": "Class MemoryDiagnoser Inheritance System.Object MemoryDiagnoser Implements IDiagnoser Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Diagnosers Assembly : BenchmarkDotNet.dll Syntax public class MemoryDiagnoser : IDiagnoser Fields Default Declaration public static readonly MemoryDiagnoser Default Field Value Type Description MemoryDiagnoser DiagnoserId Declaration public const string DiagnoserId = \"MemoryDiagnoser\" Field Value Type Description System.String Properties Analysers Declaration public IEnumerable<IAnalyser> Analysers { get; } Property Value Type Description System.Collections.Generic.IEnumerable < IAnalyser > Exporters Declaration public IEnumerable<IExporter> Exporters { get; } Property Value Type Description System.Collections.Generic.IEnumerable < IExporter > Ids Declaration public IEnumerable<string> Ids { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.String > Methods DisplayResults(ILogger) Declaration public void DisplayResults(ILogger logger) Parameters Type Name Description ILogger logger GetColumnProvider() Declaration public IColumnProvider GetColumnProvider() Returns Type Description IColumnProvider GetRunMode(Benchmark) Declaration public RunMode GetRunMode(Benchmark benchmark) Parameters Type Name Description Benchmark benchmark Returns Type Description RunMode Handle(HostSignal, DiagnoserActionParameters) Declaration public void Handle(HostSignal signal, DiagnoserActionParameters parameters) Parameters Type Name Description HostSignal signal DiagnoserActionParameters parameters ProcessResults(DiagnoserResults) Declaration public void ProcessResults(DiagnoserResults results) Parameters Type Name Description DiagnoserResults results Validate(ValidationParameters) Declaration public IEnumerable<ValidationError> Validate(ValidationParameters validationParameters) Parameters Type Name Description ValidationParameters validationParameters Returns Type Description System.Collections.Generic.IEnumerable < ValidationError > Implements IDiagnoser Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Jobs.RyuJitX64JobAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Jobs.RyuJitX64JobAttribute.html",
    "title": "Class RyuJitX64JobAttribute | BenchmarkDotNet",
    "keywords": "Class RyuJitX64JobAttribute Inheritance System.Object System.Attribute JobConfigBaseAttribute RyuJitX64JobAttribute Implements IConfigSource Inherited Members JobConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Jobs Assembly : BenchmarkDotNet.dll Syntax public class RyuJitX64JobAttribute : JobConfigBaseAttribute, IConfigSource Constructors RyuJitX64JobAttribute() Declaration public RyuJitX64JobAttribute() Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Engines.Engine.Signals.html": {
    "href": "api/BenchmarkDotNet.Engines.Engine.Signals.html",
    "title": "Class Engine.Signals | BenchmarkDotNet",
    "keywords": "Class Engine.Signals Inheritance System.Object Engine.Signals Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Engines Assembly : BenchmarkDotNet.dll Syntax public static class Signals Fields Acknowledgment Declaration public const string Acknowledgment = \"Acknowledgment\" Field Value Type Description System.String DiagnoserIsAttachedParam Declaration public const string DiagnoserIsAttachedParam = \"diagnoserAttached\" Field Value Type Description System.String Methods ToMessage(HostSignal) Declaration public static string ToMessage(HostSignal signal) Parameters Type Name Description HostSignal signal Returns Type Description System.String TryGetSignal(String, out HostSignal) Declaration public static bool TryGetSignal(string message, out HostSignal signal) Parameters Type Name Description System.String message HostSignal signal Returns Type Description System.Boolean"
  },
  "api/BenchmarkDotNet.Exporters.Csv.CsvExporter.html": {
    "href": "api/BenchmarkDotNet.Exporters.Csv.CsvExporter.html",
    "title": "Class CsvExporter | BenchmarkDotNet",
    "keywords": "Class CsvExporter Inheritance System.Object ExporterBase CsvExporter Implements IExporter Inherited Members ExporterBase.Name ExporterBase.FileNameSuffix ExporterBase.FileCaption ExporterBase.ExportToFiles(Summary, ILogger) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Exporters.Csv Assembly : BenchmarkDotNet.dll Syntax public class CsvExporter : ExporterBase, IExporter Constructors CsvExporter(CsvSeparator) Declaration public CsvExporter(CsvSeparator separator) Parameters Type Name Description CsvSeparator separator CsvExporter(CsvSeparator, ISummaryStyle) Declaration public CsvExporter(CsvSeparator separator, ISummaryStyle style) Parameters Type Name Description CsvSeparator separator ISummaryStyle style Fields Default Declaration public static readonly IExporter Default Field Value Type Description IExporter Properties FileExtension Declaration protected override string FileExtension { get; } Property Value Type Description System.String Overrides ExporterBase.FileExtension Methods ExportToLog(Summary, ILogger) Declaration public override void ExportToLog(Summary summary, ILogger logger) Parameters Type Name Description Summary summary ILogger logger Overrides ExporterBase.ExportToLog(Summary, ILogger) Implements IExporter Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Extensions.html": {
    "href": "api/BenchmarkDotNet.Extensions.html",
    "title": "Namespace BenchmarkDotNet.Extensions | BenchmarkDotNet",
    "keywords": "Namespace BenchmarkDotNet.Extensions Classes CommonExtensions ConfigurationExtensions ReportExtensions StatisticsExtensions StringAndTextExtensions"
  },
  "api/BenchmarkDotNet.Jobs.JobExtensions.html": {
    "href": "api/BenchmarkDotNet.Jobs.JobExtensions.html",
    "title": "Class JobExtensions | BenchmarkDotNet",
    "keywords": "Class JobExtensions Inheritance System.Object JobExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Jobs Assembly : BenchmarkDotNet.dll Syntax public static class JobExtensions Methods AsBaseline(Job) Declaration public static Job AsBaseline(this Job job) Parameters Type Name Description Job job Returns Type Description Job RunOncePerIteration(Job) Declaration public static Job RunOncePerIteration(this Job job) Parameters Type Name Description Job job Returns Type Description Job With(Job, IEngineFactory) Declaration public static Job With(this Job job, IEngineFactory engineFactory) Parameters Type Name Description Job job IEngineFactory engineFactory Returns Type Description Job With(Job, RunStrategy) Declaration public static Job With(this Job job, RunStrategy strategy) Parameters Type Name Description Job job RunStrategy strategy Returns Type Description Job With(Job, Jit) Declaration public static Job With(this Job job, Jit jit) Parameters Type Name Description Job job Jit jit Returns Type Description Job With(Job, Platform) Declaration public static Job With(this Job job, Platform platform) Parameters Type Name Description Job job Platform platform Returns Type Description Job With(Job, Runtime) Declaration public static Job With(this Job job, Runtime runtime) Parameters Type Name Description Job job Runtime runtime Returns Type Description Job With(Job, IClock) Declaration public static Job With(this Job job, IClock clock) Parameters Type Name Description Job job IClock clock Returns Type Description Job With(Job, GcMode) Declaration public static Job With(this Job job, GcMode gc) Parameters Type Name Description Job job GcMode gc Returns Type Description Job With(Job, IToolchain) Declaration public static Job With(this Job job, IToolchain toolchain) Parameters Type Name Description Job job IToolchain toolchain Returns Type Description Job With(Job, IReadOnlyList<Argument>) Declaration public static Job With(this Job job, IReadOnlyList<Argument> arguments) Parameters Type Name Description Job job System.Collections.Generic.IReadOnlyList < Argument > arguments Returns Type Description Job With(Job, IReadOnlyList<EnvironmentVariable>) Declaration public static Job With(this Job job, IReadOnlyList<EnvironmentVariable> environmentVariables) Parameters Type Name Description Job job System.Collections.Generic.IReadOnlyList < EnvironmentVariable > environmentVariables Returns Type Description Job WithAffinity(Job, IntPtr) Declaration public static Job WithAffinity(this Job job, IntPtr affinity) Parameters Type Name Description Job job System.IntPtr affinity Returns Type Description Job WithAnalyzeLaunchVariance(Job, Boolean) Declaration public static Job WithAnalyzeLaunchVariance(this Job job, bool value) Parameters Type Name Description Job job System.Boolean value Returns Type Description Job WithCustomBuildConfiguration(Job, String) Declaration public static Job WithCustomBuildConfiguration(this Job job, string buildConfiguration) Parameters Type Name Description Job job System.String buildConfiguration Returns Type Description Job WithEvaluateOverhead(Job, Boolean) Declaration public static Job WithEvaluateOverhead(this Job job, bool value) Parameters Type Name Description Job job System.Boolean value Returns Type Description Job WithGcAllowVeryLargeObjects(Job, Boolean) Declaration public static Job WithGcAllowVeryLargeObjects(this Job job, bool value) Parameters Type Name Description Job job System.Boolean value Returns Type Description Job WithGcConcurrent(Job, Boolean) Declaration public static Job WithGcConcurrent(this Job job, bool value) Parameters Type Name Description Job job System.Boolean value Returns Type Description Job WithGcCpuGroups(Job, Boolean) Declaration public static Job WithGcCpuGroups(this Job job, bool value) Parameters Type Name Description Job job System.Boolean value Returns Type Description Job WithGcForce(Job, Boolean) Declaration public static Job WithGcForce(this Job job, bool value) Parameters Type Name Description Job job System.Boolean value Returns Type Description Job WithGcRetainVm(Job, Boolean) Declaration public static Job WithGcRetainVm(this Job job, bool value) Parameters Type Name Description Job job System.Boolean value Returns Type Description Job WithGcServer(Job, Boolean) Declaration public static Job WithGcServer(this Job job, bool value) Parameters Type Name Description Job job System.Boolean value Returns Type Description Job WithId(Job, String) Declaration public static Job WithId(this Job job, string id) Parameters Type Name Description Job job System.String id Returns Type Description Job WithInvocationCount(Job, Int32) Declaration public static Job WithInvocationCount(this Job job, int count) Parameters Type Name Description Job job System.Int32 count Returns Type Description Job WithIsBaseline(Job, Boolean) Declaration public static Job WithIsBaseline(this Job job, bool value) Parameters Type Name Description Job job System.Boolean value Returns Type Description Job WithIterationTime(Job, TimeInterval) Declaration public static Job WithIterationTime(this Job job, TimeInterval time) Parameters Type Name Description Job job TimeInterval time Returns Type Description Job WithLaunchCount(Job, Int32) Declaration public static Job WithLaunchCount(this Job job, int count) Parameters Type Name Description Job job System.Int32 count Returns Type Description Job WithMaxAbsoluteError(Job, TimeInterval) Declaration public static Job WithMaxAbsoluteError(this Job job, TimeInterval value) Parameters Type Name Description Job job TimeInterval value Returns Type Description Job WithMaxRelativeError(Job, Double) Declaration public static Job WithMaxRelativeError(this Job job, double value) Parameters Type Name Description Job job System.Double value Returns Type Description Job WithMaxTargetIterationCount(Job, Int32) Declaration public static Job WithMaxTargetIterationCount(this Job job, int count) Parameters Type Name Description Job job System.Int32 count Returns Type Description Job WithMinInvokeCount(Job, Int32) Declaration public static Job WithMinInvokeCount(this Job job, int value) Parameters Type Name Description Job job System.Int32 value Returns Type Description Job WithMinIterationTime(Job, TimeInterval) Declaration public static Job WithMinIterationTime(this Job job, TimeInterval value) Parameters Type Name Description Job job TimeInterval value Returns Type Description Job WithMinTargetIterationCount(Job, Int32) Declaration public static Job WithMinTargetIterationCount(this Job job, int count) Parameters Type Name Description Job job System.Int32 count Returns Type Description Job WithOutlierMode(Job, OutlierMode) Declaration public static Job WithOutlierMode(this Job job, OutlierMode value) Parameters Type Name Description Job job OutlierMode value Returns Type Description Job WithRemoveOutliers(Job, Boolean) Declaration [Obsolete(\"Please use the new WithOutlierMode instead\")] public static Job WithRemoveOutliers(this Job job, bool value) Parameters Type Name Description Job job System.Boolean value Returns Type Description Job WithTargetCount(Job, Int32) Declaration public static Job WithTargetCount(this Job job, int count) Parameters Type Name Description Job job System.Int32 count Returns Type Description Job WithUnrollFactor(Job, Int32) Declaration public static Job WithUnrollFactor(this Job job, int factor) Parameters Type Name Description Job job System.Int32 factor Returns Type Description Job WithWarmupCount(Job, Int32) Declaration public static Job WithWarmupCount(this Job job, int count) Parameters Type Name Description Job job System.Int32 count Returns Type Description Job"
  },
  "api/BenchmarkDotNet.Diagnosers.DiagnoserResults.html": {
    "href": "api/BenchmarkDotNet.Diagnosers.DiagnoserResults.html",
    "title": "Class DiagnoserResults | BenchmarkDotNet",
    "keywords": "Class DiagnoserResults Inheritance System.Object DiagnoserResults Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Diagnosers Assembly : BenchmarkDotNet.dll Syntax public class DiagnoserResults Constructors DiagnoserResults(Benchmark, Int64, GcStats) Declaration public DiagnoserResults(Benchmark benchmark, long totalOperations, GcStats gcStats) Parameters Type Name Description Benchmark benchmark System.Int64 totalOperations GcStats gcStats Properties Benchmark Declaration public Benchmark Benchmark { get; } Property Value Type Description Benchmark GcStats Declaration public GcStats GcStats { get; } Property Value Type Description GcStats TotalOperations Declaration public long TotalOperations { get; } Property Value Type Description System.Int64 Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Diagnosers.IL.html": {
    "href": "api/BenchmarkDotNet.Diagnosers.IL.html",
    "title": "Class IL | BenchmarkDotNet",
    "keywords": "Class IL Inheritance System.Object Code IL Inherited Members Code.TextRepresentation Code.Comment System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Diagnosers Assembly : BenchmarkDotNet.dll Syntax public class IL : Code Properties Offset Declaration public int Offset { get; set; } Property Value Type Description System.Int32 Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Validators.ExecutionValidator.html": {
    "href": "api/BenchmarkDotNet.Validators.ExecutionValidator.html",
    "title": "Class ExecutionValidator | BenchmarkDotNet",
    "keywords": "Class ExecutionValidator Inheritance System.Object ExecutionValidatorBase ExecutionValidator Implements IValidator Inherited Members ExecutionValidatorBase.TreatsWarningsAsErrors ExecutionValidatorBase.Validate(ValidationParameters) ExecutionValidatorBase.GetDisplayExceptionMessage(Exception) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Validators Assembly : BenchmarkDotNet.dll Syntax public class ExecutionValidator : ExecutionValidatorBase, IValidator Fields DontFailOnError Declaration public static readonly ExecutionValidator DontFailOnError Field Value Type Description ExecutionValidator FailOnError Declaration public static readonly ExecutionValidator FailOnError Field Value Type Description ExecutionValidator Methods ExecuteBenchmarks(Object, IEnumerable<Benchmark>, List<ValidationError>) Declaration protected override void ExecuteBenchmarks(object benchmarkTypeInstance, IEnumerable<Benchmark> benchmarks, List<ValidationError> errors) Parameters Type Name Description System.Object benchmarkTypeInstance System.Collections.Generic.IEnumerable < Benchmark > benchmarks System.Collections.Generic.List < ValidationError > errors Overrides ExecutionValidatorBase.ExecuteBenchmarks(Object, IEnumerable<Benchmark>, List<ValidationError>) Implements IValidator Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Toolchains.Roslyn.Builder.html": {
    "href": "api/BenchmarkDotNet.Toolchains.Roslyn.Builder.html",
    "title": "Class Builder | BenchmarkDotNet",
    "keywords": "Class Builder Inheritance System.Object Builder Implements IBuilder Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Toolchains.Roslyn Assembly : BenchmarkDotNet.dll Syntax public class Builder : IBuilder Methods Build(GenerateResult, BuildPartition, ILogger) Declaration public BuildResult Build(GenerateResult generateResult, BuildPartition buildPartition, ILogger logger) Parameters Type Name Description GenerateResult generateResult BuildPartition buildPartition ILogger logger Returns Type Description BuildResult Implements IBuilder Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Toolchains.Roslyn.Generator.html": {
    "href": "api/BenchmarkDotNet.Toolchains.Roslyn.Generator.html",
    "title": "Class Generator | BenchmarkDotNet",
    "keywords": "Class Generator Inheritance System.Object GeneratorBase Generator Implements IGenerator Inherited Members GeneratorBase.GenerateProject(BuildPartition, ILogger, String) GeneratorBase.GetBinariesDirectoryPath(String, String) GeneratorBase.GetExecutableExtension() GeneratorBase.GetProjectFilePath(String) GeneratorBase.CopyAllRequiredFiles(ArtifactsPaths) GeneratorBase.GenerateNuGetConfig(ArtifactsPaths) GeneratorBase.GenerateProject(BuildPartition, ArtifactsPaths, ILogger) GeneratorBase.GetPackagesDirectoryPath(String) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Toolchains.Roslyn Assembly : BenchmarkDotNet.dll Syntax public class Generator : GeneratorBase, IGenerator Methods GenerateBuildScript(BuildPartition, ArtifactsPaths) Declaration protected override void GenerateBuildScript(BuildPartition buildPartition, ArtifactsPaths artifactsPaths) Parameters Type Name Description BuildPartition buildPartition ArtifactsPaths artifactsPaths Overrides GeneratorBase.GenerateBuildScript(BuildPartition, ArtifactsPaths) GetArtifactsToCleanup(ArtifactsPaths) Declaration protected override string[] GetArtifactsToCleanup(ArtifactsPaths artifactsPaths) Parameters Type Name Description ArtifactsPaths artifactsPaths Returns Type Description System.String [] Overrides GeneratorBase.GetArtifactsToCleanup(ArtifactsPaths) GetBuildArtifactsDirectoryPath(BuildPartition, String) Declaration protected override string GetBuildArtifactsDirectoryPath(BuildPartition buildPartition, string programName) Parameters Type Name Description BuildPartition buildPartition System.String programName Returns Type Description System.String Overrides GeneratorBase.GetBuildArtifactsDirectoryPath(BuildPartition, String) Implements IGenerator Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Toolchains.Roslyn.RoslynToolchain.html": {
    "href": "api/BenchmarkDotNet.Toolchains.Roslyn.RoslynToolchain.html",
    "title": "Class RoslynToolchain | BenchmarkDotNet",
    "keywords": "Class RoslynToolchain Build a benchmark program with the Roslyn compiler. Inheritance System.Object Toolchain RoslynToolchain Implements IToolchain Inherited Members Toolchain.Name Toolchain.Generator Toolchain.Builder Toolchain.Executor Toolchain.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Toolchains.Roslyn Assembly : BenchmarkDotNet.dll Syntax public class RoslynToolchain : Toolchain, IToolchain Constructors RoslynToolchain() Declaration public RoslynToolchain() Fields Instance Declaration public static IToolchain Instance Field Value Type Description IToolchain Methods IsSupported(Benchmark, ILogger, IResolver) Declaration public override bool IsSupported(Benchmark benchmark, ILogger logger, IResolver resolver) Parameters Type Name Description Benchmark benchmark ILogger logger IResolver resolver Returns Type Description System.Boolean Overrides Toolchain.IsSupported(Benchmark, ILogger, IResolver) Implements IToolchain Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Analysers.ConclusionKind.html": {
    "href": "api/BenchmarkDotNet.Analysers.ConclusionKind.html",
    "title": "Enum ConclusionKind | BenchmarkDotNet",
    "keywords": "Enum ConclusionKind Namespace : BenchmarkDotNet.Analysers Assembly : BenchmarkDotNet.dll Syntax public enum ConclusionKind Fields Name Description Error Hint Warning Extension Methods CommonExtensions.IsOneOf<ConclusionKind>(ConclusionKind[])"
  },
  "api/BenchmarkDotNet.Attributes.CleanupAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.CleanupAttribute.html",
    "title": "Class CleanupAttribute | BenchmarkDotNet",
    "keywords": "Class CleanupAttribute Marks method to be executed after all benchmark iterations. It's going to be executed only once, after all benchmark runs. Inheritance System.Object System.Attribute TargetedAttribute GlobalCleanupAttribute CleanupAttribute Inherited Members TargetedAttribute.Target System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes Assembly : BenchmarkDotNet.dll Syntax [AttributeUsage(AttributeTargets.Method)] [Obsolete(\"Use GlobalCleanupAttribute\")] public class CleanupAttribute : GlobalCleanupAttribute Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Columns.KurtosisColumnAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Columns.KurtosisColumnAttribute.html",
    "title": "Class KurtosisColumnAttribute | BenchmarkDotNet",
    "keywords": "Class KurtosisColumnAttribute Inheritance System.Object System.Attribute ColumnConfigBaseAttribute KurtosisColumnAttribute Implements IConfigSource Inherited Members ColumnConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Columns Assembly : BenchmarkDotNet.dll Syntax public class KurtosisColumnAttribute : ColumnConfigBaseAttribute, IConfigSource Constructors KurtosisColumnAttribute() Declaration public KurtosisColumnAttribute() Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Columns.Q1ColumnAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Columns.Q1ColumnAttribute.html",
    "title": "Class Q1ColumnAttribute | BenchmarkDotNet",
    "keywords": "Class Q1ColumnAttribute Inheritance System.Object System.Attribute ColumnConfigBaseAttribute Q1ColumnAttribute Implements IConfigSource Inherited Members ColumnConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Columns Assembly : BenchmarkDotNet.dll Syntax public class Q1ColumnAttribute : ColumnConfigBaseAttribute, IConfigSource Constructors Q1ColumnAttribute() Declaration public Q1ColumnAttribute() Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Loggers.StreamLogger.html": {
    "href": "api/BenchmarkDotNet.Loggers.StreamLogger.html",
    "title": "Class StreamLogger | BenchmarkDotNet",
    "keywords": "Class StreamLogger Inheritance System.Object StreamLogger Implements ILogger Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Loggers Assembly : BenchmarkDotNet.dll Syntax public class StreamLogger : ILogger Constructors StreamLogger(StreamWriter) Declaration public StreamLogger(StreamWriter writer) Parameters Type Name Description System.IO.StreamWriter writer StreamLogger(String, Boolean) Declaration public StreamLogger(string filePath, bool append = false) Parameters Type Name Description System.String filePath System.Boolean append Methods Write(LogKind, String) Declaration public void Write(LogKind logKind, string text) Parameters Type Name Description LogKind logKind System.String text WriteLine() Declaration public void WriteLine() WriteLine(LogKind, String) Declaration public void WriteLine(LogKind logKind, string text) Parameters Type Name Description LogKind logKind System.String text Implements ILogger Extension Methods CommonExtensions.IsOneOf<T>(T, T[]) LoggerExtensions.WriteLine(ILogger, String) LoggerExtensions.WriteLineHelp(ILogger, String) LoggerExtensions.WriteLineHeader(ILogger, String) LoggerExtensions.WriteLineResult(ILogger, String) LoggerExtensions.WriteLineStatistic(ILogger, String) LoggerExtensions.WriteLineInfo(ILogger, String) LoggerExtensions.WriteLineError(ILogger, String) LoggerExtensions.WriteLineHint(ILogger, String) LoggerExtensions.Write(ILogger, String) LoggerExtensions.WriteHelp(ILogger, String) LoggerExtensions.WriteHeader(ILogger, String) LoggerExtensions.WriteResult(ILogger, String) LoggerExtensions.WriteStatistic(ILogger, String) LoggerExtensions.WriteInfo(ILogger, String) LoggerExtensions.WriteError(ILogger, String) LoggerExtensions.WriteHint(ILogger, String)"
  },
  "api/BenchmarkDotNet.Mathematics.ConfidenceInterval.html": {
    "href": "api/BenchmarkDotNet.Mathematics.ConfidenceInterval.html",
    "title": "Struct ConfidenceInterval | BenchmarkDotNet",
    "keywords": "Struct ConfidenceInterval Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Mathematics Assembly : BenchmarkDotNet.dll Syntax public struct ConfidenceInterval Constructors ConfidenceInterval(Double, Double, Int32, ConfidenceLevel) Declaration public ConfidenceInterval(double mean, double standardError, int n, ConfidenceLevel level = ConfidenceLevel.L999) Parameters Type Name Description System.Double mean System.Double standardError System.Int32 n ConfidenceLevel level Properties Level Declaration public ConfidenceLevel Level { get; } Property Value Type Description ConfidenceLevel Lower Declaration public double Lower { get; } Property Value Type Description System.Double Margin Declaration public double Margin { get; } Property Value Type Description System.Double Mean Declaration public double Mean { get; } Property Value Type Description System.Double N Declaration public int N { get; } Property Value Type Description System.Int32 StandardError Declaration public double StandardError { get; } Property Value Type Description System.Double Upper Declaration public double Upper { get; } Property Value Type Description System.Double Methods Contains(Double) Declaration public bool Contains(double value) Parameters Type Name Description System.Double value Returns Type Description System.Boolean ToStr(Boolean) Declaration public string ToStr(bool showLevel = true) Parameters Type Name Description System.Boolean showLevel Returns Type Description System.String ToTimeStr(TimeUnit, Boolean) Declaration public string ToTimeStr(TimeUnit unit = null, bool showLevel = true) Parameters Type Name Description TimeUnit unit System.Boolean showLevel Returns Type Description System.String Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Mathematics.ConfidenceLevel.html": {
    "href": "api/BenchmarkDotNet.Mathematics.ConfidenceLevel.html",
    "title": "Enum ConfidenceLevel | BenchmarkDotNet",
    "keywords": "Enum ConfidenceLevel Namespace : BenchmarkDotNet.Mathematics Assembly : BenchmarkDotNet.dll Syntax public enum ConfidenceLevel Fields Name Description L50 50.0% confidence interval L70 70.0% confidence interval L75 75.0% confidence interval L80 80.0% confidence interval L85 85.0% confidence interval L90 90.0% confidence interval L92 92.0% confidence interval L95 95.0% confidence interval L96 96.0% confidence interval L97 97.0% confidence interval L98 98.0% confidence interval L99 99.0% confidence interval L999 99.9% confidence interval Extension Methods CommonExtensions.IsOneOf<ConfidenceLevel>(ConfidenceLevel[]) ConfidenceLevelExtensions.GetZValue(Int32) ConfidenceLevelExtensions.ToPercentStr() ConfidenceLevelExtensions.ToPercent()"
  },
  "api/BenchmarkDotNet.Portability.Cpu.CpuInfo.html": {
    "href": "api/BenchmarkDotNet.Portability.Cpu.CpuInfo.html",
    "title": "Class CpuInfo | BenchmarkDotNet",
    "keywords": "Class CpuInfo Inheritance System.Object CpuInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Portability.Cpu Assembly : BenchmarkDotNet.dll Syntax public class CpuInfo Constructors CpuInfo(String, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>) Declaration public CpuInfo(string processorName, int? physicalProcessorCount, int? physicalCoreCount, int? logicalCoreCount) Parameters Type Name Description System.String processorName System.Nullable < System.Int32 > physicalProcessorCount System.Nullable < System.Int32 > physicalCoreCount System.Nullable < System.Int32 > logicalCoreCount Properties LogicalCoreCount Declaration public int? LogicalCoreCount { get; } Property Value Type Description System.Nullable < System.Int32 > PhysicalCoreCount Declaration public int? PhysicalCoreCount { get; } Property Value Type Description System.Nullable < System.Int32 > PhysicalProcessorCount Declaration public int? PhysicalProcessorCount { get; } Property Value Type Description System.Nullable < System.Int32 > ProcessorName Declaration public string ProcessorName { get; } Property Value Type Description System.String Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Exporters.BenchmarkReportExporter.html": {
    "href": "api/BenchmarkDotNet.Exporters.BenchmarkReportExporter.html",
    "title": "Class BenchmarkReportExporter | BenchmarkDotNet",
    "keywords": "Class BenchmarkReportExporter Inheritance System.Object ExporterBase BenchmarkReportExporter Implements IExporter Inherited Members ExporterBase.Name ExporterBase.FileExtension ExporterBase.FileNameSuffix ExporterBase.FileCaption ExporterBase.ExportToFiles(Summary, ILogger) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Exporters Assembly : BenchmarkDotNet.dll Syntax public class BenchmarkReportExporter : ExporterBase, IExporter Fields Default Declaration public static readonly IExporter Default Field Value Type Description IExporter Methods ExportToLog(Summary, ILogger) Declaration public override void ExportToLog(Summary summary, ILogger logger) Parameters Type Name Description Summary summary ILogger logger Overrides ExporterBase.ExportToLog(Summary, ILogger) Implements IExporter Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Filters.AnyCategoriesFilter.html": {
    "href": "api/BenchmarkDotNet.Filters.AnyCategoriesFilter.html",
    "title": "Class AnyCategoriesFilter | BenchmarkDotNet",
    "keywords": "Class AnyCategoriesFilter Filter benchmarks which have any of the target categories Inheritance System.Object AnyCategoriesFilter Implements IFilter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Filters Assembly : BenchmarkDotNet.dll Syntax public class AnyCategoriesFilter : IFilter Constructors AnyCategoriesFilter(String[]) Declaration public AnyCategoriesFilter(string[] targetCategories) Parameters Type Name Description System.String [] targetCategories Methods Predicate(Benchmark) Declaration public bool Predicate(Benchmark benchmark) Parameters Type Name Description Benchmark benchmark Returns Type Description System.Boolean Implements IFilter Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Filters.CategoryFilter.html": {
    "href": "api/BenchmarkDotNet.Filters.CategoryFilter.html",
    "title": "Class CategoryFilter | BenchmarkDotNet",
    "keywords": "Class CategoryFilter Filter benchmarks which have the target category Inheritance System.Object CategoryFilter Implements IFilter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Filters Assembly : BenchmarkDotNet.dll Syntax public class CategoryFilter : IFilter Constructors CategoryFilter(String) Declaration public CategoryFilter(string targetCategory) Parameters Type Name Description System.String targetCategory Methods Predicate(Benchmark) Declaration public bool Predicate(Benchmark benchmark) Parameters Type Name Description Benchmark benchmark Returns Type Description System.Boolean Implements IFilter Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Reports.SummaryTable.SummaryTableColumn.TextJustification.html": {
    "href": "api/BenchmarkDotNet.Reports.SummaryTable.SummaryTableColumn.TextJustification.html",
    "title": "Enum SummaryTable.SummaryTableColumn.TextJustification | BenchmarkDotNet",
    "keywords": "Enum SummaryTable.SummaryTableColumn.TextJustification Namespace : BenchmarkDotNet.Reports Assembly : BenchmarkDotNet.dll Syntax public enum TextJustification Fields Name Description Left Right Extension Methods CommonExtensions.IsOneOf<SummaryTable.SummaryTableColumn.TextJustification>(SummaryTable.SummaryTableColumn.TextJustification[])"
  },
  "api/BenchmarkDotNet.Reports.SummaryTable.SummaryTableColumn.html": {
    "href": "api/BenchmarkDotNet.Reports.SummaryTable.SummaryTableColumn.html",
    "title": "Class SummaryTable.SummaryTableColumn | BenchmarkDotNet",
    "keywords": "Class SummaryTable.SummaryTableColumn Inheritance System.Object SummaryTable.SummaryTableColumn Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Reports Assembly : BenchmarkDotNet.dll Syntax public class SummaryTableColumn Constructors SummaryTableColumn(SummaryTable, Int32, IColumn) Declaration public SummaryTableColumn(SummaryTable table, int index, IColumn column) Parameters Type Name Description SummaryTable table System.Int32 index IColumn column Properties Content Declaration public string[] Content { get; } Property Value Type Description System.String [] Header Declaration public string Header { get; } Property Value Type Description System.String Index Declaration public int Index { get; } Property Value Type Description System.Int32 IsDefault Declaration public bool IsDefault { get; } Property Value Type Description System.Boolean Justify Declaration public SummaryTable.SummaryTableColumn.TextJustification Justify { get; } Property Value Type Description SummaryTable.SummaryTableColumn.TextJustification NeedToShow Declaration public bool NeedToShow { get; } Property Value Type Description System.Boolean OriginalColumn Declaration public IColumn OriginalColumn { get; } Property Value Type Description IColumn Width Declaration public int Width { get; } Property Value Type Description System.Int32 Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Toolchains.DotNetCli.DotNetCliExecutor.html": {
    "href": "api/BenchmarkDotNet.Toolchains.DotNetCli.DotNetCliExecutor.html",
    "title": "Class DotNetCliExecutor | BenchmarkDotNet",
    "keywords": "Class DotNetCliExecutor Inheritance System.Object DotNetCliExecutor Implements IExecutor Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Toolchains.DotNetCli Assembly : BenchmarkDotNet.dll Syntax public class DotNetCliExecutor : IExecutor Constructors DotNetCliExecutor(String) Declaration public DotNetCliExecutor(string customDotNetCliPath) Parameters Type Name Description System.String customDotNetCliPath Methods Execute(ExecuteParameters) Declaration public ExecuteResult Execute(ExecuteParameters executeParameters) Parameters Type Name Description ExecuteParameters executeParameters Returns Type Description ExecuteResult Implements IExecutor Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Toolchains.DotNetCli.DotNetCliGenerator.html": {
    "href": "api/BenchmarkDotNet.Toolchains.DotNetCli.DotNetCliGenerator.html",
    "title": "Class DotNetCliGenerator | BenchmarkDotNet",
    "keywords": "Class DotNetCliGenerator Inheritance System.Object GeneratorBase DotNetCliGenerator CsProjGenerator Implements IGenerator Inherited Members GeneratorBase.GenerateProject(BuildPartition, ILogger, String) GeneratorBase.GetBinariesDirectoryPath(String, String) GeneratorBase.GetProjectFilePath(String) GeneratorBase.GenerateNuGetConfig(ArtifactsPaths) GeneratorBase.GenerateProject(BuildPartition, ArtifactsPaths, ILogger) GeneratorBase.GetPackagesDirectoryPath(String) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Toolchains.DotNetCli Assembly : BenchmarkDotNet.dll Syntax public abstract class DotNetCliGenerator : GeneratorBase, IGenerator Constructors DotNetCliGenerator(DotNetCliBuilder, String, String, Func<Platform, String>, String, String) Declaration protected DotNetCliGenerator(DotNetCliBuilder builder, string targetFrameworkMoniker, string extraDependencies, Func<Platform, string> platformProvider, string imports, string runtime = null) Parameters Type Name Description DotNetCliBuilder builder System.String targetFrameworkMoniker System.String extraDependencies System.Func < Platform , System.String > platformProvider System.String imports System.String runtime Properties ExtraDependencies Declaration protected string ExtraDependencies { get; } Property Value Type Description System.String Imports Declaration protected string Imports { get; } Property Value Type Description System.String PlatformProvider Declaration protected Func<Platform, string> PlatformProvider { get; } Property Value Type Description System.Func < Platform , System.String > Runtime Declaration protected string Runtime { get; } Property Value Type Description System.String TargetFrameworkMoniker Declaration protected string TargetFrameworkMoniker { get; } Property Value Type Description System.String Methods CopyAllRequiredFiles(ArtifactsPaths) Declaration protected override void CopyAllRequiredFiles(ArtifactsPaths artifactsPaths) Parameters Type Name Description ArtifactsPaths artifactsPaths Overrides GeneratorBase.CopyAllRequiredFiles(ArtifactsPaths) GenerateBuildScript(BuildPartition, ArtifactsPaths) Declaration protected override void GenerateBuildScript(BuildPartition buildPartition, ArtifactsPaths artifactsPaths) Parameters Type Name Description BuildPartition buildPartition ArtifactsPaths artifactsPaths Overrides GeneratorBase.GenerateBuildScript(BuildPartition, ArtifactsPaths) GetArtifactsToCleanup(ArtifactsPaths) Declaration protected override string[] GetArtifactsToCleanup(ArtifactsPaths artifactsPaths) Parameters Type Name Description ArtifactsPaths artifactsPaths Returns Type Description System.String [] Overrides GeneratorBase.GetArtifactsToCleanup(ArtifactsPaths) GetBuildArtifactsDirectoryPath(BuildPartition, String) we need our folder to be on the same level as the project that we want to reference we are limited by xprojs (by default compiles all .cs files in all subfolders, Program.cs could be doubled and fail the build) and also by nuget internal implementation like looking for global.json file in parent folders Declaration protected override string GetBuildArtifactsDirectoryPath(BuildPartition buildPartition, string programName) Parameters Type Name Description BuildPartition buildPartition System.String programName Returns Type Description System.String Overrides GeneratorBase.GetBuildArtifactsDirectoryPath(BuildPartition, String) GetExecutableExtension() Declaration protected override string GetExecutableExtension() Returns Type Description System.String Overrides GeneratorBase.GetExecutableExtension() SetCodeFileName(String, String) Declaration protected static string SetCodeFileName(string template, string codeFileName) Parameters Type Name Description System.String template System.String codeFileName Returns Type Description System.String SetPlatform(String, String) Declaration protected static string SetPlatform(string template, string platform) Parameters Type Name Description System.String template System.String platform Returns Type Description System.String SetTargetFrameworkMoniker(String, String) Declaration protected static string SetTargetFrameworkMoniker(string content, string targetFrameworkMoniker) Parameters Type Name Description System.String content System.String targetFrameworkMoniker Returns Type Description System.String Implements IGenerator Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Diagnosers.Asm.html": {
    "href": "api/BenchmarkDotNet.Diagnosers.Asm.html",
    "title": "Class Asm | BenchmarkDotNet",
    "keywords": "Class Asm Inheritance System.Object Code Asm Inherited Members Code.TextRepresentation Code.Comment System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Diagnosers Assembly : BenchmarkDotNet.dll Syntax public class Asm : Code Properties EndAddress The native end offset of this ASM representation Declaration public ulong EndAddress { get; set; } Property Value Type Description System.UInt64 StartAddress The native start offset of this ASM representation Declaration public ulong StartAddress { get; set; } Property Value Type Description System.UInt64 Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Diagnosers.MemoryDiagnoser.AllocationColumn.html": {
    "href": "api/BenchmarkDotNet.Diagnosers.MemoryDiagnoser.AllocationColumn.html",
    "title": "Class MemoryDiagnoser.AllocationColumn | BenchmarkDotNet",
    "keywords": "Class MemoryDiagnoser.AllocationColumn Inheritance System.Object MemoryDiagnoser.AllocationColumn Implements IColumn Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Diagnosers Assembly : BenchmarkDotNet.dll Syntax public class AllocationColumn : IColumn Constructors AllocationColumn(Dictionary<Benchmark, GcStats>) Declaration public AllocationColumn(Dictionary<Benchmark, GcStats> results) Parameters Type Name Description System.Collections.Generic.Dictionary < Benchmark , GcStats > results Properties AlwaysShow Declaration public bool AlwaysShow { get; } Property Value Type Description System.Boolean Category Declaration public ColumnCategory Category { get; } Property Value Type Description ColumnCategory ColumnName Declaration public string ColumnName { get; } Property Value Type Description System.String Id Declaration public string Id { get; } Property Value Type Description System.String IsNumeric Declaration public bool IsNumeric { get; } Property Value Type Description System.Boolean Legend Declaration public string Legend { get; } Property Value Type Description System.String PriorityInCategory Declaration public int PriorityInCategory { get; } Property Value Type Description System.Int32 UnitType Declaration public UnitType UnitType { get; } Property Value Type Description UnitType Methods GetValue(Summary, Benchmark) Declaration public string GetValue(Summary summary, Benchmark benchmark) Parameters Type Name Description Summary summary Benchmark benchmark Returns Type Description System.String GetValue(Summary, Benchmark, ISummaryStyle) Declaration public string GetValue(Summary summary, Benchmark benchmark, ISummaryStyle style) Parameters Type Name Description Summary summary Benchmark benchmark ISummaryStyle style Returns Type Description System.String IsAvailable(Summary) Declaration public bool IsAvailable(Summary summary) Parameters Type Name Description Summary summary Returns Type Description System.Boolean IsDefault(Summary, Benchmark) Declaration public bool IsDefault(Summary summary, Benchmark benchmark) Parameters Type Name Description Summary summary Benchmark benchmark Returns Type Description System.Boolean Implements IColumn Extension Methods ColumnExtensions.ToProvider(IColumn) CommonExtensions.GetColumnTitle(IColumn, ISummaryStyle) CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Diagnosers.MemoryDiagnoser.GCCollectionColumn.html": {
    "href": "api/BenchmarkDotNet.Diagnosers.MemoryDiagnoser.GCCollectionColumn.html",
    "title": "Class MemoryDiagnoser.GCCollectionColumn | BenchmarkDotNet",
    "keywords": "Class MemoryDiagnoser.GCCollectionColumn Inheritance System.Object MemoryDiagnoser.GCCollectionColumn Implements IColumn Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Diagnosers Assembly : BenchmarkDotNet.dll Syntax public class GCCollectionColumn : IColumn Constructors GCCollectionColumn(Dictionary<Benchmark, GcStats>, Int32) Declaration public GCCollectionColumn(Dictionary<Benchmark, GcStats> results, int generation) Parameters Type Name Description System.Collections.Generic.Dictionary < Benchmark , GcStats > results System.Int32 generation Properties AlwaysShow Declaration public bool AlwaysShow { get; } Property Value Type Description System.Boolean Category Declaration public ColumnCategory Category { get; } Property Value Type Description ColumnCategory ColumnName Declaration public string ColumnName { get; } Property Value Type Description System.String Id Declaration public string Id { get; } Property Value Type Description System.String IsNumeric Declaration public bool IsNumeric { get; } Property Value Type Description System.Boolean Legend Declaration public string Legend { get; } Property Value Type Description System.String PriorityInCategory Declaration public int PriorityInCategory { get; } Property Value Type Description System.Int32 UnitType Declaration public UnitType UnitType { get; } Property Value Type Description UnitType Methods GetValue(Summary, Benchmark) Declaration public string GetValue(Summary summary, Benchmark benchmark) Parameters Type Name Description Summary summary Benchmark benchmark Returns Type Description System.String GetValue(Summary, Benchmark, ISummaryStyle) Declaration public string GetValue(Summary summary, Benchmark benchmark, ISummaryStyle style) Parameters Type Name Description Summary summary Benchmark benchmark ISummaryStyle style Returns Type Description System.String IsAvailable(Summary) Declaration public bool IsAvailable(Summary summary) Parameters Type Name Description Summary summary Returns Type Description System.Boolean IsDefault(Summary, Benchmark) Declaration public bool IsDefault(Summary summary, Benchmark benchmark) Parameters Type Name Description Summary summary Benchmark benchmark Returns Type Description System.Boolean Implements IColumn Extension Methods ColumnExtensions.ToProvider(IColumn) CommonExtensions.GetColumnTitle(IColumn, ISummaryStyle) CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Toolchains.CsProj.CsProjClassicNetToolchain.html": {
    "href": "api/BenchmarkDotNet.Toolchains.CsProj.CsProjClassicNetToolchain.html",
    "title": "Class CsProjClassicNetToolchain | BenchmarkDotNet",
    "keywords": "Class CsProjClassicNetToolchain this toolchain is designed for the new .csprojs, to build .NET 4.x benchmarks from the context of .NET Core host process it does not work with the old .csprojs or project.json! Inheritance System.Object Toolchain CsProjClassicNetToolchain Implements IToolchain Inherited Members Toolchain.Name Toolchain.Generator Toolchain.Builder Toolchain.Executor Toolchain.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Toolchains.CsProj Assembly : BenchmarkDotNet.dll Syntax public class CsProjClassicNetToolchain : Toolchain, IToolchain Fields Current Declaration public static readonly Lazy<IToolchain> Current Field Value Type Description System.Lazy < IToolchain > Net46 Declaration public static readonly IToolchain Net46 Field Value Type Description IToolchain Net461 Declaration public static readonly IToolchain Net461 Field Value Type Description IToolchain Net462 Declaration public static readonly IToolchain Net462 Field Value Type Description IToolchain Net47 Declaration public static readonly IToolchain Net47 Field Value Type Description IToolchain Net471 Declaration public static readonly IToolchain Net471 Field Value Type Description IToolchain Net472 Declaration public static readonly IToolchain Net472 Field Value Type Description IToolchain Methods From(String) Declaration public static IToolchain From(string targetFrameworkMoniker) Parameters Type Name Description System.String targetFrameworkMoniker Returns Type Description IToolchain IsSupported(Benchmark, ILogger, IResolver) Declaration public override bool IsSupported(Benchmark benchmark, ILogger logger, IResolver resolver) Parameters Type Name Description Benchmark benchmark ILogger logger IResolver resolver Returns Type Description System.Boolean Overrides Toolchain.IsSupported(Benchmark, ILogger, IResolver) Implements IToolchain Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Toolchains.CsProj.CsProjCoreToolchain.html": {
    "href": "api/BenchmarkDotNet.Toolchains.CsProj.CsProjCoreToolchain.html",
    "title": "Class CsProjCoreToolchain | BenchmarkDotNet",
    "keywords": "Class CsProjCoreToolchain Inheritance System.Object Toolchain CsProjCoreToolchain Implements IToolchain Inherited Members Toolchain.Name Toolchain.Generator Toolchain.Builder Toolchain.Executor Toolchain.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Toolchains.CsProj Assembly : BenchmarkDotNet.dll Syntax public class CsProjCoreToolchain : Toolchain, IToolchain Fields Current Declaration public static readonly Lazy<IToolchain> Current Field Value Type Description System.Lazy < IToolchain > NetCoreApp20 Declaration public static readonly IToolchain NetCoreApp20 Field Value Type Description IToolchain NetCoreApp21 Declaration public static readonly IToolchain NetCoreApp21 Field Value Type Description IToolchain NetCoreApp22 Declaration public static readonly IToolchain NetCoreApp22 Field Value Type Description IToolchain Methods From(NetCoreAppSettings) Declaration public static IToolchain From(NetCoreAppSettings settings) Parameters Type Name Description NetCoreAppSettings settings Returns Type Description IToolchain IsSupported(Benchmark, ILogger, IResolver) Declaration public override bool IsSupported(Benchmark benchmark, ILogger logger, IResolver resolver) Parameters Type Name Description Benchmark benchmark ILogger logger IResolver resolver Returns Type Description System.Boolean Overrides Toolchain.IsSupported(Benchmark, ILogger, IResolver) Implements IToolchain Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Diagnosers.HardwareCounter.html": {
    "href": "api/BenchmarkDotNet.Diagnosers.HardwareCounter.html",
    "title": "Enum HardwareCounter | BenchmarkDotNet",
    "keywords": "Enum HardwareCounter Namespace : BenchmarkDotNet.Diagnosers Assembly : BenchmarkDotNet.dll Syntax public enum HardwareCounter Fields Name Description BranchInstructionRetired BranchInstructions BranchMispredictions BranchMispredictsRetired CacheMisses InstructionRetired LlcMisses LlcReference NotSet Timer TotalCycles TotalIssues UnhaltedCoreCycles UnhaltedReferenceCycles Extension Methods HardwareCounterExtensions.ToShortName() CommonExtensions.IsOneOf<HardwareCounter>(HardwareCounter[])"
  },
  "api/BenchmarkDotNet.Diagnosers.HardwareCounterExtensions.html": {
    "href": "api/BenchmarkDotNet.Diagnosers.HardwareCounterExtensions.html",
    "title": "Class HardwareCounterExtensions | BenchmarkDotNet",
    "keywords": "Class HardwareCounterExtensions Inheritance System.Object HardwareCounterExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Diagnosers Assembly : BenchmarkDotNet.dll Syntax public static class HardwareCounterExtensions Methods ToShortName(HardwareCounter) Declaration public static string ToShortName(this HardwareCounter hardwareCounter) Parameters Type Name Description HardwareCounter hardwareCounter Returns Type Description System.String"
  },
  "api/BenchmarkDotNet.Engines.ConsoleHost.html": {
    "href": "api/BenchmarkDotNet.Engines.ConsoleHost.html",
    "title": "Class ConsoleHost | BenchmarkDotNet",
    "keywords": "Class ConsoleHost Inheritance System.Object ConsoleHost Implements IHost Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Engines Assembly : BenchmarkDotNet.dll Syntax public sealed class ConsoleHost : IHost Constructors ConsoleHost(TextWriter, TextReader) Declaration public ConsoleHost(TextWriter outWriter, TextReader inReader) Parameters Type Name Description System.IO.TextWriter outWriter System.IO.TextReader inReader Methods ReportResults(RunResults) Declaration public void ReportResults(RunResults runResults) Parameters Type Name Description RunResults runResults SendError(String) Declaration public void SendError(string message) Parameters Type Name Description System.String message SendSignal(HostSignal) Declaration public void SendSignal(HostSignal hostSignal) Parameters Type Name Description HostSignal hostSignal Write(String) Declaration public void Write(string message) Parameters Type Name Description System.String message WriteLine() Declaration public void WriteLine() WriteLine(String) Declaration public void WriteLine(string message) Parameters Type Name Description System.String message Implements IHost Extension Methods HostExtensions.WriteLine(IHost, String, Object[]) HostExtensions.BeforeAnythingElse(IHost) HostExtensions.BeforeMainRun(IHost) HostExtensions.AfterMainRun(IHost) HostExtensions.AfterAll(IHost) CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Environments.BenchmarkEnvironmentInfo.html": {
    "href": "api/BenchmarkDotNet.Environments.BenchmarkEnvironmentInfo.html",
    "title": "Class BenchmarkEnvironmentInfo | BenchmarkDotNet",
    "keywords": "Class BenchmarkEnvironmentInfo Inheritance System.Object BenchmarkEnvironmentInfo HostEnvironmentInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Environments Assembly : BenchmarkDotNet.dll Syntax public class BenchmarkEnvironmentInfo Constructors BenchmarkEnvironmentInfo() Declaration protected BenchmarkEnvironmentInfo() Properties Architecture Declaration public string Architecture { get; protected set; } Property Value Type Description System.String Configuration Declaration public string Configuration { get; protected set; } Property Value Type Description System.String GCAllocationQuantum Declaration public long GCAllocationQuantum { get; protected set; } Property Value Type Description System.Int64 HasAttachedDebugger Declaration public bool HasAttachedDebugger { get; protected set; } Property Value Type Description System.Boolean HasRyuJit Declaration public bool HasRyuJit { get; protected set; } Property Value Type Description System.Boolean IsConcurrentGC Declaration public bool IsConcurrentGC { get; protected set; } Property Value Type Description System.Boolean IsServerGC Declaration public bool IsServerGC { get; protected set; } Property Value Type Description System.Boolean JitInfo Declaration public string JitInfo { get; protected set; } Property Value Type Description System.String RuntimeVersion Declaration public string RuntimeVersion { get; protected set; } Property Value Type Description System.String Methods GetConfigurationFlag() Declaration protected string GetConfigurationFlag() Returns Type Description System.String GetCurrent() Declaration public static BenchmarkEnvironmentInfo GetCurrent() Returns Type Description BenchmarkEnvironmentInfo GetDebuggerFlag() Declaration protected string GetDebuggerFlag() Returns Type Description System.String GetGcConcurrentFlag() Declaration protected string GetGcConcurrentFlag() Returns Type Description System.String GetGcServerFlag() Declaration protected string GetGcServerFlag() Returns Type Description System.String ToFormattedString() Declaration public virtual IEnumerable<string> ToFormattedString() Returns Type Description System.Collections.Generic.IEnumerable < System.String > Validate(Job) Declaration public static IEnumerable<ValidationError> Validate(Job job) Parameters Type Name Description Job job Returns Type Description System.Collections.Generic.IEnumerable < ValidationError > Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Environments.ClrRuntime.html": {
    "href": "api/BenchmarkDotNet.Environments.ClrRuntime.html",
    "title": "Class ClrRuntime | BenchmarkDotNet",
    "keywords": "Class ClrRuntime Inheritance System.Object Runtime ClrRuntime Implements System.IEquatable < Runtime > System.IEquatable < ClrRuntime > Inherited Members Runtime.Clr Runtime.Mono Runtime.Core Runtime.CoreRT Runtime.Name Runtime.ToString() Runtime.Equals(Runtime) System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Environments Assembly : BenchmarkDotNet.dll Syntax public class ClrRuntime : Runtime, IEquatable<Runtime>, IEquatable<ClrRuntime> Constructors ClrRuntime() Declaration public ClrRuntime() ClrRuntime(String) Declaration public ClrRuntime(string version) Parameters Type Name Description System.String version YOU PROBABLY DON'T NEED IT, but if you are a .NET Runtime developer.. please set it to particular .NET Runtime version if you want to benchmark it. BenchmarkDotNet in going to pass COMPLUS_Version env var to the process for you. Properties Version Declaration public string Version { get; } Property Value Type Description System.String Methods Equals(ClrRuntime) Declaration public bool Equals(ClrRuntime other) Parameters Type Name Description ClrRuntime other Returns Type Description System.Boolean Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides Runtime.Equals(Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides Runtime.GetHashCode() Implements System.IEquatable<T> System.IEquatable<T> Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Environments.CoreRtRuntime.html": {
    "href": "api/BenchmarkDotNet.Environments.CoreRtRuntime.html",
    "title": "Class CoreRtRuntime | BenchmarkDotNet",
    "keywords": "Class CoreRtRuntime Inheritance System.Object Runtime CoreRtRuntime Implements System.IEquatable < Runtime > Inherited Members Runtime.Clr Runtime.Mono Runtime.Core Runtime.CoreRT Runtime.Name Runtime.ToString() Runtime.Equals(Runtime) Runtime.Equals(Object) Runtime.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Environments Assembly : BenchmarkDotNet.dll Syntax public class CoreRtRuntime : Runtime, IEquatable<Runtime> Constructors CoreRtRuntime() Declaration public CoreRtRuntime() Implements System.IEquatable<T> Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Environments.CoreRuntime.html": {
    "href": "api/BenchmarkDotNet.Environments.CoreRuntime.html",
    "title": "Class CoreRuntime | BenchmarkDotNet",
    "keywords": "Class CoreRuntime Inheritance System.Object Runtime CoreRuntime Implements System.IEquatable < Runtime > Inherited Members Runtime.Clr Runtime.Mono Runtime.Core Runtime.CoreRT Runtime.Name Runtime.ToString() Runtime.Equals(Runtime) Runtime.Equals(Object) Runtime.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Environments Assembly : BenchmarkDotNet.dll Syntax public class CoreRuntime : Runtime, IEquatable<Runtime> Constructors CoreRuntime() Declaration public CoreRuntime() Implements System.IEquatable<T> Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Reports.html": {
    "href": "api/BenchmarkDotNet.Reports.html",
    "title": "Namespace BenchmarkDotNet.Reports | BenchmarkDotNet",
    "keywords": "Namespace BenchmarkDotNet.Reports Classes BenchmarkReport BenchmarkReportExtensions MeasurementExtensions Summary SummaryExtensions SummaryStyle SummaryTable SummaryTable.SummaryTableColumn SummaryTableExtensions Structs Measurement The basic captured statistics for a benchmark. Interfaces ISummaryStyle Enums SummaryTable.SummaryTableColumn.TextJustification"
  },
  "api/BenchmarkDotNet.Order.html": {
    "href": "api/BenchmarkDotNet.Order.html",
    "title": "Namespace BenchmarkDotNet.Order | BenchmarkDotNet",
    "keywords": "Namespace BenchmarkDotNet.Order Classes DefaultOrderProvider Interfaces IOrderProvider Enums MethodOrderPolicy SummaryOrderPolicy"
  },
  "api/BenchmarkDotNet.Helpers.html": {
    "href": "api/BenchmarkDotNet.Helpers.html",
    "title": "Namespace BenchmarkDotNet.Helpers | BenchmarkDotNet",
    "keywords": "Namespace BenchmarkDotNet.Helpers Classes ExternalToolsHelper FolderNameHelper SourceCodeHelper"
  },
  "api/BenchmarkDotNet.Exporters.Json.html": {
    "href": "api/BenchmarkDotNet.Exporters.Json.html",
    "title": "Namespace BenchmarkDotNet.Exporters.Json | BenchmarkDotNet",
    "keywords": "Namespace BenchmarkDotNet.Exporters.Json Classes JsonExporter JsonExporterBase"
  },
  "api/BenchmarkDotNet.Diagnosers.html": {
    "href": "api/BenchmarkDotNet.Diagnosers.html",
    "title": "Namespace BenchmarkDotNet.Diagnosers | BenchmarkDotNet",
    "keywords": "Namespace BenchmarkDotNet.Diagnosers Classes Asm Code CompositeDiagnoser DiagnoserActionParameters DiagnoserResults DisassembledMethod DisassemblerConstants DisassemblyAnalyzer DisassemblyDiagnoser DisassemblyDiagnoserConfig DisassemblyResult HardwareCounterExtensions IL Map MemoryDiagnoser MemoryDiagnoser.AllocationColumn MemoryDiagnoser.GCCollectionColumn PmcStats PreciseMachineCounter Sharp UnresolvedDiagnoser Interfaces IConfigurableDiagnoser<TConfig> IDiagnoser Enums HardwareCounter RunMode"
  },
  "api/BenchmarkDotNet.Attributes.Columns.html": {
    "href": "api/BenchmarkDotNet.Attributes.Columns.html",
    "title": "Namespace BenchmarkDotNet.Attributes.Columns | BenchmarkDotNet",
    "keywords": "Namespace BenchmarkDotNet.Attributes.Columns Classes AllStatisticsColumnAttribute CategoriesColumnAttribute ColumnConfigBaseAttribute ConfidenceIntervalErrorColumnAttribute IsBaselineColumnAttribute IterationsColumnAttribute KurtosisColumnAttribute LogicalGroupColumnAttribute MaxColumnAttribute MeanColumnAttribute MedianColumnAttribute MinColumnAttribute MValueColumnAttribute Prints mvalue. See http://www.brendangregg.com/FrequencyTrails/modes.html NamespaceColumnAttribute Add a column with the target method namespace. Q1ColumnAttribute Q3ColumnAttribute RankColumnAttribute SkewnessColumnAttribute StdDevColumnAttribute StdErrorColumnAttribute WelchTTestPValueColumnAttribute"
  },
  "api/BenchmarkDotNet.Validators.html": {
    "href": "api/BenchmarkDotNet.Validators.html",
    "title": "Namespace BenchmarkDotNet.Validators | BenchmarkDotNet",
    "keywords": "Namespace BenchmarkDotNet.Validators Classes BaselineValidator CompilationValidator ConfigValidator DiagnosersValidator ExecutionValidator ExecutionValidatorBase GenericBenchmarksValidator JitOptimizationsValidator ReturnValueValidator RunModeValidator SetupCleanupValidator ShadowCopyValidator ValidationError ValidationErrorReporter ValidationParameters Interfaces IValidator"
  },
  "api/BenchmarkDotNet.Running.html": {
    "href": "api/BenchmarkDotNet.Running.html",
    "title": "Namespace BenchmarkDotNet.Running | BenchmarkDotNet",
    "keywords": "Namespace BenchmarkDotNet.Running Classes Benchmark BenchmarkBuildInfo BenchmarkConverter BenchmarkPartitioner BenchmarkRunInfo BenchmarkRunner BenchmarkSwitcher BuildPartition Target Structs BenchmarkId represents an internal entity used to identify a benchmark within an executable with multiple benchmarks"
  },
  "api/BenchmarkDotNet.Characteristics.Resolver.html": {
    "href": "api/BenchmarkDotNet.Characteristics.Resolver.html",
    "title": "Class Resolver | BenchmarkDotNet",
    "keywords": "Class Resolver Inheritance System.Object Resolver EngineResolver EnvResolver GcResolver InfrastructureResolver Implements IResolver Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Characteristics Assembly : BenchmarkDotNet.dll Syntax public class Resolver : IResolver Methods CanResolve(Characteristic) Declaration public bool CanResolve(Characteristic characteristic) Parameters Type Name Description Characteristic characteristic Returns Type Description System.Boolean Register<T>(Characteristic<T>, Func<T>) Declaration protected void Register<T>(Characteristic<T> characteristic, Func<T> resolver) Parameters Type Name Description Characteristic <T> characteristic System.Func <T> resolver Type Parameters Name Description T Register<T>(Characteristic<T>, Func<CharacteristicObject, T>) Declaration protected void Register<T>(Characteristic<T> characteristic, Func<CharacteristicObject, T> resolver) Parameters Type Name Description Characteristic <T> characteristic System.Func < CharacteristicObject , T> resolver Type Parameters Name Description T Resolve(CharacteristicObject, Characteristic) Declaration public object Resolve(CharacteristicObject obj, Characteristic characteristic) Parameters Type Name Description CharacteristicObject obj Characteristic characteristic Returns Type Description System.Object Resolve<T>(CharacteristicObject, Characteristic<T>) Declaration public T Resolve<T>(CharacteristicObject obj, Characteristic<T> characteristic) Parameters Type Name Description CharacteristicObject obj Characteristic <T> characteristic Returns Type Description T Type Parameters Name Description T Implements IResolver Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Columns.IsBaselineColumn.html": {
    "href": "api/BenchmarkDotNet.Columns.IsBaselineColumn.html",
    "title": "Class IsBaselineColumn | BenchmarkDotNet",
    "keywords": "Class IsBaselineColumn Inheritance System.Object IsBaselineColumn Implements IColumn Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Columns Assembly : BenchmarkDotNet.dll Syntax public class IsBaselineColumn : IColumn Fields Default Declaration public static readonly IColumn Default Field Value Type Description IColumn Properties AlwaysShow Declaration public bool AlwaysShow { get; } Property Value Type Description System.Boolean Category Declaration public ColumnCategory Category { get; } Property Value Type Description ColumnCategory ColumnName Declaration public string ColumnName { get; } Property Value Type Description System.String Id Declaration public string Id { get; } Property Value Type Description System.String IsNumeric Declaration public bool IsNumeric { get; } Property Value Type Description System.Boolean Legend Declaration public string Legend { get; } Property Value Type Description System.String PriorityInCategory Declaration public int PriorityInCategory { get; } Property Value Type Description System.Int32 UnitType Declaration public UnitType UnitType { get; } Property Value Type Description UnitType Methods GetValue(Summary, Benchmark) Declaration public string GetValue(Summary summary, Benchmark benchmark) Parameters Type Name Description Summary summary Benchmark benchmark Returns Type Description System.String GetValue(Summary, Benchmark, ISummaryStyle) Declaration public string GetValue(Summary summary, Benchmark benchmark, ISummaryStyle style) Parameters Type Name Description Summary summary Benchmark benchmark ISummaryStyle style Returns Type Description System.String IsAvailable(Summary) Declaration public bool IsAvailable(Summary summary) Parameters Type Name Description Summary summary Returns Type Description System.Boolean IsDefault(Summary, Benchmark) Declaration public bool IsDefault(Summary summary, Benchmark benchmark) Parameters Type Name Description Summary summary Benchmark benchmark Returns Type Description System.Boolean Implements IColumn Extension Methods ColumnExtensions.ToProvider(IColumn) CommonExtensions.GetColumnTitle(IColumn, ISummaryStyle) CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Columns.JobCharacteristicColumn.html": {
    "href": "api/BenchmarkDotNet.Columns.JobCharacteristicColumn.html",
    "title": "Class JobCharacteristicColumn | BenchmarkDotNet",
    "keywords": "Class JobCharacteristicColumn Inheritance System.Object JobCharacteristicColumn Implements IColumn Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Columns Assembly : BenchmarkDotNet.dll Syntax public class JobCharacteristicColumn : IColumn Constructors JobCharacteristicColumn(Characteristic) Declaration public JobCharacteristicColumn(Characteristic characteristic) Parameters Type Name Description Characteristic characteristic Properties AllColumns Declaration public static IColumn[] AllColumns { get; } Property Value Type Description IColumn [] AlwaysShow Declaration public bool AlwaysShow { get; } Property Value Type Description System.Boolean Category Declaration public ColumnCategory Category { get; } Property Value Type Description ColumnCategory ColumnName Declaration public string ColumnName { get; } Property Value Type Description System.String Id Declaration public string Id { get; } Property Value Type Description System.String IsNumeric Declaration public bool IsNumeric { get; } Property Value Type Description System.Boolean Legend Declaration public string Legend { get; } Property Value Type Description System.String PriorityInCategory Declaration public int PriorityInCategory { get; } Property Value Type Description System.Int32 UnitType Declaration public UnitType UnitType { get; } Property Value Type Description UnitType Methods GetValue(Summary, Benchmark) Declaration public string GetValue(Summary summary, Benchmark benchmark) Parameters Type Name Description Summary summary Benchmark benchmark Returns Type Description System.String GetValue(Summary, Benchmark, ISummaryStyle) Declaration public string GetValue(Summary summary, Benchmark benchmark, ISummaryStyle style) Parameters Type Name Description Summary summary Benchmark benchmark ISummaryStyle style Returns Type Description System.String IsAvailable(Summary) Declaration public bool IsAvailable(Summary summary) Parameters Type Name Description Summary summary Returns Type Description System.Boolean IsDefault(Summary, Benchmark) Declaration public bool IsDefault(Summary summary, Benchmark benchmark) Parameters Type Name Description Summary summary Benchmark benchmark Returns Type Description System.Boolean Implements IColumn Extension Methods ColumnExtensions.ToProvider(IColumn) CommonExtensions.GetColumnTitle(IColumn, ISummaryStyle) CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Configs.ConfigUnionRule.html": {
    "href": "api/BenchmarkDotNet.Configs.ConfigUnionRule.html",
    "title": "Enum ConfigUnionRule | BenchmarkDotNet",
    "keywords": "Enum ConfigUnionRule Namespace : BenchmarkDotNet.Configs Assembly : BenchmarkDotNet.dll Syntax public enum ConfigUnionRule Fields Name Description AlwaysUseGlobal AlwaysUseLocal Union Extension Methods CommonExtensions.IsOneOf<ConfigUnionRule>(ConfigUnionRule[])"
  },
  "api/BenchmarkDotNet.Configs.DefaultConfig.html": {
    "href": "api/BenchmarkDotNet.Configs.DefaultConfig.html",
    "title": "Class DefaultConfig | BenchmarkDotNet",
    "keywords": "Class DefaultConfig Inheritance System.Object DefaultConfig Implements IConfig Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Configs Assembly : BenchmarkDotNet.dll Syntax public class DefaultConfig : IConfig Fields Instance Declaration public static readonly IConfig Instance Field Value Type Description IConfig Properties ArtifactsPath Declaration public string ArtifactsPath { get; } Property Value Type Description System.String KeepBenchmarkFiles Declaration public bool KeepBenchmarkFiles { get; } Property Value Type Description System.Boolean UnionRule Declaration public ConfigUnionRule UnionRule { get; } Property Value Type Description ConfigUnionRule Methods GetAnalysers() Declaration public IEnumerable<IAnalyser> GetAnalysers() Returns Type Description System.Collections.Generic.IEnumerable < IAnalyser > GetColumnProviders() Declaration public IEnumerable<IColumnProvider> GetColumnProviders() Returns Type Description System.Collections.Generic.IEnumerable < IColumnProvider > GetDiagnosers() Declaration public IEnumerable<IDiagnoser> GetDiagnosers() Returns Type Description System.Collections.Generic.IEnumerable < IDiagnoser > GetExporters() Declaration public IEnumerable<IExporter> GetExporters() Returns Type Description System.Collections.Generic.IEnumerable < IExporter > GetFilters() Declaration public IEnumerable<IFilter> GetFilters() Returns Type Description System.Collections.Generic.IEnumerable < IFilter > GetHardwareCounters() Declaration public IEnumerable<HardwareCounter> GetHardwareCounters() Returns Type Description System.Collections.Generic.IEnumerable < HardwareCounter > GetJobs() Declaration public IEnumerable<Job> GetJobs() Returns Type Description System.Collections.Generic.IEnumerable < Job > GetLoggers() Declaration public IEnumerable<ILogger> GetLoggers() Returns Type Description System.Collections.Generic.IEnumerable < ILogger > GetLogicalGroupRules() Declaration public IEnumerable<BenchmarkLogicalGroupRule> GetLogicalGroupRules() Returns Type Description System.Collections.Generic.IEnumerable < BenchmarkLogicalGroupRule > GetOrderProvider() Declaration public IOrderProvider GetOrderProvider() Returns Type Description IOrderProvider GetSummaryStyle() Declaration public ISummaryStyle GetSummaryStyle() Returns Type Description ISummaryStyle GetValidators() Declaration public IEnumerable<IValidator> GetValidators() Returns Type Description System.Collections.Generic.IEnumerable < IValidator > Implements IConfig Extension Methods ConfigExtensions.GetCompositeLogger(IConfig) ConfigExtensions.GetCompositeExporter(IConfig) ConfigExtensions.GetCompositeDiagnoser(IConfig) ConfigExtensions.GetCompositeDiagnoser(IConfig, Benchmark, RunMode) ConfigExtensions.GetCompositeAnalyser(IConfig) ConfigExtensions.GetCompositeValidator(IConfig) ConfigExtensions.With(IConfig, IColumn[]) ConfigExtensions.With(IConfig, IColumnProvider[]) ConfigExtensions.With(IConfig, ILogger[]) ConfigExtensions.With(IConfig, IExporter[]) ConfigExtensions.With(IConfig, IDiagnoser[]) ConfigExtensions.With(IConfig, IAnalyser[]) ConfigExtensions.With(IConfig, IValidator[]) ConfigExtensions.With(IConfig, Job[]) ConfigExtensions.With(IConfig, IOrderProvider) ConfigExtensions.With(IConfig, HardwareCounter[]) ConfigExtensions.With(IConfig, IFilter[]) ConfigExtensions.KeepBenchmarkFiles(IConfig, Boolean) ConfigExtensions.RemoveBenchmarkFiles(IConfig) ConfigExtensions.WithArtifactsPath(IConfig, String) ConfigExtensions.With(IConfig, BenchmarkLogicalGroupRule[]) ConfigExtensions.AsReadOnly(IConfig) ConfigExtensions.HasMemoryDiagnoser(IConfig) CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Analysers.EnvironmentAnalyser.html": {
    "href": "api/BenchmarkDotNet.Analysers.EnvironmentAnalyser.html",
    "title": "Class EnvironmentAnalyser | BenchmarkDotNet",
    "keywords": "Class EnvironmentAnalyser Inheritance System.Object AnalyserBase EnvironmentAnalyser Implements IAnalyser Inherited Members AnalyserBase.Analyse(Summary) AnalyserBase.CreateHint(String, BenchmarkReport) AnalyserBase.CreateWarning(String, BenchmarkReport) AnalyserBase.CreateError(String, BenchmarkReport) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Analysers Assembly : BenchmarkDotNet.dll Syntax public class EnvironmentAnalyser : AnalyserBase, IAnalyser Fields Default Declaration public static readonly IAnalyser Default Field Value Type Description IAnalyser Properties Id Declaration public override string Id { get; } Property Value Type Description System.String Overrides AnalyserBase.Id Methods AnalyseReport(BenchmarkReport, Summary) Declaration public override IEnumerable<Conclusion> AnalyseReport(BenchmarkReport report, Summary summary) Parameters Type Name Description BenchmarkReport report Summary summary Returns Type Description System.Collections.Generic.IEnumerable < Conclusion > Overrides AnalyserBase.AnalyseReport(BenchmarkReport, Summary) AnalyseSummary(Summary) Declaration public override IEnumerable<Conclusion> AnalyseSummary(Summary summary) Parameters Type Name Description Summary summary Returns Type Description System.Collections.Generic.IEnumerable < Conclusion > Overrides AnalyserBase.AnalyseSummary(Summary) Implements IAnalyser Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.GroupBenchmarksByAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.GroupBenchmarksByAttribute.html",
    "title": "Class GroupBenchmarksByAttribute | BenchmarkDotNet",
    "keywords": "Class GroupBenchmarksByAttribute Inheritance System.Object System.Attribute GroupBenchmarksByAttribute Implements IConfigSource Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes Assembly : BenchmarkDotNet.dll Syntax public class GroupBenchmarksByAttribute : Attribute, IConfigSource Constructors GroupBenchmarksByAttribute() Declaration protected GroupBenchmarksByAttribute() GroupBenchmarksByAttribute(BenchmarkLogicalGroupRule[]) Declaration public GroupBenchmarksByAttribute(params BenchmarkLogicalGroupRule[] rules) Parameters Type Name Description BenchmarkLogicalGroupRule [] rules Properties Config Declaration public IConfig Config { get; } Property Value Type Description IConfig Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Columns.SimpleColumnProvider.html": {
    "href": "api/BenchmarkDotNet.Columns.SimpleColumnProvider.html",
    "title": "Class SimpleColumnProvider | BenchmarkDotNet",
    "keywords": "Class SimpleColumnProvider Inheritance System.Object SimpleColumnProvider Implements IColumnProvider Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Columns Assembly : BenchmarkDotNet.dll Syntax public class SimpleColumnProvider : IColumnProvider Constructors SimpleColumnProvider(IColumn[]) Declaration public SimpleColumnProvider(params IColumn[] columns) Parameters Type Name Description IColumn [] columns Methods GetColumns(Summary) Declaration public IEnumerable<IColumn> GetColumns(Summary summary) Parameters Type Name Description Summary summary Returns Type Description System.Collections.Generic.IEnumerable < IColumn > Implements IColumnProvider Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Configs.ReadOnlyConfig.html": {
    "href": "api/BenchmarkDotNet.Configs.ReadOnlyConfig.html",
    "title": "Class ReadOnlyConfig | BenchmarkDotNet",
    "keywords": "Class ReadOnlyConfig Inheritance System.Object ReadOnlyConfig Implements IConfig Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Configs Assembly : BenchmarkDotNet.dll Syntax public class ReadOnlyConfig : IConfig Constructors ReadOnlyConfig(IConfig) Declaration public ReadOnlyConfig(IConfig config) Parameters Type Name Description IConfig config Properties ArtifactsPath Declaration public string ArtifactsPath { get; } Property Value Type Description System.String KeepBenchmarkFiles Declaration public bool KeepBenchmarkFiles { get; } Property Value Type Description System.Boolean UnionRule Declaration public ConfigUnionRule UnionRule { get; } Property Value Type Description ConfigUnionRule Methods GetAnalysers() Declaration public IEnumerable<IAnalyser> GetAnalysers() Returns Type Description System.Collections.Generic.IEnumerable < IAnalyser > GetColumnProviders() Declaration public IEnumerable<IColumnProvider> GetColumnProviders() Returns Type Description System.Collections.Generic.IEnumerable < IColumnProvider > GetDiagnosers() Declaration public IEnumerable<IDiagnoser> GetDiagnosers() Returns Type Description System.Collections.Generic.IEnumerable < IDiagnoser > GetExporters() Declaration public IEnumerable<IExporter> GetExporters() Returns Type Description System.Collections.Generic.IEnumerable < IExporter > GetFilters() Declaration public IEnumerable<IFilter> GetFilters() Returns Type Description System.Collections.Generic.IEnumerable < IFilter > GetHardwareCounters() Declaration public IEnumerable<HardwareCounter> GetHardwareCounters() Returns Type Description System.Collections.Generic.IEnumerable < HardwareCounter > GetJobs() Declaration public IEnumerable<Job> GetJobs() Returns Type Description System.Collections.Generic.IEnumerable < Job > GetLoggers() Declaration public IEnumerable<ILogger> GetLoggers() Returns Type Description System.Collections.Generic.IEnumerable < ILogger > GetLogicalGroupRules() Declaration public IEnumerable<BenchmarkLogicalGroupRule> GetLogicalGroupRules() Returns Type Description System.Collections.Generic.IEnumerable < BenchmarkLogicalGroupRule > GetOrderProvider() Declaration public IOrderProvider GetOrderProvider() Returns Type Description IOrderProvider GetSummaryStyle() Declaration public ISummaryStyle GetSummaryStyle() Returns Type Description ISummaryStyle GetValidators() Declaration public IEnumerable<IValidator> GetValidators() Returns Type Description System.Collections.Generic.IEnumerable < IValidator > Implements IConfig Extension Methods ConfigExtensions.GetCompositeLogger(IConfig) ConfigExtensions.GetCompositeExporter(IConfig) ConfigExtensions.GetCompositeDiagnoser(IConfig) ConfigExtensions.GetCompositeDiagnoser(IConfig, Benchmark, RunMode) ConfigExtensions.GetCompositeAnalyser(IConfig) ConfigExtensions.GetCompositeValidator(IConfig) ConfigExtensions.With(IConfig, IColumn[]) ConfigExtensions.With(IConfig, IColumnProvider[]) ConfigExtensions.With(IConfig, ILogger[]) ConfigExtensions.With(IConfig, IExporter[]) ConfigExtensions.With(IConfig, IDiagnoser[]) ConfigExtensions.With(IConfig, IAnalyser[]) ConfigExtensions.With(IConfig, IValidator[]) ConfigExtensions.With(IConfig, Job[]) ConfigExtensions.With(IConfig, IOrderProvider) ConfigExtensions.With(IConfig, HardwareCounter[]) ConfigExtensions.With(IConfig, IFilter[]) ConfigExtensions.KeepBenchmarkFiles(IConfig, Boolean) ConfigExtensions.RemoveBenchmarkFiles(IConfig) ConfigExtensions.WithArtifactsPath(IConfig, String) ConfigExtensions.With(IConfig, BenchmarkLogicalGroupRule[]) ConfigExtensions.AsReadOnly(IConfig) ConfigExtensions.HasMemoryDiagnoser(IConfig) CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Diagnosers.DisassemblyDiagnoserConfig.html": {
    "href": "api/BenchmarkDotNet.Diagnosers.DisassemblyDiagnoserConfig.html",
    "title": "Class DisassemblyDiagnoserConfig | BenchmarkDotNet",
    "keywords": "Class DisassemblyDiagnoserConfig Inheritance System.Object DisassemblyDiagnoserConfig Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Diagnosers Assembly : BenchmarkDotNet.dll Syntax public class DisassemblyDiagnoserConfig Constructors DisassemblyDiagnoserConfig(Boolean, Boolean, Boolean, Boolean, Int32) Declaration public DisassemblyDiagnoserConfig(bool printAsm = true, bool printIL = false, bool printSource = false, bool printPrologAndEpilog = false, int recursiveDepth = 1) Parameters Type Name Description System.Boolean printAsm ASM will be printed. True by default. System.Boolean printIL IL will be printed. False by default. System.Boolean printSource C# source code will be printed. False by default. System.Boolean printPrologAndEpilog ASM for prolog and epilog will be printed. False by default. System.Int32 recursiveDepth Includes called methods to given level. 1 by default, indexed from 1. To print just benchmark set to 0 Fields All Declaration public static readonly DisassemblyDiagnoserConfig All Field Value Type Description DisassemblyDiagnoserConfig Asm Declaration public static readonly DisassemblyDiagnoserConfig Asm Field Value Type Description DisassemblyDiagnoserConfig AsmAndIL Declaration public static readonly DisassemblyDiagnoserConfig AsmAndIL Field Value Type Description DisassemblyDiagnoserConfig AsmFullRecursive Declaration public static readonly DisassemblyDiagnoserConfig AsmFullRecursive Field Value Type Description DisassemblyDiagnoserConfig IL Declaration public static readonly DisassemblyDiagnoserConfig IL Field Value Type Description DisassemblyDiagnoserConfig Properties PrintAsm Declaration public bool PrintAsm { get; } Property Value Type Description System.Boolean PrintIL Declaration public bool PrintIL { get; } Property Value Type Description System.Boolean PrintPrologAndEpilog Declaration public bool PrintPrologAndEpilog { get; } Property Value Type Description System.Boolean PrintSource Declaration public bool PrintSource { get; } Property Value Type Description System.Boolean RecursiveDepth Declaration public int RecursiveDepth { get; } Property Value Type Description System.Int32 Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Analysers.CompositeAnalyser.html": {
    "href": "api/BenchmarkDotNet.Analysers.CompositeAnalyser.html",
    "title": "Class CompositeAnalyser | BenchmarkDotNet",
    "keywords": "Class CompositeAnalyser Inheritance System.Object CompositeAnalyser Implements IAnalyser Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Analysers Assembly : BenchmarkDotNet.dll Syntax public class CompositeAnalyser : IAnalyser Constructors CompositeAnalyser(IAnalyser[]) Declaration public CompositeAnalyser(IAnalyser[] analysers) Parameters Type Name Description IAnalyser [] analysers Properties Id Declaration public string Id { get; } Property Value Type Description System.String Methods Analyse(Summary) Declaration public IEnumerable<Conclusion> Analyse(Summary summary) Parameters Type Name Description Summary summary Returns Type Description System.Collections.Generic.IEnumerable < Conclusion > Implements IAnalyser Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.ArtifactsPathAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.ArtifactsPathAttribute.html",
    "title": "Class ArtifactsPathAttribute | BenchmarkDotNet",
    "keywords": "Class ArtifactsPathAttribute Inheritance System.Object System.Attribute ArtifactsPathAttribute Implements IConfigSource Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes Assembly : BenchmarkDotNet.dll Syntax public class ArtifactsPathAttribute : Attribute, IConfigSource Constructors ArtifactsPathAttribute(String) Declaration public ArtifactsPathAttribute(string value) Parameters Type Name Description System.String value Properties Config Declaration public IConfig Config { get; } Property Value Type Description IConfig Value Declaration public string Value { get; } Property Value Type Description System.String Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Environments.OsBrandStringHelper.html": {
    "href": "api/BenchmarkDotNet.Environments.OsBrandStringHelper.html",
    "title": "Class OsBrandStringHelper | BenchmarkDotNet",
    "keywords": "Class OsBrandStringHelper Inheritance System.Object OsBrandStringHelper Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Environments Assembly : BenchmarkDotNet.dll Syntax public class OsBrandStringHelper Methods Prettify(String, String, Nullable<Int32>) Transform an operation system name and version to a nice form for summary. Declaration public static string Prettify(string osName, string osVersion, int? windowsUbr = default(int? )) Parameters Type Name Description System.String osName Original operation system name System.String osVersion Original operation system version System.Nullable < System.Int32 > windowsUbr UBR (Update Build Revision), the revision number of Windows version (if available) Returns Type Description System.String Prettified operation system title PrettifyMacOSX(String, String) Declaration public static string PrettifyMacOSX(string systemVersion, string kernelVersion) Parameters Type Name Description System.String systemVersion System.String kernelVersion Returns Type Description System.String Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Environments.Platform.html": {
    "href": "api/BenchmarkDotNet.Environments.Platform.html",
    "title": "Enum Platform | BenchmarkDotNet",
    "keywords": "Enum Platform Namespace : BenchmarkDotNet.Environments Assembly : BenchmarkDotNet.dll Syntax public enum Platform Fields Name Description AnyCpu AnyCPU X64 x64 X86 x86 Extension Methods CommonExtensions.IsOneOf<Platform>(Platform[]) ConfigurationExtensions.ToConfig()"
  },
  "api/BenchmarkDotNet.Exporters.Csv.CsvMeasurementsExporter.html": {
    "href": "api/BenchmarkDotNet.Exporters.Csv.CsvMeasurementsExporter.html",
    "title": "Class CsvMeasurementsExporter | BenchmarkDotNet",
    "keywords": "Class CsvMeasurementsExporter Inheritance System.Object ExporterBase CsvMeasurementsExporter Implements IExporter Inherited Members ExporterBase.Name ExporterBase.FileNameSuffix ExporterBase.ExportToFiles(Summary, ILogger) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Exporters.Csv Assembly : BenchmarkDotNet.dll Syntax public class CsvMeasurementsExporter : ExporterBase, IExporter Constructors CsvMeasurementsExporter(CsvSeparator, ISummaryStyle) Declaration public CsvMeasurementsExporter(CsvSeparator separator, ISummaryStyle style = null) Parameters Type Name Description CsvSeparator separator ISummaryStyle style Fields Default Declaration public static readonly CsvMeasurementsExporter Default Field Value Type Description CsvMeasurementsExporter Properties FileCaption Declaration protected override string FileCaption { get; } Property Value Type Description System.String Overrides ExporterBase.FileCaption FileExtension Declaration protected override string FileExtension { get; } Property Value Type Description System.String Overrides ExporterBase.FileExtension Separator Declaration public string Separator { get; } Property Value Type Description System.String Style Declaration public ISummaryStyle Style { get; } Property Value Type Description ISummaryStyle Methods ExportToLog(Summary, ILogger) Declaration public override void ExportToLog(Summary summary, ILogger logger) Parameters Type Name Description Summary summary ILogger logger Overrides ExporterBase.ExportToLog(Summary, ILogger) GetJobs(Summary) Declaration public static Job[] GetJobs(Summary summary) Parameters Type Name Description Summary summary Returns Type Description Job [] WithStyle(SummaryStyle) Declaration public static CsvMeasurementsExporter WithStyle(SummaryStyle style) Parameters Type Name Description SummaryStyle style Returns Type Description CsvMeasurementsExporter Implements IExporter Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Exporters.Csv.CsvSeparator.html": {
    "href": "api/BenchmarkDotNet.Exporters.Csv.CsvSeparator.html",
    "title": "Enum CsvSeparator | BenchmarkDotNet",
    "keywords": "Enum CsvSeparator Namespace : BenchmarkDotNet.Exporters.Csv Assembly : BenchmarkDotNet.dll Syntax public enum CsvSeparator Fields Name Description Comma ',' will be used as the CSV separator. CurrentCulture Semicolon ';' will be used as the CSV separator. Extension Methods CommonExtensions.IsOneOf<CsvSeparator>(CsvSeparator[]) CsvSeparatorExtensions.ToRealSeparator()"
  },
  "api/BenchmarkDotNet.Exporters.Csv.CsvSeparatorExtensions.html": {
    "href": "api/BenchmarkDotNet.Exporters.Csv.CsvSeparatorExtensions.html",
    "title": "Class CsvSeparatorExtensions | BenchmarkDotNet",
    "keywords": "Class CsvSeparatorExtensions Inheritance System.Object CsvSeparatorExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Exporters.Csv Assembly : BenchmarkDotNet.dll Syntax public static class CsvSeparatorExtensions Methods ToRealSeparator(CsvSeparator) Return a string which represent real CSV separator which can be used as plain text. Declaration public static string ToRealSeparator(this CsvSeparator separator) Parameters Type Name Description CsvSeparator separator Returns Type Description System.String"
  },
  "api/BenchmarkDotNet.Filters.DisjunctionFilter.html": {
    "href": "api/BenchmarkDotNet.Filters.DisjunctionFilter.html",
    "title": "Class DisjunctionFilter | BenchmarkDotNet",
    "keywords": "Class DisjunctionFilter Inheritance System.Object DisjunctionFilter Implements IFilter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Filters Assembly : BenchmarkDotNet.dll Syntax public class DisjunctionFilter : IFilter Constructors DisjunctionFilter(IFilter[]) Declaration public DisjunctionFilter(params IFilter[] filters) Parameters Type Name Description IFilter [] filters Methods Predicate(Benchmark) Declaration public bool Predicate(Benchmark benchmark) Parameters Type Name Description Benchmark benchmark Returns Type Description System.Boolean Implements IFilter Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Filters.IFilter.html": {
    "href": "api/BenchmarkDotNet.Filters.IFilter.html",
    "title": "Interface IFilter | BenchmarkDotNet",
    "keywords": "Interface IFilter Namespace : BenchmarkDotNet.Filters Assembly : BenchmarkDotNet.dll Syntax public interface IFilter Methods Predicate(Benchmark) Declaration bool Predicate(Benchmark benchmark) Parameters Type Name Description Benchmark benchmark Returns Type Description System.Boolean Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Filters.NameFilter.html": {
    "href": "api/BenchmarkDotNet.Filters.NameFilter.html",
    "title": "Class NameFilter | BenchmarkDotNet",
    "keywords": "Class NameFilter Inheritance System.Object SimpleFilter NameFilter Implements IFilter Inherited Members SimpleFilter.Predicate(Benchmark) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Filters Assembly : BenchmarkDotNet.dll Syntax public class NameFilter : SimpleFilter, IFilter Constructors NameFilter(Func<String, Boolean>) Declaration public NameFilter(Func<string, bool> predicate) Parameters Type Name Description System.Func < System.String , System.Boolean > predicate Implements IFilter Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Filters.SimpleFilter.html": {
    "href": "api/BenchmarkDotNet.Filters.SimpleFilter.html",
    "title": "Class SimpleFilter | BenchmarkDotNet",
    "keywords": "Class SimpleFilter Inheritance System.Object SimpleFilter NameFilter Implements IFilter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Filters Assembly : BenchmarkDotNet.dll Syntax public class SimpleFilter : IFilter Constructors SimpleFilter(Func<Benchmark, Boolean>) Declaration public SimpleFilter(Func<Benchmark, bool> predicate) Parameters Type Name Description System.Func < Benchmark , System.Boolean > predicate Methods Predicate(Benchmark) Declaration public bool Predicate(Benchmark benchmark) Parameters Type Name Description Benchmark benchmark Returns Type Description System.Boolean Implements IFilter Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Jobs.MonoArgument.html": {
    "href": "api/BenchmarkDotNet.Jobs.MonoArgument.html",
    "title": "Class MonoArgument | BenchmarkDotNet",
    "keywords": "Class MonoArgument Argument passed directly to mono when executing benchmarks (mono [options]) example: new MonoArgument(\"--gc=sgen\") Inheritance System.Object Argument MonoArgument Inherited Members Argument.TextRepresentation Argument.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Jobs Assembly : BenchmarkDotNet.dll Syntax public class MonoArgument : Argument Constructors MonoArgument(String) Declaration public MonoArgument(string value) Parameters Type Name Description System.String value Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Jobs.MsBuildArgument.html": {
    "href": "api/BenchmarkDotNet.Jobs.MsBuildArgument.html",
    "title": "Class MsBuildArgument | BenchmarkDotNet",
    "keywords": "Class MsBuildArgument Argument passed to dotnet cli when restoring and building the project example: new MsBuildArgument(\"/p:MyCustomSetting=123\") Inheritance System.Object Argument MsBuildArgument Inherited Members Argument.TextRepresentation Argument.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Jobs Assembly : BenchmarkDotNet.dll Syntax public class MsBuildArgument : Argument Constructors MsBuildArgument(String) Declaration public MsBuildArgument(string value) Parameters Type Name Description System.String value Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Jobs.RunMode.html": {
    "href": "api/BenchmarkDotNet.Jobs.RunMode.html",
    "title": "Class RunMode | BenchmarkDotNet",
    "keywords": "Class RunMode Inheritance System.Object CharacteristicObject CharacteristicObject < RunMode > JobMode < RunMode > RunMode Inherited Members JobMode<RunMode>.Default JobMode<RunMode>.Job CharacteristicObject<RunMode>.Apply(CharacteristicObject) CharacteristicObject<RunMode>.Apply(CharacteristicObject[]) CharacteristicObject<RunMode>.ApplyAndFreeze(CharacteristicObject) CharacteristicObject<RunMode>.ApplyAndFreeze(CharacteristicObject[]) CharacteristicObject<RunMode>.Freeze() CharacteristicObject<RunMode>.UnfreezeCopy() CharacteristicObject<RunMode>.CreateCharacteristic<TC>(String) CharacteristicObject.ResolveId(CharacteristicObject, String) CharacteristicObject.IdCharacteristic CharacteristicObject.AssertNotFrozen() CharacteristicObject.AssertIsRoot() CharacteristicObject.AssertIsNonFrozenRoot() CharacteristicObject.AssertIsAssignable(Characteristic, Object) CharacteristicObject.Owner CharacteristicObject.OwnerOrSelf CharacteristicObject.Frozen CharacteristicObject.IsPropertyBag CharacteristicObject.HasChanges CharacteristicObject.GetCharacteristicsWithValues() CharacteristicObject.HasValue(Characteristic) CharacteristicObject.ResolveValue<T>(Characteristic<T>, IResolver) CharacteristicObject.ResolveValue(Characteristic, IResolver) CharacteristicObject.ResolveValue<T>(Characteristic<T>, T) CharacteristicObject.ResolveValue(Characteristic, Object) CharacteristicObject.ResolveValueAsNullable<T>(Characteristic<T>) CharacteristicObject.ApplyCore(CharacteristicObject) CharacteristicObject.FreezeCore() CharacteristicObject.UnfreezeCopyCore() CharacteristicObject.Id CharacteristicObject.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Jobs Assembly : BenchmarkDotNet.dll Syntax public sealed class RunMode : JobMode<RunMode> Constructors RunMode() Declaration public RunMode() RunMode(String) Declaration public RunMode(string id) Parameters Type Name Description System.String id Fields Dry Declaration public static readonly RunMode Dry Field Value Type Description RunMode InvocationCountCharacteristic Declaration public static readonly Characteristic<int> InvocationCountCharacteristic Field Value Type Description Characteristic < System.Int32 > IterationTimeCharacteristic Declaration public static readonly Characteristic<TimeInterval> IterationTimeCharacteristic Field Value Type Description Characteristic < TimeInterval > LaunchCountCharacteristic Declaration public static readonly Characteristic<int> LaunchCountCharacteristic Field Value Type Description Characteristic < System.Int32 > Long Declaration public static readonly RunMode Long Field Value Type Description RunMode MaxTargetIterationCountCharacteristic Declaration public static readonly Characteristic<int> MaxTargetIterationCountCharacteristic Field Value Type Description Characteristic < System.Int32 > Medium Declaration public static readonly RunMode Medium Field Value Type Description RunMode MinTargetIterationCountCharacteristic Declaration public static readonly Characteristic<int> MinTargetIterationCountCharacteristic Field Value Type Description Characteristic < System.Int32 > RunStrategyCharacteristic Declaration public static readonly Characteristic<RunStrategy> RunStrategyCharacteristic Field Value Type Description Characteristic < RunStrategy > Short Declaration public static readonly RunMode Short Field Value Type Description RunMode TargetCountCharacteristic Declaration public static readonly Characteristic<int> TargetCountCharacteristic Field Value Type Description Characteristic < System.Int32 > UnrollFactorCharacteristic Declaration public static readonly Characteristic<int> UnrollFactorCharacteristic Field Value Type Description Characteristic < System.Int32 > VeryLong Declaration public static readonly RunMode VeryLong Field Value Type Description RunMode WarmupCountCharacteristic Declaration public static readonly Characteristic<int> WarmupCountCharacteristic Field Value Type Description Characteristic < System.Int32 > Properties InvocationCount Invocation count in a single iteration. If specified, IterationTime will be ignored. If specified, it must be a multiple of UnrollFactor . Declaration public int InvocationCount { get; set; } Property Value Type Description System.Int32 IterationTime Desired time of execution of an iteration. Declaration public TimeInterval IterationTime { get; set; } Property Value Type Description TimeInterval LaunchCount How many times we should launch process with target benchmark. Declaration public int LaunchCount { get; set; } Property Value Type Description System.Int32 MaxTargetIterationCount Maximum count of target iterations that should be performed The default value is 100 If you set this value to below 15, then MultimodalDistributionAnalyzer is not going to work Declaration public int MaxTargetIterationCount { get; set; } Property Value Type Description System.Int32 MinTargetIterationCount Minimum count of target iterations that should be performed The default value is 15 If you set this value to below 15, then MultimodalDistributionAnalyzer is not going to work Declaration public int MinTargetIterationCount { get; set; } Property Value Type Description System.Int32 RunStrategy Available values: Throughput and ColdStart. Throughput: default strategy which allows to get good precision level. ColdStart: should be used only for measuring cold start of the application or testing purpose. Declaration public RunStrategy RunStrategy { get; set; } Property Value Type Description RunStrategy TargetCount How many target iterations should be performed If specified, MinTargetIterationCount will be ignored. If specified, MaxTargetIterationCount will be ignored. Declaration public int TargetCount { get; set; } Property Value Type Description System.Int32 UnrollFactor How many times the benchmark method will be invoked per one iteration of a generated loop. Declaration public int UnrollFactor { get; set; } Property Value Type Description System.Int32 WarmupCount How many warmup iterations should be performed. Declaration public int WarmupCount { get; set; } Property Value Type Description System.Int32 Extension Methods CharacteristicHelper.GetThisTypeCharacteristics(CharacteristicObject) CharacteristicHelper.GetAllCharacteristics(CharacteristicObject) CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Jobs.AccuracyMode.html": {
    "href": "api/BenchmarkDotNet.Jobs.AccuracyMode.html",
    "title": "Class AccuracyMode | BenchmarkDotNet",
    "keywords": "Class AccuracyMode Inheritance System.Object CharacteristicObject CharacteristicObject < AccuracyMode > JobMode < AccuracyMode > AccuracyMode Inherited Members JobMode<AccuracyMode>.Default JobMode<AccuracyMode>.Job CharacteristicObject<AccuracyMode>.Apply(CharacteristicObject) CharacteristicObject<AccuracyMode>.Apply(CharacteristicObject[]) CharacteristicObject<AccuracyMode>.ApplyAndFreeze(CharacteristicObject) CharacteristicObject<AccuracyMode>.ApplyAndFreeze(CharacteristicObject[]) CharacteristicObject<AccuracyMode>.Freeze() CharacteristicObject<AccuracyMode>.UnfreezeCopy() CharacteristicObject<AccuracyMode>.CreateCharacteristic<TC>(String) CharacteristicObject.ResolveId(CharacteristicObject, String) CharacteristicObject.IdCharacteristic CharacteristicObject.AssertNotFrozen() CharacteristicObject.AssertIsRoot() CharacteristicObject.AssertIsNonFrozenRoot() CharacteristicObject.AssertIsAssignable(Characteristic, Object) CharacteristicObject.Owner CharacteristicObject.OwnerOrSelf CharacteristicObject.Frozen CharacteristicObject.IsPropertyBag CharacteristicObject.HasChanges CharacteristicObject.GetCharacteristicsWithValues() CharacteristicObject.HasValue(Characteristic) CharacteristicObject.ResolveValue<T>(Characteristic<T>, IResolver) CharacteristicObject.ResolveValue(Characteristic, IResolver) CharacteristicObject.ResolveValue<T>(Characteristic<T>, T) CharacteristicObject.ResolveValue(Characteristic, Object) CharacteristicObject.ResolveValueAsNullable<T>(Characteristic<T>) CharacteristicObject.ApplyCore(CharacteristicObject) CharacteristicObject.FreezeCore() CharacteristicObject.UnfreezeCopyCore() CharacteristicObject.Id CharacteristicObject.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Jobs Assembly : BenchmarkDotNet.dll Syntax public sealed class AccuracyMode : JobMode<AccuracyMode> Fields AnalyzeLaunchVarianceCharacteristic Declaration public static readonly Characteristic<bool> AnalyzeLaunchVarianceCharacteristic Field Value Type Description Characteristic < System.Boolean > EvaluateOverheadCharacteristic Declaration public static readonly Characteristic<bool> EvaluateOverheadCharacteristic Field Value Type Description Characteristic < System.Boolean > MaxAbsoluteErrorCharacteristic Declaration public static readonly Characteristic<TimeInterval> MaxAbsoluteErrorCharacteristic Field Value Type Description Characteristic < TimeInterval > MaxRelativeErrorCharacteristic Declaration public static readonly Characteristic<double> MaxRelativeErrorCharacteristic Field Value Type Description Characteristic < System.Double > MinInvokeCountCharacteristic Declaration public static readonly Characteristic<int> MinInvokeCountCharacteristic Field Value Type Description Characteristic < System.Int32 > MinIterationTimeCharacteristic Declaration public static readonly Characteristic<TimeInterval> MinIterationTimeCharacteristic Field Value Type Description Characteristic < TimeInterval > OutlierModeCharacteristic Declaration public static readonly Characteristic<OutlierMode> OutlierModeCharacteristic Field Value Type Description Characteristic < OutlierMode > Properties AnalyzeLaunchVariance Declaration public bool AnalyzeLaunchVariance { get; set; } Property Value Type Description System.Boolean EvaluateOverhead Declaration public bool EvaluateOverhead { get; set; } Property Value Type Description System.Boolean MaxAbsoluteError Declaration public TimeInterval MaxAbsoluteError { get; set; } Property Value Type Description TimeInterval MaxRelativeError Declaration public double MaxRelativeError { get; set; } Property Value Type Description System.Double MinInvokeCount Declaration public int MinInvokeCount { get; set; } Property Value Type Description System.Int32 MinIterationTime Declaration public TimeInterval MinIterationTime { get; set; } Property Value Type Description TimeInterval OutlierMode Declaration public OutlierMode OutlierMode { get; set; } Property Value Type Description OutlierMode Extension Methods CharacteristicHelper.GetThisTypeCharacteristics(CharacteristicObject) CharacteristicHelper.GetAllCharacteristics(CharacteristicObject) CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Jobs.Argument.html": {
    "href": "api/BenchmarkDotNet.Jobs.Argument.html",
    "title": "Class Argument | BenchmarkDotNet",
    "keywords": "Class Argument Inheritance System.Object Argument MonoArgument MsBuildArgument Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Jobs Assembly : BenchmarkDotNet.dll Syntax public abstract class Argument Properties TextRepresentation Declaration public virtual string TextRepresentation { get; protected set; } Property Value Type Description System.String Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Jobs.EnvMode.html": {
    "href": "api/BenchmarkDotNet.Jobs.EnvMode.html",
    "title": "Class EnvMode | BenchmarkDotNet",
    "keywords": "Class EnvMode Inheritance System.Object CharacteristicObject CharacteristicObject < EnvMode > JobMode < EnvMode > EnvMode Inherited Members JobMode<EnvMode>.Default JobMode<EnvMode>.Job CharacteristicObject<EnvMode>.Apply(CharacteristicObject) CharacteristicObject<EnvMode>.Apply(CharacteristicObject[]) CharacteristicObject<EnvMode>.ApplyAndFreeze(CharacteristicObject) CharacteristicObject<EnvMode>.ApplyAndFreeze(CharacteristicObject[]) CharacteristicObject<EnvMode>.Freeze() CharacteristicObject<EnvMode>.UnfreezeCopy() CharacteristicObject<EnvMode>.CreateCharacteristic<TC>(String) CharacteristicObject.ResolveId(CharacteristicObject, String) CharacteristicObject.IdCharacteristic CharacteristicObject.AssertNotFrozen() CharacteristicObject.AssertIsRoot() CharacteristicObject.AssertIsNonFrozenRoot() CharacteristicObject.AssertIsAssignable(Characteristic, Object) CharacteristicObject.Owner CharacteristicObject.OwnerOrSelf CharacteristicObject.Frozen CharacteristicObject.IsPropertyBag CharacteristicObject.HasChanges CharacteristicObject.GetCharacteristicsWithValues() CharacteristicObject.HasValue(Characteristic) CharacteristicObject.ResolveValue<T>(Characteristic<T>, IResolver) CharacteristicObject.ResolveValue(Characteristic, IResolver) CharacteristicObject.ResolveValue<T>(Characteristic<T>, T) CharacteristicObject.ResolveValue(Characteristic, Object) CharacteristicObject.ResolveValueAsNullable<T>(Characteristic<T>) CharacteristicObject.ApplyCore(CharacteristicObject) CharacteristicObject.FreezeCore() CharacteristicObject.UnfreezeCopyCore() CharacteristicObject.Id CharacteristicObject.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Jobs Assembly : BenchmarkDotNet.dll Syntax public sealed class EnvMode : JobMode<EnvMode> Constructors EnvMode() Declaration public EnvMode() EnvMode(Runtime) Declaration public EnvMode(Runtime runtime) Parameters Type Name Description Runtime runtime EnvMode(String) Declaration public EnvMode(string id) Parameters Type Name Description System.String id EnvMode(String, Jit, Platform) Declaration public EnvMode(string id, Jit jit, Platform platform) Parameters Type Name Description System.String id Jit jit Platform platform Fields AffinityCharacteristic Declaration public static readonly Characteristic<IntPtr> AffinityCharacteristic Field Value Type Description Characteristic < System.IntPtr > Clr Declaration public static readonly EnvMode Clr Field Value Type Description EnvMode Core Declaration public static readonly EnvMode Core Field Value Type Description EnvMode CoreRT Declaration public static readonly EnvMode CoreRT Field Value Type Description EnvMode GcCharacteristic Declaration public static readonly Characteristic<GcMode> GcCharacteristic Field Value Type Description Characteristic < GcMode > JitCharacteristic Declaration public static readonly Characteristic<Jit> JitCharacteristic Field Value Type Description Characteristic < Jit > LegacyJitX64 Declaration public static readonly EnvMode LegacyJitX64 Field Value Type Description EnvMode LegacyJitX86 Declaration public static readonly EnvMode LegacyJitX86 Field Value Type Description EnvMode Mono Declaration public static readonly EnvMode Mono Field Value Type Description EnvMode PlatformCharacteristic Declaration public static readonly Characteristic<Platform> PlatformCharacteristic Field Value Type Description Characteristic < Platform > RuntimeCharacteristic Declaration public static readonly Characteristic<Runtime> RuntimeCharacteristic Field Value Type Description Characteristic < Runtime > RyuJitX64 Declaration public static readonly EnvMode RyuJitX64 Field Value Type Description EnvMode RyuJitX86 Declaration public static readonly EnvMode RyuJitX86 Field Value Type Description EnvMode Properties Affinity ProcessorAffinity for the benchmark process. See also: https://msdn.microsoft.com/library/system.diagnostics.process.processoraffinity.aspx Declaration public IntPtr Affinity { get; set; } Property Value Type Description System.IntPtr Gc GcMode Declaration public GcMode Gc { get; } Property Value Type Description GcMode Jit JIT (Just-In-Time compiler) Declaration public Jit Jit { get; set; } Property Value Type Description Jit Platform Platform (x86 or x64) Declaration public Platform Platform { get; set; } Property Value Type Description Platform Runtime Runtime Declaration public Runtime Runtime { get; set; } Property Value Type Description Runtime Extension Methods CharacteristicHelper.GetThisTypeCharacteristics(CharacteristicObject) CharacteristicHelper.GetAllCharacteristics(CharacteristicObject) CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Jobs.EnvironmentVariable.html": {
    "href": "api/BenchmarkDotNet.Jobs.EnvironmentVariable.html",
    "title": "Class EnvironmentVariable | BenchmarkDotNet",
    "keywords": "Class EnvironmentVariable Inheritance System.Object EnvironmentVariable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Jobs Assembly : BenchmarkDotNet.dll Syntax public class EnvironmentVariable Constructors EnvironmentVariable(String, String) Declaration public EnvironmentVariable(string key, string value) Parameters Type Name Description System.String key System.String value Properties Key Declaration public string Key { get; } Property Value Type Description System.String Value Declaration public string Value { get; } Property Value Type Description System.String Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Mathematics.Histograms.HistogramBin.html": {
    "href": "api/BenchmarkDotNet.Mathematics.Histograms.HistogramBin.html",
    "title": "Class HistogramBin | BenchmarkDotNet",
    "keywords": "Class HistogramBin Inheritance System.Object HistogramBin Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Mathematics.Histograms Assembly : BenchmarkDotNet.dll Syntax public class HistogramBin Constructors HistogramBin(Double, Double, Double[]) Declaration public HistogramBin(double lower, double upper, double[] values) Parameters Type Name Description System.Double lower System.Double upper System.Double [] values Properties Count Declaration public int Count { get; } Property Value Type Description System.Int32 Gap Declaration public double Gap { get; } Property Value Type Description System.Double HasAny Declaration public bool HasAny { get; } Property Value Type Description System.Boolean IsEmpty Declaration public bool IsEmpty { get; } Property Value Type Description System.Boolean Lower Declaration public double Lower { get; } Property Value Type Description System.Double Upper Declaration public double Upper { get; } Property Value Type Description System.Double Values Declaration public double[] Values { get; } Property Value Type Description System.Double [] Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Union(HistogramBin, HistogramBin) Declaration public static HistogramBin Union(HistogramBin bin1, HistogramBin bin2) Parameters Type Name Description HistogramBin bin1 HistogramBin bin2 Returns Type Description HistogramBin Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Mathematics.Histograms.HistogramBuilder.html": {
    "href": "api/BenchmarkDotNet.Mathematics.Histograms.HistogramBuilder.html",
    "title": "Class HistogramBuilder | BenchmarkDotNet",
    "keywords": "Class HistogramBuilder Inheritance System.Object HistogramBuilder Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Mathematics.Histograms Assembly : BenchmarkDotNet.dll Syntax public static class HistogramBuilder Fields Adaptive Declaration public static readonly IHistogramBuilder Adaptive Field Value Type Description IHistogramBuilder AllBuilders Declaration public static readonly IHistogramBuilder[] AllBuilders Field Value Type Description IHistogramBuilder [] Simple Declaration public static readonly IHistogramBuilder Simple Field Value Type Description IHistogramBuilder"
  },
  "api/BenchmarkDotNet.Mathematics.Histograms.HistogramExtensions.html": {
    "href": "api/BenchmarkDotNet.Mathematics.Histograms.HistogramExtensions.html",
    "title": "Class HistogramExtensions | BenchmarkDotNet",
    "keywords": "Class HistogramExtensions Inheritance System.Object HistogramExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Mathematics.Histograms Assembly : BenchmarkDotNet.dll Syntax public static class HistogramExtensions Methods GetAllValues(Histogram) Declaration public static IEnumerable<double> GetAllValues(this Histogram histogram) Parameters Type Name Description Histogram histogram Returns Type Description System.Collections.Generic.IEnumerable < System.Double > GetBinCount(Histogram) Declaration public static int GetBinCount(this Histogram histogram) Parameters Type Name Description Histogram histogram Returns Type Description System.Int32 GetOptimalBinSize(Statistics, Nullable<BinSizeRule>) Declaration public static double GetOptimalBinSize(this Statistics s, BinSizeRule? rule = default(BinSizeRule? )) Parameters Type Name Description Statistics s System.Nullable < BinSizeRule > rule Returns Type Description System.Double ToTimeStr(Histogram, TimeUnit, Char, Boolean) Declaration public static string ToTimeStr(this Histogram histogram, TimeUnit unit = null, char binSymbol = '@', bool full = false) Parameters Type Name Description Histogram histogram TimeUnit unit System.Char binSymbol System.Boolean full Returns Type Description System.String"
  },
  "api/BenchmarkDotNet.Mathematics.Histograms.IHistogramBuilder.html": {
    "href": "api/BenchmarkDotNet.Mathematics.Histograms.IHistogramBuilder.html",
    "title": "Interface IHistogramBuilder | BenchmarkDotNet",
    "keywords": "Interface IHistogramBuilder Namespace : BenchmarkDotNet.Mathematics.Histograms Assembly : BenchmarkDotNet.dll Syntax public interface IHistogramBuilder Methods Build(Statistics, Nullable<BinSizeRule>) Declaration Histogram Build(Statistics s, BinSizeRule? rule = default(BinSizeRule? )) Parameters Type Name Description Statistics s System.Nullable < BinSizeRule > rule Returns Type Description Histogram BuildWithFixedBinSize(IEnumerable<Double>, Double) Declaration Histogram BuildWithFixedBinSize(IEnumerable<double> values, double binSize) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.Double > values System.Double binSize Returns Type Description Histogram Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Validators.ValidationError.html": {
    "href": "api/BenchmarkDotNet.Validators.ValidationError.html",
    "title": "Class ValidationError | BenchmarkDotNet",
    "keywords": "Class ValidationError Inheritance System.Object ValidationError Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Validators Assembly : BenchmarkDotNet.dll Syntax public class ValidationError Constructors ValidationError(Boolean, String, Benchmark) Declaration public ValidationError(bool isCritical, string message, Benchmark benchmark = null) Parameters Type Name Description System.Boolean isCritical System.String message Benchmark benchmark Properties Benchmark Declaration public Benchmark Benchmark { get; } Property Value Type Description Benchmark IsCritical Declaration public bool IsCritical { get; } Property Value Type Description System.Boolean Message Declaration public string Message { get; } Property Value Type Description System.String Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Validators.ValidationErrorReporter.html": {
    "href": "api/BenchmarkDotNet.Validators.ValidationErrorReporter.html",
    "title": "Class ValidationErrorReporter | BenchmarkDotNet",
    "keywords": "Class ValidationErrorReporter Inheritance System.Object ValidationErrorReporter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Validators Assembly : BenchmarkDotNet.dll Syntax public static class ValidationErrorReporter Fields ConsoleErrorPrefix Declaration public const string ConsoleErrorPrefix = \"// ERROR: \" Field Value Type Description System.String Methods ReportIfAny(IEnumerable<ValidationError>, IHost) Declaration public static bool ReportIfAny(IEnumerable<ValidationError> validationErrors, IHost host) Parameters Type Name Description System.Collections.Generic.IEnumerable < ValidationError > validationErrors IHost host Returns Type Description System.Boolean"
  },
  "api/BenchmarkDotNet.Validators.ValidationParameters.html": {
    "href": "api/BenchmarkDotNet.Validators.ValidationParameters.html",
    "title": "Class ValidationParameters | BenchmarkDotNet",
    "keywords": "Class ValidationParameters Inheritance System.Object ValidationParameters Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Validators Assembly : BenchmarkDotNet.dll Syntax public class ValidationParameters Constructors ValidationParameters(IReadOnlyList<Benchmark>, IConfig) Declaration public ValidationParameters(IReadOnlyList<Benchmark> benchmarks, IConfig config) Parameters Type Name Description System.Collections.Generic.IReadOnlyList < Benchmark > benchmarks IConfig config Properties Benchmarks Declaration public IReadOnlyList<Benchmark> Benchmarks { get; } Property Value Type Description System.Collections.Generic.IReadOnlyList < Benchmark > Config Declaration public IConfig Config { get; } Property Value Type Description IConfig Operators Implicit(Benchmark[] to ValidationParameters) Declaration public static implicit operator ValidationParameters(Benchmark[] benchmarks) Parameters Type Name Description Benchmark [] benchmarks Returns Type Description ValidationParameters Implicit(BenchmarkRunInfo to ValidationParameters) Declaration public static implicit operator ValidationParameters(BenchmarkRunInfo benchmarkRunInfo) Parameters Type Name Description BenchmarkRunInfo benchmarkRunInfo Returns Type Description ValidationParameters Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Analysers.IterationSetupCleanupAnalyser.html": {
    "href": "api/BenchmarkDotNet.Analysers.IterationSetupCleanupAnalyser.html",
    "title": "Class IterationSetupCleanupAnalyser | BenchmarkDotNet",
    "keywords": "Class IterationSetupCleanupAnalyser Inheritance System.Object AnalyserBase IterationSetupCleanupAnalyser Implements IAnalyser Inherited Members AnalyserBase.Analyse(Summary) AnalyserBase.AnalyseSummary(Summary) AnalyserBase.CreateHint(String, BenchmarkReport) AnalyserBase.CreateWarning(String, BenchmarkReport) AnalyserBase.CreateError(String, BenchmarkReport) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Analysers Assembly : BenchmarkDotNet.dll Syntax public class IterationSetupCleanupAnalyser : AnalyserBase, IAnalyser Fields Default Declaration public static readonly IAnalyser Default Field Value Type Description IAnalyser Properties Id Declaration public override string Id { get; } Property Value Type Description System.String Overrides AnalyserBase.Id Methods AnalyseReport(BenchmarkReport, Summary) Declaration public override IEnumerable<Conclusion> AnalyseReport(BenchmarkReport report, Summary summary) Parameters Type Name Description BenchmarkReport report Summary summary Returns Type Description System.Collections.Generic.IEnumerable < Conclusion > Overrides AnalyserBase.AnalyseReport(BenchmarkReport, Summary) Implements IAnalyser Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.BenchmarkAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.BenchmarkAttribute.html",
    "title": "Class BenchmarkAttribute | BenchmarkDotNet",
    "keywords": "Class BenchmarkAttribute Inheritance System.Object System.Attribute BenchmarkAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes Assembly : BenchmarkDotNet.dll Syntax [AttributeUsage(AttributeTargets.Method)] public class BenchmarkAttribute : Attribute Properties Baseline Declaration public bool Baseline { get; set; } Property Value Type Description System.Boolean Description Declaration public string Description { get; set; } Property Value Type Description System.String OperationsPerInvoke Declaration public int OperationsPerInvoke { get; set; } Property Value Type Description System.Int32 Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Columns.IterationsColumnAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Columns.IterationsColumnAttribute.html",
    "title": "Class IterationsColumnAttribute | BenchmarkDotNet",
    "keywords": "Class IterationsColumnAttribute Inheritance System.Object System.Attribute ColumnConfigBaseAttribute IterationsColumnAttribute Implements IConfigSource Inherited Members ColumnConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Columns Assembly : BenchmarkDotNet.dll Syntax public class IterationsColumnAttribute : ColumnConfigBaseAttribute, IConfigSource Constructors IterationsColumnAttribute() Declaration public IterationsColumnAttribute() Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Columns.NamespaceColumnAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Columns.NamespaceColumnAttribute.html",
    "title": "Class NamespaceColumnAttribute | BenchmarkDotNet",
    "keywords": "Class NamespaceColumnAttribute Add a column with the target method namespace. Inheritance System.Object System.Attribute ColumnConfigBaseAttribute NamespaceColumnAttribute Implements IConfigSource Inherited Members ColumnConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Columns Assembly : BenchmarkDotNet.dll Syntax public class NamespaceColumnAttribute : ColumnConfigBaseAttribute, IConfigSource Constructors NamespaceColumnAttribute() Declaration public NamespaceColumnAttribute() Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Exporters.CsvMeasurementsExporterAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Exporters.CsvMeasurementsExporterAttribute.html",
    "title": "Class CsvMeasurementsExporterAttribute | BenchmarkDotNet",
    "keywords": "Class CsvMeasurementsExporterAttribute Inheritance System.Object System.Attribute ExporterConfigBaseAttribute CsvMeasurementsExporterAttribute Implements IConfigSource Inherited Members ExporterConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Exporters Assembly : BenchmarkDotNet.dll Syntax public class CsvMeasurementsExporterAttribute : ExporterConfigBaseAttribute, IConfigSource Constructors CsvMeasurementsExporterAttribute(CsvSeparator) Declaration public CsvMeasurementsExporterAttribute(CsvSeparator separator = CsvSeparator.CurrentCulture) Parameters Type Name Description CsvSeparator separator Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Jobs.JobIdGenerator.html": {
    "href": "api/BenchmarkDotNet.Jobs.JobIdGenerator.html",
    "title": "Class JobIdGenerator | BenchmarkDotNet",
    "keywords": "Class JobIdGenerator Inheritance System.Object JobIdGenerator Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Jobs Assembly : BenchmarkDotNet.dll Syntax public static class JobIdGenerator Methods GenerateRandomId(Job) Declaration public static string GenerateRandomId(Job job) Parameters Type Name Description Job job Returns Type Description System.String"
  },
  "api/BenchmarkDotNet.Validators.BaselineValidator.html": {
    "href": "api/BenchmarkDotNet.Validators.BaselineValidator.html",
    "title": "Class BaselineValidator | BenchmarkDotNet",
    "keywords": "Class BaselineValidator Inheritance System.Object BaselineValidator Implements IValidator Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Validators Assembly : BenchmarkDotNet.dll Syntax public class BaselineValidator : IValidator Fields FailOnError Declaration public static readonly BaselineValidator FailOnError Field Value Type Description BaselineValidator Properties TreatsWarningsAsErrors Declaration public bool TreatsWarningsAsErrors { get; } Property Value Type Description System.Boolean Methods Validate(ValidationParameters) Declaration public IEnumerable<ValidationError> Validate(ValidationParameters input) Parameters Type Name Description ValidationParameters input Returns Type Description System.Collections.Generic.IEnumerable < ValidationError > Implements IValidator Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Jobs.RyuJitX86JobAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Jobs.RyuJitX86JobAttribute.html",
    "title": "Class RyuJitX86JobAttribute | BenchmarkDotNet",
    "keywords": "Class RyuJitX86JobAttribute Inheritance System.Object System.Attribute JobConfigBaseAttribute RyuJitX86JobAttribute Implements IConfigSource Inherited Members JobConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Jobs Assembly : BenchmarkDotNet.dll Syntax public class RyuJitX86JobAttribute : JobConfigBaseAttribute, IConfigSource Constructors RyuJitX86JobAttribute() Declaration public RyuJitX86JobAttribute() Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Jobs.ShortRunJobAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Jobs.ShortRunJobAttribute.html",
    "title": "Class ShortRunJobAttribute | BenchmarkDotNet",
    "keywords": "Class ShortRunJobAttribute Inheritance System.Object System.Attribute JobConfigBaseAttribute ShortRunJobAttribute Implements IConfigSource Inherited Members JobConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Jobs Assembly : BenchmarkDotNet.dll Syntax public class ShortRunJobAttribute : JobConfigBaseAttribute, IConfigSource Constructors ShortRunJobAttribute() Declaration public ShortRunJobAttribute() Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Characteristics.Characteristic-1.html": {
    "href": "api/BenchmarkDotNet.Characteristics.Characteristic-1.html",
    "title": "Class Characteristic<T> | BenchmarkDotNet",
    "keywords": "Class Characteristic<T> Inheritance System.Object Characteristic Characteristic<T> Inherited Members Characteristic.EmptyValue Characteristic.Create<TOwner, T>(String) Characteristic.Create<TOwner, T>(String, T) Characteristic.Create<TOwner, T>(String, Func<CharacteristicObject, T, T>, T, Boolean) Characteristic.Id Characteristic.FullId Characteristic.IgnoreOnApply Characteristic.CharacteristicType Characteristic.DeclaringType Characteristic.HasChildCharacteristics Characteristic.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : BenchmarkDotNet.Characteristics Assembly : BenchmarkDotNet.dll Syntax public class Characteristic<T> : Characteristic Type Parameters Name Description T Properties FallbackValue Declaration public T FallbackValue { get; } Property Value Type Description T Item[CharacteristicObject] Declaration public T this[CharacteristicObject obj] { get; set; } Parameters Type Name Description CharacteristicObject obj Property Value Type Description T Resolver Declaration public Func<CharacteristicObject, T, T> Resolver { get; } Property Value Type Description System.Func < CharacteristicObject , T, T> Extension Methods CharacteristicHelper.IsPresentableCharacteristic(Characteristic, Boolean) CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Columns.CategoriesColumnAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Columns.CategoriesColumnAttribute.html",
    "title": "Class CategoriesColumnAttribute | BenchmarkDotNet",
    "keywords": "Class CategoriesColumnAttribute Inheritance System.Object System.Attribute ColumnConfigBaseAttribute CategoriesColumnAttribute Implements IConfigSource Inherited Members ColumnConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Columns Assembly : BenchmarkDotNet.dll Syntax public class CategoriesColumnAttribute : ColumnConfigBaseAttribute, IConfigSource Constructors CategoriesColumnAttribute() Declaration public CategoriesColumnAttribute() Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Columns.MeanColumnAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Columns.MeanColumnAttribute.html",
    "title": "Class MeanColumnAttribute | BenchmarkDotNet",
    "keywords": "Class MeanColumnAttribute Inheritance System.Object System.Attribute ColumnConfigBaseAttribute MeanColumnAttribute Implements IConfigSource Inherited Members ColumnConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Columns Assembly : BenchmarkDotNet.dll Syntax public class MeanColumnAttribute : ColumnConfigBaseAttribute, IConfigSource Constructors MeanColumnAttribute() Declaration public MeanColumnAttribute() Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Columns.SkewnessColumnAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Columns.SkewnessColumnAttribute.html",
    "title": "Class SkewnessColumnAttribute | BenchmarkDotNet",
    "keywords": "Class SkewnessColumnAttribute Inheritance System.Object System.Attribute ColumnConfigBaseAttribute SkewnessColumnAttribute Implements IConfigSource Inherited Members ColumnConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Columns Assembly : BenchmarkDotNet.dll Syntax public class SkewnessColumnAttribute : ColumnConfigBaseAttribute, IConfigSource Constructors SkewnessColumnAttribute() Declaration public SkewnessColumnAttribute() Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Exporters.CsvExporterAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Exporters.CsvExporterAttribute.html",
    "title": "Class CsvExporterAttribute | BenchmarkDotNet",
    "keywords": "Class CsvExporterAttribute Inheritance System.Object System.Attribute ExporterConfigBaseAttribute CsvExporterAttribute Implements IConfigSource Inherited Members ExporterConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Exporters Assembly : BenchmarkDotNet.dll Syntax public class CsvExporterAttribute : ExporterConfigBaseAttribute, IConfigSource Constructors CsvExporterAttribute(CsvSeparator) Declaration public CsvExporterAttribute(CsvSeparator separator = CsvSeparator.CurrentCulture) Parameters Type Name Description CsvSeparator separator Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Analysers.IAnalyser.html": {
    "href": "api/BenchmarkDotNet.Analysers.IAnalyser.html",
    "title": "Interface IAnalyser | BenchmarkDotNet",
    "keywords": "Interface IAnalyser Namespace : BenchmarkDotNet.Analysers Assembly : BenchmarkDotNet.dll Syntax public interface IAnalyser Properties Id Declaration string Id { get; } Property Value Type Description System.String Methods Analyse(Summary) Declaration IEnumerable<Conclusion> Analyse(Summary summary) Parameters Type Name Description Summary summary Returns Type Description System.Collections.Generic.IEnumerable < Conclusion > Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Analysers.OutliersAnalyser.html": {
    "href": "api/BenchmarkDotNet.Analysers.OutliersAnalyser.html",
    "title": "Class OutliersAnalyser | BenchmarkDotNet",
    "keywords": "Class OutliersAnalyser Inheritance System.Object AnalyserBase OutliersAnalyser Implements IAnalyser Inherited Members AnalyserBase.Analyse(Summary) AnalyserBase.AnalyseSummary(Summary) AnalyserBase.CreateHint(String, BenchmarkReport) AnalyserBase.CreateWarning(String, BenchmarkReport) AnalyserBase.CreateError(String, BenchmarkReport) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Analysers Assembly : BenchmarkDotNet.dll Syntax public class OutliersAnalyser : AnalyserBase, IAnalyser Fields Default Declaration public static readonly IAnalyser Default Field Value Type Description IAnalyser Properties Id Declaration public override string Id { get; } Property Value Type Description System.String Overrides AnalyserBase.Id Methods AnalyseReport(BenchmarkReport, Summary) Declaration public override IEnumerable<Conclusion> AnalyseReport(BenchmarkReport report, Summary summary) Parameters Type Name Description BenchmarkReport report Summary summary Returns Type Description System.Collections.Generic.IEnumerable < Conclusion > Overrides AnalyserBase.AnalyseReport(BenchmarkReport, Summary) GetMessage(Int32, Int32) Returns a nice message which can be displayed in the summary. Declaration public static string GetMessage(int actualOutliers, int allOutliers) Parameters Type Name Description System.Int32 actualOutliers Actual outliers which were removed from the statistics System.Int32 allOutliers All outliers which present in the distribution (lower and upper) Returns Type Description System.String The message Implements IAnalyser Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.BenchmarkCategoryAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.BenchmarkCategoryAttribute.html",
    "title": "Class BenchmarkCategoryAttribute | BenchmarkDotNet",
    "keywords": "Class BenchmarkCategoryAttribute Inheritance System.Object System.Attribute BenchmarkCategoryAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes Assembly : BenchmarkDotNet.dll Syntax [AttributeUsage(AttributeTargets.Assembly | AttributeTargets.Class | AttributeTargets.Method)] public class BenchmarkCategoryAttribute : Attribute Constructors BenchmarkCategoryAttribute() Declaration protected BenchmarkCategoryAttribute() BenchmarkCategoryAttribute(String[]) Declaration public BenchmarkCategoryAttribute(params string[] categories) Parameters Type Name Description System.String [] categories Properties Categories Declaration public string[] Categories { get; } Property Value Type Description System.String [] Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Columns.LogicalGroupColumnAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Columns.LogicalGroupColumnAttribute.html",
    "title": "Class LogicalGroupColumnAttribute | BenchmarkDotNet",
    "keywords": "Class LogicalGroupColumnAttribute Inheritance System.Object System.Attribute ColumnConfigBaseAttribute LogicalGroupColumnAttribute Implements IConfigSource Inherited Members ColumnConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Columns Assembly : BenchmarkDotNet.dll Syntax [AttributeUsage(AttributeTargets.Assembly | AttributeTargets.Class, AllowMultiple = true)] public class LogicalGroupColumnAttribute : ColumnConfigBaseAttribute, IConfigSource Constructors LogicalGroupColumnAttribute() Declaration public LogicalGroupColumnAttribute() Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Analysers.AnalyserBase.html": {
    "href": "api/BenchmarkDotNet.Analysers.AnalyserBase.html",
    "title": "Class AnalyserBase | BenchmarkDotNet",
    "keywords": "Class AnalyserBase Inheritance System.Object AnalyserBase EnvironmentAnalyser IterationSetupCleanupAnalyser MinIterationTimeAnalyser MultimodalDistributionAnalyzer OutliersAnalyser RuntimeErrorAnalyser Implements IAnalyser Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Analysers Assembly : BenchmarkDotNet.dll Syntax public abstract class AnalyserBase : IAnalyser Properties Id Declaration public abstract string Id { get; } Property Value Type Description System.String Methods Analyse(Summary) Declaration public IEnumerable<Conclusion> Analyse(Summary summary) Parameters Type Name Description Summary summary Returns Type Description System.Collections.Generic.IEnumerable < Conclusion > AnalyseReport(BenchmarkReport, Summary) Declaration public virtual IEnumerable<Conclusion> AnalyseReport(BenchmarkReport report, Summary summary) Parameters Type Name Description BenchmarkReport report Summary summary Returns Type Description System.Collections.Generic.IEnumerable < Conclusion > AnalyseSummary(Summary) Declaration public virtual IEnumerable<Conclusion> AnalyseSummary(Summary summary) Parameters Type Name Description Summary summary Returns Type Description System.Collections.Generic.IEnumerable < Conclusion > CreateError(String, BenchmarkReport) Declaration public Conclusion CreateError(string message, BenchmarkReport report = null) Parameters Type Name Description System.String message BenchmarkReport report Returns Type Description Conclusion CreateHint(String, BenchmarkReport) Declaration public Conclusion CreateHint(string message, BenchmarkReport report = null) Parameters Type Name Description System.String message BenchmarkReport report Returns Type Description Conclusion CreateWarning(String, BenchmarkReport) Declaration public Conclusion CreateWarning(string message, BenchmarkReport report = null) Parameters Type Name Description System.String message BenchmarkReport report Returns Type Description Conclusion Implements IAnalyser Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Analysers.RuntimeErrorAnalyser.html": {
    "href": "api/BenchmarkDotNet.Analysers.RuntimeErrorAnalyser.html",
    "title": "Class RuntimeErrorAnalyser | BenchmarkDotNet",
    "keywords": "Class RuntimeErrorAnalyser Inheritance System.Object AnalyserBase RuntimeErrorAnalyser Implements IAnalyser Inherited Members AnalyserBase.Analyse(Summary) AnalyserBase.AnalyseSummary(Summary) AnalyserBase.CreateHint(String, BenchmarkReport) AnalyserBase.CreateWarning(String, BenchmarkReport) AnalyserBase.CreateError(String, BenchmarkReport) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Analysers Assembly : BenchmarkDotNet.dll Syntax public class RuntimeErrorAnalyser : AnalyserBase, IAnalyser Fields Default Declaration public static readonly IAnalyser Default Field Value Type Description IAnalyser Properties Id Declaration public override string Id { get; } Property Value Type Description System.String Overrides AnalyserBase.Id Methods AnalyseReport(BenchmarkReport, Summary) Declaration public override IEnumerable<Conclusion> AnalyseReport(BenchmarkReport report, Summary summary) Parameters Type Name Description BenchmarkReport report Summary summary Returns Type Description System.Collections.Generic.IEnumerable < Conclusion > Overrides AnalyserBase.AnalyseReport(BenchmarkReport, Summary) Implements IAnalyser Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Columns.AllStatisticsColumnAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Columns.AllStatisticsColumnAttribute.html",
    "title": "Class AllStatisticsColumnAttribute | BenchmarkDotNet",
    "keywords": "Class AllStatisticsColumnAttribute Inheritance System.Object System.Attribute ColumnConfigBaseAttribute AllStatisticsColumnAttribute Implements IConfigSource Inherited Members ColumnConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Columns Assembly : BenchmarkDotNet.dll Syntax public class AllStatisticsColumnAttribute : ColumnConfigBaseAttribute, IConfigSource Constructors AllStatisticsColumnAttribute() Declaration public AllStatisticsColumnAttribute() Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Columns.MValueColumnAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Columns.MValueColumnAttribute.html",
    "title": "Class MValueColumnAttribute | BenchmarkDotNet",
    "keywords": "Class MValueColumnAttribute Prints mvalue. See http://www.brendangregg.com/FrequencyTrails/modes.html Inheritance System.Object System.Attribute ColumnConfigBaseAttribute MValueColumnAttribute Implements IConfigSource Inherited Members ColumnConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Columns Assembly : BenchmarkDotNet.dll Syntax public class MValueColumnAttribute : ColumnConfigBaseAttribute, IConfigSource Constructors MValueColumnAttribute() Declaration public MValueColumnAttribute() Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Columns.WelchTTestPValueColumnAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Columns.WelchTTestPValueColumnAttribute.html",
    "title": "Class WelchTTestPValueColumnAttribute | BenchmarkDotNet",
    "keywords": "Class WelchTTestPValueColumnAttribute Inheritance System.Object System.Attribute ColumnConfigBaseAttribute WelchTTestPValueColumnAttribute Implements IConfigSource Inherited Members ColumnConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Columns Assembly : BenchmarkDotNet.dll Syntax public class WelchTTestPValueColumnAttribute : ColumnConfigBaseAttribute, IConfigSource Constructors WelchTTestPValueColumnAttribute() Declaration public WelchTTestPValueColumnAttribute() Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Exporters.JsonExporterAttribute.BriefAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Exporters.JsonExporterAttribute.BriefAttribute.html",
    "title": "Class JsonExporterAttribute.BriefAttribute | BenchmarkDotNet",
    "keywords": "Class JsonExporterAttribute.BriefAttribute Inheritance System.Object System.Attribute ExporterConfigBaseAttribute JsonExporterAttribute JsonExporterAttribute.BriefAttribute Implements IConfigSource Inherited Members ExporterConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Exporters Assembly : BenchmarkDotNet.dll Syntax public class BriefAttribute : JsonExporterAttribute, IConfigSource Constructors BriefAttribute() Declaration public BriefAttribute() Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Attributes.Exporters.RPlotExporterAttribute.html": {
    "href": "api/BenchmarkDotNet.Attributes.Exporters.RPlotExporterAttribute.html",
    "title": "Class RPlotExporterAttribute | BenchmarkDotNet",
    "keywords": "Class RPlotExporterAttribute Inheritance System.Object System.Attribute ExporterConfigBaseAttribute RPlotExporterAttribute Implements IConfigSource Inherited Members ExporterConfigBaseAttribute.Config System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : BenchmarkDotNet.Attributes.Exporters Assembly : BenchmarkDotNet.dll Syntax public class RPlotExporterAttribute : ExporterConfigBaseAttribute, IConfigSource Constructors RPlotExporterAttribute() Declaration public RPlotExporterAttribute() Implements IConfigSource Extension Methods CommonExtensions.IsOneOf<T>(T, T[])"
  },
  "api/BenchmarkDotNet.Portability.Cpu.html": {
    "href": "api/BenchmarkDotNet.Portability.Cpu.html",
    "title": "Namespace BenchmarkDotNet.Portability.Cpu | BenchmarkDotNet",
    "keywords": "Namespace BenchmarkDotNet.Portability.Cpu Classes CpuInfo CpuInfoFormatter"
  },
  "articles/guides/getting-started.html": {
    "href": "articles/guides/getting-started.html",
    "title": "Getting started | BenchmarkDotNet",
    "keywords": "Getting started To get started with BenchmarkDotNet, please follow these steps. Step 1. Installation Install BenchmarkDotNet via the NuGet package: BenchmarkDotNet PM> Install-Package BenchmarkDotNet Step 2. Design a benchmark Create a new console application, write a class with methods that you want to measure and mark them with the Benchmark attribute. In the following example, we compare MD5 and SHA256 cryptographic hash functions: using System; using System.Security.Cryptography; using BenchmarkDotNet.Attributes; using BenchmarkDotNet.Running; namespace MyBenchmarks { public class Md5VsSha256 { private const int N = 10000; private readonly byte[] data; private readonly SHA256 sha256 = SHA256.Create(); private readonly MD5 md5 = MD5.Create(); public Md5VsSha256() { data = new byte[N]; new Random(42).NextBytes(data); } [Benchmark] public byte[] Sha256() => sha256.ComputeHash(data); [Benchmark] public byte[] Md5() => md5.ComputeHash(data); } public class Program { public static void Main(string[] args) { var summary = BenchmarkRunner.Run<Md5VsSha256>(); } } } The BenchmarkRunner.Run<Md5VsSha256>() call runs your benchmarks and print results to console output. Step 3. View results View the results. Here is an example of output from the above benchmark: BenchmarkDotNet=v0.10.1, OS=Microsoft Windows NT 6.2.9200.0 Processor=Intel(R) Core(TM) i7-4702MQ CPU 2.20GHz, ProcessorCount=8 Frequency=2143476 Hz, Resolution=466.5319 ns, Timer=TSC [Host] : Clr 4.0.30319.42000, 64bit RyuJIT-v4.6.1586.0 DefaultJob : Clr 4.0.30319.42000, 64bit RyuJIT-v4.6.1586.0 Method Mean StdDev Allocated Sha256 130.5169 us 1.8489 us 188 B Md5 25.8010 us 0.1757 us 113 B Step 4. Analyze results Analyze it. In your bin directory, you can find a lot of useful files with detailed information. For example: Csv reports with raw data: Md5VsSha256-report.csv , Md5VsSha256-runs.csv Markdown reports: Md5VsSha256-report-default.md , Md5VsSha256-report-stackoverflow.md , Md5VsSha256-report-github.md Plain report and log: Md5VsSha256-report.txt , Md5VsSha256.log Plots (if you have installed R): Md5VsSha256-barplot.png , Md5VsSha256-boxplot.png , and so on. Next steps BenchmarkDotNet provides a lot of features which help to high-quality performance research. If you want to know more about BenchmarkDotNet features, checkout the Overview page. If you want have any questions, checkout the FAQ page. If you didn't find answer for your question on this page, ask it on gitter or create an issue ."
  },
  "articles/samples/IntroBasic.html": {
    "href": "articles/samples/IntroBasic.html",
    "title": "Sample: IntroBasic | BenchmarkDotNet",
    "keywords": "Sample: IntroBasic Source code using System.Threading; using BenchmarkDotNet.Attributes; namespace BenchmarkDotNet.Samples { // It is very easy to use BenchmarkDotNet. You should just create a class public class IntroBasic { // And define a method with the Benchmark attribute [Benchmark] public void Sleep() => Thread.Sleep(10); // You can write a description for your method. [Benchmark(Description = \"Thread.Sleep(10)\")] public void SleepWithDescription() => Thread.Sleep(10); } }"
  },
  "articles/samples/IntroArgumentsSource.html": {
    "href": "articles/samples/IntroArgumentsSource.html",
    "title": "Sample: IntroArgumentsSource | BenchmarkDotNet",
    "keywords": "Sample: IntroArgumentsSource In case you want to use a lot of values, you should use [ArgumentsSource] . You can mark one or several fields or properties in your class by the [ArgumentsSource] attribute. In this attribute, you have to specify the name of public method/property which is going to provide the values (something that implements IEnumerable ). The source must be within benchmarked type! Source code using System; using System.Collections.Generic; using BenchmarkDotNet.Attributes; namespace BenchmarkDotNet.Samples { public class IntroArgumentsSource { [Benchmark] [ArgumentsSource(nameof(Numbers))] public double Pow(double x, double y) => Math.Pow(x, y); public IEnumerable<object[]> Numbers() { yield return new object[] { 1.0, 1.0 }; yield return new object[] { 2.0, 2.0 }; yield return new object[] { 4.0, 4.0 }; yield return new object[] { 10.0, 10.0 }; } } } Output | Method | x | y | Mean | Error | StdDev | |------- |--- |--- |----------:|----------:|----------:| | Pow | 1 | 1 | 9.360 ns | 0.0190 ns | 0.0149 ns | | Pow | 2 | 2 | 40.624 ns | 0.3413 ns | 0.3192 ns | | Pow | 4 | 4 | 40.537 ns | 0.0560 ns | 0.0524 ns | | Pow | 10 | 10 | 40.395 ns | 0.3274 ns | 0.3063 ns | Another example If the values are complex types you need to override ToString method to change the display names used in the results. [DryJob] public class WithNonPrimitiveArgumentsSource { [Benchmark] [ArgumentsSource(nameof(NonPrimitive))] public void Simple(SomeClass someClass, SomeStruct someStruct) { for (int i = 0; i < someStruct.RangeEnd; i++) Console.WriteLine($\"// array.Values[{i}] = {someClass.Values[i]}\"); } public IEnumerable<object[]> NonPrimitive() { yield return new object[] { new SomeClass(Enumerable.Range(0, 10).ToArray()), new SomeStruct(10) }; yield return new object[] { new SomeClass(Enumerable.Range(0, 15).ToArray()), new SomeStruct(15) }; } public class SomeClass { public SomeClass(int[] initialValues) => Values = initialValues.Select(val => val * 2).ToArray(); public int[] Values { get; } public override string ToString() => $\"{Values.Length} items\"; } public struct SomeStruct { public SomeStruct(int rangeEnd) => RangeEnd = rangeEnd; public int RangeEnd { get; } public override string ToString() => $\"{RangeEnd}\"; } } | Method | someClass | someStruct | Mean | Error | |------- |---------- |----------- |---------:|------:| | Simple | 10 items | 10 | 887.2 us | NA | | Simple | 15 items | 15 | 963.1 us | NA | See also Parameterization"
  },
  "articles/samples/IntroArguments.html": {
    "href": "articles/samples/IntroArguments.html",
    "title": "Sample: IntroArguments | BenchmarkDotNet",
    "keywords": "Sample: IntroArguments As an alternative to using [Params] , you can specify arguments for your benchmarks. There are several ways to do it (described below). Important InProcessToolchain does not support Arguments (yet!). See #687 for more details. The [Arguments] allows you to provide a set of values. Every value must be a compile-time constant (it's C# lanugage limitation for attributes in general). You can also combine [Arguments] with [Params] . As a result, you will get results for each combination of params values. Source code using System.Threading; using BenchmarkDotNet.Attributes; namespace BenchmarkDotNet.Samples { public class IntroArguments { [Params(true, false)] // Arguments can be combined with Params public bool AddExtra5Miliseconds; [Benchmark] [Arguments(100, 10)] [Arguments(100, 20)] [Arguments(200, 10)] [Arguments(200, 20)] public void Benchmark(int a, int b) { if (AddExtra5Miliseconds) Thread.Sleep(a + b + 5); else Thread.Sleep(a + b); } } } Output | Method | AddExtra5Miliseconds | a | b | Mean | Error | StdDev | |---------- |--------------------- |---- |--- |---------:|----------:|----------:| | Benchmark | False | 100 | 10 | 110.1 ms | 0.0056 ms | 0.0044 ms | | Benchmark | False | 100 | 20 | 120.1 ms | 0.0155 ms | 0.0138 ms | | Benchmark | False | 200 | 10 | 210.2 ms | 0.0187 ms | 0.0175 ms | | Benchmark | False | 200 | 20 | 220.3 ms | 0.1055 ms | 0.0986 ms | | Benchmark | True | 100 | 10 | 115.3 ms | 0.1375 ms | 0.1286 ms | | Benchmark | True | 100 | 20 | 125.3 ms | 0.1212 ms | 0.1134 ms | | Benchmark | True | 200 | 10 | 215.4 ms | 0.0779 ms | 0.0691 ms | | Benchmark | True | 200 | 20 | 225.4 ms | 0.0775 ms | 0.0725 ms | See also Parameterization"
  },
  "articles/contributing/documentation.html": {
    "href": "articles/contributing/documentation.html",
    "title": "Documentation | BenchmarkDotNet",
    "keywords": "Documentation BenchmarkDotNet uses DocFX as a documentation generation tool. Hints If you want to provide a link to API, you can use cross references by UID . For example, [OutlierMode](xref:BenchmarkDotNet.Mathematics.OutlierMode) and @BenchmarkDotNet.Mathematics.OutlierMode will be transformed to OutlierMode . Notes DocFX uses the following syntax for different types of notes: > [!NOTE] > <note content> > [!TIP] > <note content> > [!WARNING] > <warning content> > [!IMPORTANT] > <important content> > [!Caution] > <caution content> It will be transformed to: Note Tip Warning Important Caution See also DocFX User Manual DocFX Tutorials: Links and Cross References DocFX Flavored Markdown"
  }
}