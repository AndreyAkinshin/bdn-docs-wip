<!DOCTYPE html>
<!--[if IE 8]><html class="no-js lt-ie9" lang="en" > <![endif]-->
<!--[if gt IE 8]><!-->
<html class="no-js" lang="en">
<!--<![endif]-->
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>FAQ - BenchmarkDotNet Documentation</title>
    <link rel="shortcut icon" href="favicon.ico">
    <link rel="stylesheet" href="css/theme.css" type="text/css" />
    <link rel="stylesheet" href="css/theme_colors.css" type="text/css" />
    <link rel="stylesheet" href="css/styles/vs.css">
    <link rel="stylesheet" href="css/font-awesome.4.5.0.min.css">

    <!-- Google Analytics -->
    <script>
      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
      })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

      ga('create', 'UA-41419012-6', 'auto');
      ga('send', 'pageview');

    </script>
    <!-- /Google Analytics -->
    <!-- Yandex.Metrika counter -->
    <script type="text/javascript">
        (function (d, w, c) {
            (w[c] = w[c] || []).push(function() {
                try {
                    w.yaCounter40812449 = new Ya.Metrika({
                        id:40812449,
                        clickmap:true,
                        trackLinks:true,
                        accurateTrackBounce:true
                    });
                } catch(e) { }
            });

            var n = d.getElementsByTagName("script")[0],
                s = d.createElement("script"),
                f = function () { n.parentNode.insertBefore(s, n); };
            s.type = "text/javascript";
            s.async = true;
            s.src = "https://mc.yandex.ru/metrika/watch.js";

            if (w.opera == "[object Opera]") {
                d.addEventListener("DOMContentLoaded", f, false);
            } else { f(); }
        })(document, window, "yandex_metrika_callbacks");
    </script>
    <noscript><div><img src="https://mc.yandex.ru/watch/40812449" style="position:absolute; left:-9999px;" alt="" /></div></noscript>
    <!-- /Yandex.Metrika counter -->
</head>
<body role="document">
    <div class="grid-for-nav">
        <nav data-toggle="nav-shift" class="nav-side stickynav">
            <div class="side-nav-search">
                <a href="index.htm"><i class="fa fa-home"></i> BenchmarkDotNet Documentation</a>
                <div role="search">
                    <form id="search-form" class="form" action="Docnet_search.htm" method="get">
                        <input type="text" name="q" placeholder="Search docs" />
                    </form>
                </div>
            </div>
            <div class="menu menu-vertical" data-spy="affix" role="navigation" aria-label="main navigation">
<ul>
<li class="tocentry"><a href="index.htm">Home</a>
</li>

<li class="tocentry"><a href="Overview.htm">Overview</a>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="Guides.htm">Guides</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="Configs.htm">Configs</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="Advancedfeatures.htm">Advanced features</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="Internals.htm">Internals</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="Contributing.htm">Contributing</a></span>
</li>
<li class="tocentry current"><a class="current" href="FAQ.htm">FAQ</a>
</li>
<li class="tocentry"><a href="Team.htm">Team</a>
</li>
<li class="tocentry"><a href="license.htm">License</a>
</li>
</ul>
				<div class="toc-footer">
					<span class="text-small">
						<hr/>
						<a href="https://github.com/FransBouma/DocNet" target="_blank">Made with <i class="fa fa-github"></i> DocNet</a>
					</span>
				</div>	
			</div>
            &nbsp;
        </nav>
        <section data-toggle="nav-shift" class="nav-content-wrap">
            <nav class="nav-top" role="navigation" aria-label="top navigation">
                <i data-toggle="nav-top" class="fa fa-bars"></i>
                <a href="index.htm">BenchmarkDotNet Documentation</a>
            </nav>
            <div class="nav-content">
                <div role="navigation" aria-label="breadcrumbs navigation">
                    <div class="breadcrumbs">
<ul><li><a href="index.htm">Home</a></li> / <li><a href="FAQ.htm">FAQ</a></li></ul>
					
                    </div>
                    <hr />
                </div>
                <div role="main">
                    <div class="section">
<h1 id="faq-frequently-asked-questions">FAQ (Frequently asked questions)<a class="headerlink" href="#faq-frequently-asked-questions" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h1>
<ul>
<li>
<p><strong>Q</strong> Why can't I install BenchmarkDotNet in Visual Studio 2010/2012/2013?<br />
 <strong>A</strong>
BenchmarkDotNet requires NuGet 3.x+ and can't be installed in old versions of Visual Studio which use NuGet 2.x.
Consider to use Visual Studio 2015/2017 or <a href="http://jetbrains.com/rider/" target="_blank">Rider</a>.
See also: <a href="https://github.com/dotnet/BenchmarkDotNet/issues/237" target="_blank">BenchmarkDotNet#237</a>, <a href="https://github.com/dotnet/roslyn/issues/12780" target="_blank">roslyn#12780</a>.</p>
</li>
<li>
<p><strong>Q</strong> Why can't I install BenchmarkDotNet in a new .NET Core Console App in Visual Studio 2017?<br />
<strong>A</strong> BenchmarkDotNet supports only netcoreapp1.1+.
By default, Visual Studio 2017 creates a new application which targets netcoreapp1.0.
You should upgrade it up to 1.1.
If you want to target netcoreapp1.0 in your main assembly, it's recommended to create a separated project for benchmarks.</p>
</li>
<li>
<p><strong>Q</strong> I created a new .NET Core Console App in Visual Studio 2017. Now I want to run my code on CoreCLR, full .NET Framework, and Mono. How can I do it?<br />
<strong>A</strong> Use the following lines in your <code>.csproj</code> file:</p>
</li>
</ul>
<pre><code class="xml">&lt;TargetFrameworks&gt;netcoreapp1.1;net46&lt;/TargetFrameworks&gt;
&lt;PlatformTarget&gt;AnyCPU&lt;/PlatformTarget&gt;
</code></pre>

<p>And mark your benchmark class with the following attributes:</p>
<pre><code class="cs">[CoreJob, ClrJob, MonoJob]
</code></pre>

<ul>
<li>
<p><strong>Q</strong> My source code targets old versions of .NET Framework or .NET Core, but BenchmarkDotNet requires <code>net46</code> and <code>netcoreapp1.1</code>. How can I run benchmarks in this case?<br />
<strong>A</strong> It's a good practice to introduce an additional console application (e.g. <code>MyAwesomeLibrary.Benchmarks</code>) which will depend on your code and BenchmarkDotNet.
Due to the fact that users usually run benchmarks in a develop environment and don't distribute benchmarks for users, it shouldn't be a problem.</p>
</li>
<li>
<p><strong>Q</strong> I wrote a small benchmark, but BenchmarkDotNet requires a lot of time for time measurements. How can I reduce this time?<br />
<strong>A</strong> By default, BenchmarkDotNet automatically chooses a number of iterations which allows achieving the best precision.
If you don't need such level of precision and just want to have a quick way to get approximated results, you can specify all parameters manually.
For example, you can use the <code>SimpleJob</code> or <code>ShortRunJob</code> attributes:</p>
</li>
</ul>
<pre><code class="cs">[SimpleJob(launchCount: 1, warmupCount: 3, targetCount: 5, invocationCount:100, id: &quot;QuickJob&quot;)]
[ShortRunJob]
</code></pre>

<ul>
<li>
<p><strong>Q</strong> My benchmark unexpectedly stopped and I saw the information about error code. What can I do?<br />
<strong>A</strong> BenchmarkDotNet generates, builds and runs new process for every benchmark. This behavior is sometimes interpreted by anti-virus as dangerous, and the process is killed. Use <code>EnvironmentAnalyser</code> to detect antivirus software and configure your benchmark to use <code>InProcessToolchain</code>.</p>
</li>
<li>
<p><strong>Q</strong> Can I run benchmark on the virtual machine?<br />
<strong>A</strong> Yes, of course. However, it can affect results because of the shared, physical machine, virtualization process and incorrect <code>Stopwatch.Frequency</code>. If you are unsure whether an application is running on virtual environment, use <code>EnvironmentAnalyser</code> to detect VM hypervisor.</p>
</li>
<li>
<p><strong>Q</strong> I have failed to run my benchmarks, I am getting following errors about non-optimized dll. What can I do?  
</p>
</li>
</ul>
<pre class="nocode">Assembly BenchmarkDotNet.Samples which defines benchmarks references non-optimized BenchmarkDotNet
        If you own this dependency, please, build it in RELEASE.
        If you don't, you can create custom config with DontFailOnError to disable our custom policy and allow this b
Assembly BenchmarkDotNet.Samples which defines benchmarks is non-optimized
Benchmark was built without optimization enabled (most probably a DEBUG configuration). Please, build it in RELEASE.
</pre><p><strong>A</strong> You should always run your benchmarks in RELEASE mode with optimizations enabled (default setting for RELEASE). However if you have to use non-optimized 3rd party assembly you have to create custom config to disable our default policy.</p>
<pre><code class="cs">public class AllowNonOptimized : ManualConfig
{
    public AllowNonOptimized()
    {
        Add(JitOptimizationsValidator.DontFailOnError); // ALLOW NON-OPTIMIZED DLLS

        Add(DefaultConfig.Instance.GetLoggers().ToArray()); // manual config has no loggers by default
        Add(DefaultConfig.Instance.GetExporters().ToArray()); // manual config has no exporters by default
        Add(DefaultConfig.Instance.GetColumnProviders().ToArray()); // manual config has no columns by default
    }
}
</code></pre>

<ul>
<li><strong>Q</strong> I have failed to run my benchmarks from LINQPad. How can I fix this problem?  </li>
</ul>
<pre class="nocode">Assembly LINQPadQuery which defines benchmarks references non-optimized LINQPad
Assembly LINQPadQuery which defines benchmarks is non-optimized
Benchmark was built without optimization enabled (most probably a DEBUG configuration). Please, build it in RELEASE.
</pre><p><strong>A</strong> You need to make sure that you are using <strong>AnyCPU</strong> 5.22.05+ build of LINQPad with optimizations enabled. To enable the optimizations you need to go to Preferences -&gt; Query and select <code>compile with /optimize+</code></p>

                    </div>
                </div>
                <footer>
                    <hr />
                    <div role="contentinfo">
BenchmarkDotNet Documentation. &copy;2013-2018. <a href='https://github.com/dotnet/BenchmarkDotNet' target='_blank'>GitHub</a> | <a href='https://www.nuget.org/packages/BenchmarkDotNet/' target='_blank'>NuGet</a>.
                    </div>
                </footer>
            </div>
        </section>
    </div>
    <script src="js/jquery-2.1.1.min.js"></script>
    <script src="js/modernizr-2.8.3.min.js"></script>
    <script src="js/highlight.pack.js"></script>
    <script src="js/theme.js"></script>

</body>
</html>
